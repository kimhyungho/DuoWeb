{"ast":null,"code":"import { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nfunction socailLogInAPI() {\n  return axios.post('/');\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(socailLogInAPI);\n    console.log(\"된다\", result); // yield put({\n    //     type: 'LOG_IN_SUCCESS',\n    //     data: action.data,\n    // });\n  } catch (err) {\n    console.log(\"안된다.\"); // yield put({\n    //     type: 'LOG_IN_FAILURE',\n    //     error: action.response.data,\n    // });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('SOCIAL_LOG_IN_REQUEST', logIn);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn)]);\n}","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/sagas/user.js"],"names":["all","call","fork","put","takeLatest","axios","useSelector","socailLogInAPI","post","logIn","action","result","console","log","err","watchLogIn","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,SAASC,cAAT,GAA0B;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,GAAX,CAAP;AACH;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AAEA,UAAMC,MAAM,GAAG,MAAMV,IAAI,CAACM,cAAD,CAAzB;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,MAAlB,EAJA,CAMA;AACA;AACA;AACA;AAEH,GAXD,CAWE,OAAOG,GAAP,EAAY;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADU,CAEV;AACA;AACA;AACA;AACH;AACJ;;AAED,UAAUE,UAAV,GAAuB;AACnB,QAAMX,UAAU,CAAC,uBAAD,EAA0BK,KAA1B,CAAhB;AACH;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAChC,QAAMhB,GAAG,CAAC,CACNE,IAAI,CAACa,UAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction socailLogInAPI() {\r\n    return axios.post('/')\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n\r\n        const result = yield call(socailLogInAPI);\r\n        \r\n        console.log(\"된다\", result);\r\n\r\n        // yield put({\r\n        //     type: 'LOG_IN_SUCCESS',\r\n        //     data: action.data,\r\n        // });\r\n\r\n    } catch (err) {\r\n        console.log(\"안된다.\");\r\n        // yield put({\r\n        //     type: 'LOG_IN_FAILURE',\r\n        //     error: action.response.data,\r\n        // });\r\n    }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest('SOCIAL_LOG_IN_REQUEST', logIn);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}