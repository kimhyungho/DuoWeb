{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\k\\\\Desktop\\\\DUO\\\\front\\\\components\\\\DetailPost.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    border: 1px solid #000000;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from 'react';\nimport { Button, List, Comment, Popover } from 'antd';\nimport styled from 'styled-components';\nimport CommentForm from './CommentForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadCommentsRequestAction } from '../reducers/comment';\nvar Frame = styled.div(_templateObject());\n_c = Frame;\n\nvar DetailPost = function DetailPost() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      detailLolPost = _useSelector2.detailLolPost;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.comment;\n  }),\n      comments = _useSelector3.comments;\n\n  var dispatch = useDispatch(); // useEffect(() => {\n  //     if (!me.userToken) {\n  //         console.log('확인확인');\n  //         const data2 = { userToken: me.userToken, postId: data.postId };\n  //         dispatch(loadCommentsRequestAction(data2));\n  //     }\n  // }, []);\n\n  var checkComments = function checkComments() {\n    console.log('확인확인');\n    var data = {\n      userToken: me.userToken,\n      postId: detailLolPost.id\n    };\n    dispatch(loadCommentsRequestAction(data));\n  };\n\n  return __jsx(Frame, {\n    style: {\n      width: '100%',\n      padding: '20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    style: {\n      width: '100%'\n    },\n    onClick: checkComments,\n    type: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"\\uB2EB\\uAE30\"), __jsx(\"div\", {\n    style: {\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, detailLolPost.title), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, detailLolPost.content), __jsx(CommentForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), __jsx(List, {\n    header: \"\".concat(comments ? comments.length : 0, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, __jsx(Comment, {\n        author: item.nickname,\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(DetailPost, \"Kc5O6SSm+748t+ZZPAsU6FkFqoQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c2 = DetailPost;\nexport default DetailPost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Frame\");\n$RefreshReg$(_c2, \"DetailPost\");","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/components/DetailPost.js"],"names":["React","useEffect","Button","List","Comment","Popover","styled","CommentForm","useDispatch","useSelector","loadCommentsRequestAction","Frame","div","DetailPost","state","user","me","post","detailLolPost","comment","comments","dispatch","checkComments","console","log","data","userToken","postId","id","width","padding","fontSize","title","content","length","item","nickname"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Button, List, Comment, Popover } from 'antd';\r\nimport styled from 'styled-components';\r\nimport CommentForm from './CommentForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadCommentsRequestAction } from '../reducers/comment'\r\n\r\nconst Frame = styled.div`\r\n    border: 1px solid #000000;\r\n`;\r\n\r\nconst DetailPost = () => {\r\n    const { me } = useSelector((state) => state.user);\r\n    const {detailLolPost} = useSelector((state) => state.post);\r\n    const { comments } = useSelector((state) => state.comment);\r\n    const dispatch = useDispatch();\r\n\r\n    // useEffect(() => {\r\n    //     if (!me.userToken) {\r\n    //         console.log('확인확인');\r\n    //         const data2 = { userToken: me.userToken, postId: data.postId };\r\n    //         dispatch(loadCommentsRequestAction(data2));\r\n    //     }\r\n    // }, []);\r\n\r\n    const checkComments = () => {\r\n        console.log('확인확인');\r\n        const data = { userToken: me.userToken, postId: detailLolPost.id };\r\n        dispatch(loadCommentsRequestAction(data));\r\n    }\r\n\r\n    return (\r\n        <Frame style={{ width: '100%', padding: '20px' }}>\r\n            <Button style={{ width: '100%' }} onClick={checkComments} type=\"primary\">닫기</Button>\r\n            <div style={{ fontSize: 20 }}>{detailLolPost.title}</div>\r\n            <div>{detailLolPost.content}</div>\r\n            <CommentForm />\r\n            <List\r\n                header={`${comments ? comments.length : 0}개의 댓글`}\r\n                itemLayout=\"horizontal\"\r\n                dataSource={comments}\r\n                renderItem={(item) => (\r\n                    <li>\r\n                        <Comment\r\n                            author={item.nickname}\r\n                            content={item.content}\r\n                        />\r\n                    </li>\r\n                )}\r\n            >\r\n            </List>\r\n        </Frame>\r\n    );\r\n};\r\n\r\nexport default DetailPost;"]},"metadata":{},"sourceType":"module"}