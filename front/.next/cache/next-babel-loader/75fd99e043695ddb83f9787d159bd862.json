{"ast":null,"code":"import { all, fork, put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\n\nfunction loginAPI(data) {\n  return axios.post(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/auth/${data.platform}`, {}, {\n    headers: {\n      Authorization: data.accessToken\n    }\n  });\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    console.log(result);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data.code\n    });\n  }\n}\n\nfunction* logOut() {\n  try {\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/auth/${data.platform}`, {\n    nickname: data.nickname\n  }, {\n    headers: {\n      Authorization: data.accessToken\n    }\n  });\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(err.response.data);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/sagas/user.js"],"names":["all","fork","put","takeLatest","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loginAPI","data","post","platform","headers","Authorization","accessToken","logIn","action","result","console","log","type","err","error","response","code","logOut","signUpAPI","nickname","signUp","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, takeLatest, call } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n} from '../reducers/user';\r\n\r\nfunction loginAPI(data) {\r\n    return axios.post(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/auth/${data.platform}`,\r\n        {}, { headers: { Authorization: data.accessToken } });\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        const result = yield call(loginAPI, action.data);\r\n        console.log(result);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data.code,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* logOut() {\r\n    try {\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/auth/${data.platform}`,\r\n        { nickname: data.nickname }, { headers: { Authorization: data.accessToken } });\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        const result = yield call(signUpAPI, action.data);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err.response.data);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}