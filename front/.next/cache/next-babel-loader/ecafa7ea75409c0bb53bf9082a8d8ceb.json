{"ast":null,"code":"import axios from \"axios\";\nimport { all, put, takeLatest, fork, call } from \"redux-saga/effects\";\nimport { LOAD_ALL_LOL_POSTS_REQUEST, LOAD_ALL_LOL_POSTS_SUCCESS, LOAD_ALL_LOL_POSTS_FAILURE, ADD_LOL_POST_REQUEST, ADD_LOL_POST_SUCCESS, ADD_LOL_POST_FAILURE, DELETE_LOL_POST_REQUEST, DELETE_LOL_POST_SUCCESS, DELETE_LOL_POST_FAILURE } from '../reducers/post';\n\nfunction loadAllLolPostsAPI(data) {\n  return axios.get(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`, {}, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\nfunction* loadAllLolPosts(action) {\n  try {\n    const result = yield call(loadAllLolPostsAPI, action.data);\n    console.log(action.data);\n    yield put({\n      type: LOAD_ALL_LOL_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: LOAD_ALL_LOL_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addLolPostAPI(data) {\n  return axios.post(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`, {\n    userNickname: data.userNickname,\n    userId: data.userId,\n    gameMode: data.gameMode,\n    title: data.title,\n    startTier: data.startTier,\n    endTier: data.endTier,\n    endTime: data.endTime,\n    headCount: data.headCount,\n    top: data.top,\n    bottom: data.bottom,\n    mid: data.mid,\n    jungle: data.jungle,\n    support: data.support,\n    content: data.content,\n    talkon: data.talkOn\n  }, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\n;\n\nfunction* addLolPost(action) {\n  try {\n    const result = yield call(addLolPostAPI, action.data);\n    console.log(result);\n    yield put({\n      type: ADD_LOL_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(err.response);\n    yield put({\n      type: ADD_LOL_POST_FAILURE,\n      error: err.response\n    });\n  }\n}\n\nfunction deleteLolPostAPI(data) {\n  return axios.post(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`, {}, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\n;\n\nfunction* deleteLolPost(action) {\n  try {\n    const result = yield call(deleteLolPostAPI, action.data);\n    console.log(result);\n    yield put({\n      type: DELETE_LOL_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(err.response);\n    yield put({\n      type: DELETE_LOL_POST_FAILURE,\n      error: err.response\n    });\n  }\n}\n\nfunction* watchLoadAllLolPosts() {\n  yield takeLatest(LOAD_ALL_LOL_POSTS_REQUEST, loadAllLolPosts);\n}\n\nfunction* watchAddLolPost() {\n  yield takeLatest(ADD_LOL_POST_REQUEST, addLolPost);\n}\n\nfunction* watchDeleteLolPost() {\n  yield takeLatest(DELETE_LOL_POST_REQUEST, deleteLolPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLoadAllLolPosts), fork(watchAddLolPost), fork(watchDeleteLolPost)]);\n}","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/sagas/post.js"],"names":["axios","all","put","takeLatest","fork","call","LOAD_ALL_LOL_POSTS_REQUEST","LOAD_ALL_LOL_POSTS_SUCCESS","LOAD_ALL_LOL_POSTS_FAILURE","ADD_LOL_POST_REQUEST","ADD_LOL_POST_SUCCESS","ADD_LOL_POST_FAILURE","DELETE_LOL_POST_REQUEST","DELETE_LOL_POST_SUCCESS","DELETE_LOL_POST_FAILURE","loadAllLolPostsAPI","data","get","headers","Authorization","userToken","loadAllLolPosts","action","result","console","log","type","err","error","response","addLolPostAPI","post","userNickname","userId","gameMode","title","startTier","endTier","endTime","headCount","top","bottom","mid","jungle","support","content","talkon","talkOn","addLolPost","deleteLolPostAPI","deleteLolPost","watchLoadAllLolPosts","watchAddLolPost","watchDeleteLolPost","postSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,EAA+BC,IAA/B,EAAqCC,IAArC,QAAiD,oBAAjD;AAEA,SACIC,0BADJ,EAEIC,0BAFJ,EAGIC,0BAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,EAMIC,oBANJ,EAOIC,uBAPJ,EAQIC,uBARJ,EASIC,uBATJ,QAUO,kBAVP;;AAYA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AAC9B,SAAOhB,KAAK,CAACiB,GAAN,CAAW,yEAAX,EACH,EADG,EACC;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEH,IAAI,CAACI;AAAtB;AAAX,GADD,CAAP;AAEH;;AAED,UAAUC,eAAV,CAA0BC,MAA1B,EAAkC;AAC9B,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMlB,IAAI,CAACU,kBAAD,EAAqBO,MAAM,CAACN,IAA5B,CAAzB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACN,IAAnB;AACA,UAAMd,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEnB,0BADA;AAENS,MAAAA,IAAI,EAAEO,MAAM,CAACP;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOW,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,UAAMzB,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAElB,0BADA;AAENoB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAab;AAFd,KAAD,CAAT;AAIH;AACJ;;AAGD,SAASc,aAAT,CAAuBd,IAAvB,EAA6B;AACzB,SAAOhB,KAAK,CAAC+B,IAAN,CAAY,yEAAZ,EACH;AAAIC,IAAAA,YAAY,EAAEhB,IAAI,CAACgB,YAAvB;AAAqCC,IAAAA,MAAM,EAAEjB,IAAI,CAACiB,MAAlD;AACIC,IAAAA,QAAQ,EAAElB,IAAI,CAACkB,QADnB;AAC6BC,IAAAA,KAAK,EAAEnB,IAAI,CAACmB,KADzC;AAEIC,IAAAA,SAAS,EAAEpB,IAAI,CAACoB,SAFpB;AAE+BC,IAAAA,OAAO,EAAErB,IAAI,CAACqB,OAF7C;AAGIC,IAAAA,OAAO,EAAEtB,IAAI,CAACsB,OAHlB;AAG2BC,IAAAA,SAAS,EAAEvB,IAAI,CAACuB,SAH3C;AAIIC,IAAAA,GAAG,EAAExB,IAAI,CAACwB,GAJd;AAImBC,IAAAA,MAAM,EAAEzB,IAAI,CAACyB,MAJhC;AAKIC,IAAAA,GAAG,EAAE1B,IAAI,CAAC0B,GALd;AAKmBC,IAAAA,MAAM,EAAE3B,IAAI,CAAC2B,MALhC;AAMIC,IAAAA,OAAO,EAAE5B,IAAI,CAAC4B,OANlB;AAM2BC,IAAAA,OAAO,EAAE7B,IAAI,CAAC6B,OANzC;AAOIC,IAAAA,MAAM,EAAE9B,IAAI,CAAC+B;AAPjB,GADG,EASA;AAAE7B,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEH,IAAI,CAACI;AAAtB;AAAX,GATA,CAAP;AAUH;;AAAA;;AAED,UAAU4B,UAAV,CAAqB1B,MAArB,EAA6B;AACzB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMlB,IAAI,CAACyB,aAAD,EAAgBR,MAAM,CAACN,IAAvB,CAAzB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,UAAMrB,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEhB,oBADA;AAENM,MAAAA,IAAI,EAAEO,MAAM,CAACP;AAFP,KAAD,CAAT;AAIH,GARD,CAQE,OAAOW,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACE,QAAhB;AACA,UAAM3B,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEf,oBADA;AAENiB,MAAAA,KAAK,EAAED,GAAG,CAACE;AAFL,KAAD,CAAT;AAIH;AACJ;;AAED,SAASoB,gBAAT,CAA0BjC,IAA1B,EAAgC;AAC5B,SAAOhB,KAAK,CAAC+B,IAAN,CAAY,yEAAZ,EACH,EADG,EACC;AAAEb,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEH,IAAI,CAACI;AAAtB;AAAX,GADD,CAAP;AAEH;;AAAA;;AAED,UAAU8B,aAAV,CAAwB5B,MAAxB,EAAgC;AAC5B,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMlB,IAAI,CAAC4C,gBAAD,EAAmB3B,MAAM,CAACN,IAA1B,CAAzB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,UAAMrB,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEb,uBADA;AAENG,MAAAA,IAAI,EAAEO,MAAM,CAACP;AAFP,KAAD,CAAT;AAIH,GARD,CAQE,OAAOW,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACE,QAAhB;AACA,UAAM3B,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEZ,uBADA;AAENc,MAAAA,KAAK,EAAED,GAAG,CAACE;AAFL,KAAD,CAAT;AAIH;AACJ;;AAGD,UAAUsB,oBAAV,GAAiC;AAC7B,QAAMhD,UAAU,CAACG,0BAAD,EAA6Be,eAA7B,CAAhB;AACH;;AAED,UAAU+B,eAAV,GAA4B;AACxB,QAAMjD,UAAU,CAACM,oBAAD,EAAuBuC,UAAvB,CAAhB;AACH;;AAED,UAAUK,kBAAV,GAA+B;AAC3B,QAAMlD,UAAU,CAACS,uBAAD,EAA0BsC,aAA1B,CAAhB;AACH;;AAED,eAAe,UAAUI,QAAV,GAAqB;AAChC,QAAMrD,GAAG,CAAC,CACNG,IAAI,CAAC+C,oBAAD,CADE,EAEN/C,IAAI,CAACgD,eAAD,CAFE,EAGNhD,IAAI,CAACiD,kBAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import axios from \"axios\";\r\nimport { all, put, takeLatest, fork, call } from \"redux-saga/effects\";\r\n\r\nimport {\r\n    LOAD_ALL_LOL_POSTS_REQUEST,\r\n    LOAD_ALL_LOL_POSTS_SUCCESS,\r\n    LOAD_ALL_LOL_POSTS_FAILURE,\r\n    ADD_LOL_POST_REQUEST,\r\n    ADD_LOL_POST_SUCCESS,\r\n    ADD_LOL_POST_FAILURE,\r\n    DELETE_LOL_POST_REQUEST,\r\n    DELETE_LOL_POST_SUCCESS,\r\n    DELETE_LOL_POST_FAILURE,\r\n} from '../reducers/post';\r\n\r\nfunction loadAllLolPostsAPI(data) {\r\n    return axios.get(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`,\r\n        {}, { headers: { Authorization: data.userToken } });\r\n}\r\n\r\nfunction* loadAllLolPosts(action) {\r\n    try {\r\n        const result = yield call(loadAllLolPostsAPI, action.data);\r\n        console.log(action.data);\r\n        yield put({\r\n            type: LOAD_ALL_LOL_POSTS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n        yield put({\r\n            type: LOAD_ALL_LOL_POSTS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction addLolPostAPI(data) {\r\n    return axios.post(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`,\r\n        {   userNickname: data.userNickname, userId: data.userId,\r\n            gameMode: data.gameMode, title: data.title,\r\n            startTier: data.startTier, endTier: data.endTier,\r\n            endTime: data.endTime, headCount: data.headCount,\r\n            top: data.top, bottom: data.bottom,\r\n            mid: data.mid, jungle: data.jungle, \r\n            support: data.support, content: data.content, \r\n            talkon: data.talkOn,\r\n        }, { headers: { Authorization: data.userToken } });\r\n};\r\n\r\nfunction* addLolPost(action) {\r\n    try {\r\n        const result = yield call(addLolPostAPI, action.data);\r\n        console.log(result)\r\n\r\n        yield put({\r\n            type: ADD_LOL_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err.response);\r\n        yield put({\r\n            type: ADD_LOL_POST_FAILURE,\r\n            error: err.response,\r\n        });\r\n    }\r\n}\r\n\r\nfunction deleteLolPostAPI(data) {\r\n    return axios.post(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`,\r\n        {}, { headers: { Authorization: data.userToken } });\r\n};\r\n\r\nfunction* deleteLolPost(action) {\r\n    try {\r\n        const result = yield call(deleteLolPostAPI, action.data);\r\n        console.log(result)\r\n\r\n        yield put({\r\n            type: DELETE_LOL_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err.response);\r\n        yield put({\r\n            type: DELETE_LOL_POST_FAILURE,\r\n            error: err.response,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* watchLoadAllLolPosts() {\r\n    yield takeLatest(LOAD_ALL_LOL_POSTS_REQUEST, loadAllLolPosts);\r\n}\r\n\r\nfunction* watchAddLolPost() {\r\n    yield takeLatest(ADD_LOL_POST_REQUEST, addLolPost);\r\n}\r\n\r\nfunction* watchDeleteLolPost() {\r\n    yield takeLatest(DELETE_LOL_POST_REQUEST, deleteLolPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchLoadAllLolPosts),\r\n        fork(watchAddLolPost),\r\n        fork(watchDeleteLolPost),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}