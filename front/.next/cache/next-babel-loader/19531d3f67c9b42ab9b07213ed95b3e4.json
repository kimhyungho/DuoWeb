{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nvar configureStore = function configureStore(context) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","createSagaMiddleware","createWrapper","composeWithDevTools","reducer","configureStore","context","sagaMiddleware","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;AAClC,MAAMC,cAAc,GAAGN,oBAAoB,EAA3C;AACA,MAAMO,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,MAAME,QAAQ,GAAG,QACbT,OAAO,CAACF,eAAe,MAAf,SAAmBU,WAAnB,CAAD,CADM,GAEbL,mBAAmB,CACnBL,eAAe,MAAf,SAAmBU,WAAnB,CADmB,CAFvB;AAKA,MAAME,KAAK,GAAGX,WAAW,CAACK,OAAD,EAAUK,QAAV,CAAzB;AACA,SAAOC,KAAP;AACD,CAVD;;AAYA,IAAMC,OAAO,GAAGT,aAAa,CAACG,cAAD,EAAiB;AAAEO,EAAAA,KAAK;AAAP,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createWrapper } from 'next-redux-wrapper';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport reducer from '../reducers';\r\n\r\nconst configureStore = (context) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware];\r\n  const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(\r\n      applyMiddleware(...middlewares),\r\n    );\r\n  const store = createStore(reducer, enhancer);\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === 'development' });\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}