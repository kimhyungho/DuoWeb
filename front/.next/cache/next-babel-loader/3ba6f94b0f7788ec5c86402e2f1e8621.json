{"ast":null,"code":"import produce from '../util/produce';\nexport const initialState = {\n  posts: [],\n  myLolPosts: [],\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  addLolPostLoading: false,\n  addLolPostDone: false,\n  addLolPostError: null,\n  deleteLolPostLoading: false,\n  deleteLolPostDone: false,\n  deleteLolPostError: null,\n  updateLolPostLoading: false,\n  updateLolPostDone: false,\n  updateLolPostError: null,\n  detailLolPostOn: false,\n  detailLolPost: null\n};\nexport const LOAD_ALL_LOL_POSTS_REQUEST = 'LOAD_ALL_LOL_POSTS_REQUEST';\nexport const LOAD_ALL_LOL_POSTS_SUCCESS = 'LOAD_ALL_LOL_POSTS_SUCCESS';\nexport const LOAD_ALL_LOL_POSTS_FAILURE = 'LOAD_ALL_LOL_POSTS_FAILURE';\nexport const ADD_LOL_POST_REQUEST = 'ADD_LOL_POST_REQUEST';\nexport const ADD_LOL_POST_SUCCESS = 'ADD_LOL_POST_SUCCESS';\nexport const ADD_LOL_POST_FAILURE = 'ADD_LOL_POST_FAILURE';\nexport const DELETE_LOL_POST_REQUEST = 'DELETE_LOL_POST_REQUEST';\nexport const DELETE_LOL_POST_SUCCESS = 'DELETE_LOL_POST_SUCCESS';\nexport const DELETE_LOL_POST_FAILURE = 'DELETE_LOL_POST_FAILURE';\nexport const UPDATE_LOL_POST_REQUEST = 'UPDATE_LOL_POST_REQUEST';\nexport const UPDATE_LOL_POST_SUCCESS = 'UPDATE_LOL_POST_SUCCESS';\nexport const UPDATE_LOL_POST_FAILURE = 'UPDATE_LOL_POST_FAILURE';\nexport const DETAIL_LOL_POST_ON = 'DETAIL_LOL_POST_ON';\nexport const DETAIL_LOL_POST_OFF = 'DETAIL_LOL_POST_OFF';\nexport const loadAllLolPostsRequestAction = data => ({\n  type: LOAD_ALL_LOL_POSTS_REQUEST,\n  data\n});\nexport const addLolPostRequestAction = data => ({\n  type: ADD_LOL_POST_REQUEST,\n  data\n});\nexport const deleteLolPostRequestAction = data => ({\n  type: DELETE_LOL_POST_REQUEST,\n  data\n});\nexport const updateLolPostRequestAction = data => ({\n  type: UPDATE_LOL_POST_REQUEST,\n  data\n});\nexport const detailLolPostOnAction = data => ({\n  type: DETAIL_LOL_POST_ON,\n  data\n});\nexport const detailLolPostOffAction = () => ({\n  type: DETAIL_LOL_POST_OFF\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_ALL_LOL_POSTS_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n\n    case LOAD_ALL_LOL_POSTS_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.posts = action.data.concat(draft.posts);\n      break;\n\n    case LOAD_ALL_LOL_POSTS_FAILURE:\n      draft.loadPostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n\n    case ADD_LOL_POST_REQUEST:\n      draft.addLolPostLoading = true;\n      draft.addLolPostDone = false;\n      draft.addLolPostError = null;\n      break;\n\n    case ADD_LOL_POST_SUCCESS:\n      draft.addLolPostLoading = false;\n      draft.addLolPostDone = true;\n      break;\n\n    case ADD_LOL_POST_FAILURE:\n      draft.addLolPostLoading = false;\n      draft.addLolPostError = action.error;\n      break;\n\n    case DELETE_LOL_POST_REQUEST:\n      draft.deleteLolPostLoading = true;\n      draft.deleteLolPostDone = false;\n      draft.deleteLolPostError = null;\n      break;\n\n    case DELETE_LOL_POST_SUCCESS:\n      draft.deleteLolPostLoading = false;\n      draft.deleteLolPostDone = true;\n      break;\n\n    case DELETE_LOL_POST_FAILURE:\n      draft.deleteLolPostLoading = false;\n      draft.deleteLolPostError = action.error;\n      break;\n\n    case UPDATE_LOL_POST_REQUEST:\n      draft.updateLolPostLoading = true;\n      draft.updateLolPostDone = false;\n      draft.updateLolPostError = null;\n      break;\n\n    case UPDATE_LOL_POST_SUCCESS:\n      draft.updateLolPostLoading = false;\n      draft.updateLolPostDone = true;\n      draft.detailLolPost.top = action.data2.top;\n      draft.detailLolPost.jungle = action.data2.jungle;\n      draft.detailLolPost.mid = action.data2.mid;\n      draft.detailLolPost.bottom = action.data2.bottom;\n      draft.detailLolPost.support = action.data2.support;\n      draft.detailLolPost.endTime = action.data2.endTime;\n      draft.detailLolPost.headCount = action.data2.headCount;\n      draft.detailLolPost.gameMode = action.data2.gameMode;\n      draft.detailLolPost.title = action.data2.title;\n      draft.detailLolPost.content = action.data2.content;\n      draft.detailLolPost.talkOn = action.data2.talkOn;\n      break;\n\n    case UPDATE_LOL_POST_FAILURE:\n      draft.updateLolPostLoading = false;\n      draft.updateLolPostError = action.error;\n      break;\n\n    case DETAIL_LOL_POST_ON:\n      draft.detailLolPostOn = true;\n      draft.detailLolPost = action.data;\n      break;\n\n    case DETAIL_LOL_POST_OFF:\n      draft.detailLolPostOn = false;\n      draft.detailLolPost = null;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/reducers/post.js"],"names":["produce","initialState","posts","myLolPosts","loadPostLoading","loadPostDone","loadPostError","addLolPostLoading","addLolPostDone","addLolPostError","deleteLolPostLoading","deleteLolPostDone","deleteLolPostError","updateLolPostLoading","updateLolPostDone","updateLolPostError","detailLolPostOn","detailLolPost","LOAD_ALL_LOL_POSTS_REQUEST","LOAD_ALL_LOL_POSTS_SUCCESS","LOAD_ALL_LOL_POSTS_FAILURE","ADD_LOL_POST_REQUEST","ADD_LOL_POST_SUCCESS","ADD_LOL_POST_FAILURE","DELETE_LOL_POST_REQUEST","DELETE_LOL_POST_SUCCESS","DELETE_LOL_POST_FAILURE","UPDATE_LOL_POST_REQUEST","UPDATE_LOL_POST_SUCCESS","UPDATE_LOL_POST_FAILURE","DETAIL_LOL_POST_ON","DETAIL_LOL_POST_OFF","loadAllLolPostsRequestAction","data","type","addLolPostRequestAction","deleteLolPostRequestAction","updateLolPostRequestAction","detailLolPostOnAction","detailLolPostOffAction","reducer","state","action","draft","concat","error","top","data2","jungle","mid","bottom","support","endTime","headCount","gameMode","title","content","talkOn"],"mappings":"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","sourcesContent":["import produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n    posts: [],\r\n    myLolPosts: [],\r\n    loadPostLoading: false,\r\n    loadPostDone: false,\r\n    loadPostError: null,\r\n    addLolPostLoading: false,\r\n    addLolPostDone: false,\r\n    addLolPostError: null,\r\n    deleteLolPostLoading: false,\r\n    deleteLolPostDone: false,\r\n    deleteLolPostError: null,\r\n    updateLolPostLoading: false,\r\n    updateLolPostDone: false,\r\n    updateLolPostError: null,\r\n\r\n    detailLolPostOn: false,\r\n    detailLolPost: null,\r\n};\r\n\r\nexport const LOAD_ALL_LOL_POSTS_REQUEST = 'LOAD_ALL_LOL_POSTS_REQUEST';\r\nexport const LOAD_ALL_LOL_POSTS_SUCCESS = 'LOAD_ALL_LOL_POSTS_SUCCESS';\r\nexport const LOAD_ALL_LOL_POSTS_FAILURE = 'LOAD_ALL_LOL_POSTS_FAILURE';\r\n\r\nexport const ADD_LOL_POST_REQUEST = 'ADD_LOL_POST_REQUEST';\r\nexport const ADD_LOL_POST_SUCCESS = 'ADD_LOL_POST_SUCCESS';\r\nexport const ADD_LOL_POST_FAILURE = 'ADD_LOL_POST_FAILURE';\r\n\r\nexport const DELETE_LOL_POST_REQUEST = 'DELETE_LOL_POST_REQUEST';\r\nexport const DELETE_LOL_POST_SUCCESS = 'DELETE_LOL_POST_SUCCESS';\r\nexport const DELETE_LOL_POST_FAILURE = 'DELETE_LOL_POST_FAILURE';\r\n\r\nexport const UPDATE_LOL_POST_REQUEST = 'UPDATE_LOL_POST_REQUEST';\r\nexport const UPDATE_LOL_POST_SUCCESS = 'UPDATE_LOL_POST_SUCCESS';\r\nexport const UPDATE_LOL_POST_FAILURE = 'UPDATE_LOL_POST_FAILURE';\r\n\r\nexport const DETAIL_LOL_POST_ON = 'DETAIL_LOL_POST_ON';\r\nexport const DETAIL_LOL_POST_OFF = 'DETAIL_LOL_POST_OFF';\r\n\r\nexport const loadAllLolPostsRequestAction = (data) => ({\r\n    type: LOAD_ALL_LOL_POSTS_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const addLolPostRequestAction = (data) => ({\r\n    type: ADD_LOL_POST_REQUEST,\r\n    data,\r\n});\r\n\r\n\r\nexport const deleteLolPostRequestAction = (data) => ({\r\n    type: DELETE_LOL_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const updateLolPostRequestAction = (data) => ({\r\n    type: UPDATE_LOL_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const detailLolPostOnAction = (data) => ({\r\n    type: DETAIL_LOL_POST_ON,\r\n    data,\r\n});\r\n\r\nexport const detailLolPostOffAction = () => ({\r\n    type: DETAIL_LOL_POST_OFF,\r\n});\r\n\r\n\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case LOAD_ALL_LOL_POSTS_REQUEST:\r\n            draft.loadPostLoading = true;\r\n            draft.loadPostDone = false;\r\n            draft.loadPostError = null;\r\n            break;\r\n        case LOAD_ALL_LOL_POSTS_SUCCESS:\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostDone = true;\r\n            draft.posts = action.data.concat(draft.posts);\r\n            break;\r\n        case LOAD_ALL_LOL_POSTS_FAILURE:\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostError = action.error;\r\n            break;\r\n        case ADD_LOL_POST_REQUEST:\r\n            draft.addLolPostLoading = true;\r\n            draft.addLolPostDone = false;\r\n            draft.addLolPostError = null;\r\n            break;\r\n        case ADD_LOL_POST_SUCCESS:\r\n            draft.addLolPostLoading = false;\r\n            draft.addLolPostDone = true;\r\n            break;\r\n        case ADD_LOL_POST_FAILURE:\r\n            draft.addLolPostLoading = false;\r\n            draft.addLolPostError = action.error;\r\n            break;\r\n        case DELETE_LOL_POST_REQUEST:\r\n            draft.deleteLolPostLoading = true;\r\n            draft.deleteLolPostDone = false;\r\n            draft.deleteLolPostError = null;\r\n            break;\r\n        case DELETE_LOL_POST_SUCCESS:\r\n            draft.deleteLolPostLoading = false;\r\n            draft.deleteLolPostDone = true;\r\n            break;\r\n        case DELETE_LOL_POST_FAILURE:\r\n            draft.deleteLolPostLoading = false;\r\n            draft.deleteLolPostError = action.error;\r\n            break;\r\n        case UPDATE_LOL_POST_REQUEST:\r\n            draft.updateLolPostLoading = true;\r\n            draft.updateLolPostDone = false;\r\n            draft.updateLolPostError = null;\r\n            break;\r\n        case UPDATE_LOL_POST_SUCCESS:\r\n            draft.updateLolPostLoading = false;\r\n            draft.updateLolPostDone = true;\r\n            draft.detailLolPost.top = action.data2.top;\r\n            draft.detailLolPost.jungle = action.data2.jungle;\r\n            draft.detailLolPost.mid = action.data2.mid;\r\n            draft.detailLolPost.bottom = action.data2.bottom;\r\n            draft.detailLolPost.support = action.data2.support;\r\n            draft.detailLolPost.endTime = action.data2.endTime;\r\n            draft.detailLolPost.headCount = action.data2.headCount;\r\n            draft.detailLolPost.gameMode = action.data2.gameMode;\r\n            draft.detailLolPost.title = action.data2.title;\r\n            draft.detailLolPost.content = action.data2.content;\r\n            draft.detailLolPost.talkOn = action.data2.talkOn;\r\n            break;\r\n        case UPDATE_LOL_POST_FAILURE:\r\n            draft.updateLolPostLoading = false;\r\n            draft.updateLolPostError = action.error;\r\n            break;\r\n        case DETAIL_LOL_POST_ON:\r\n            draft.detailLolPostOn = true;\r\n            draft.detailLolPost = action.data;\r\n            break;\r\n        case DETAIL_LOL_POST_OFF:\r\n            draft.detailLolPostOn = false;\r\n            draft.detailLolPost = null;\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}