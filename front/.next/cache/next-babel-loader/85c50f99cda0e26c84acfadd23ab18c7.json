{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k\\\\Desktop\\\\DUO\\\\front\\\\components\\\\LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Button, Form, Result } from 'antd';\nimport KakaoLogin from 'react-kakao-login';\nimport NaverLogin from 'react-login-by-naver';\nimport GoogleLogin from 'react-google-login';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { socailLoginRequest } from '../reducers/user';\nconst KaKaoBtn = styled(KakaoLogin)`\n    width: 300px;\n    height: 50px;\n    background-color: #f7f30c;\n    font-weight: 1000;\n`;\nconst NaverBtn = styled(Button)`\n    width: 300px;\n    height: 50px;\n    background-color: #10cc23;\n    font-weight: 1000;\n    color: #ffffff;\n`;\nconst GoogleBtn = styled(GoogleLogin)`\n    width: 300px;\n    height: 50px;\n    \n`;\nconst LoginWrapper = styled(Form)`\n    padding: 10px;\n`;\n\nconst LoginFrom = () => {\n  const dispatch = useDispatch();\n\n  const responseKakao = response => {\n    console.log(response.response.access_token);\n    const data = {\n      accessToken: response.response.access_token,\n      platform: 'kakao'\n    };\n    dispatch(socailLoginRequest(data));\n  };\n\n  const responseNaver = response => {\n    if (false) {\n      if (window.location.origin + '/' != window.location.href) {\n        const location = window.location.href.split('=')[1];\n        const accessToken = location.split('&')[0];\n        const data = {\n          accessToken: accessToken,\n          platform: 'naver'\n        };\n        dispatch(socailLoginRequest(data));\n      }\n    }\n  };\n\n  const responseGoogle = response => {\n    console.log(response.accessToken);\n    const data = {\n      accessToken: response.accessToken,\n      platform: 'google'\n    };\n    dispatch(socailLoginRequest(data));\n  };\n\n  const responseFail = err => {\n    console.error(err);\n  };\n\n  return __jsx(LoginWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(KaKaoBtn, {\n    jsKey: '593246069c7b7a42344710a951c039ee',\n    buttonText: \"\\uCE74\\uCE74\\uC624\\uB85C\\uADF8\\uC778\",\n    onSuccess: responseKakao,\n    onFailure: responseFail,\n    getProfile: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), __jsx(NaverLogin, {\n    clientId: \"0xe5BaDwdA6UNdboCXn7\",\n    callbackUrl: \"http://127.0.0.1:3000/\",\n    render: props => __jsx(NaverBtn, {\n      onClick: props.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 36\n      }\n    }, \"\\uB124\\uC774\\uBC84 \\uB85C\\uADF8\\uC778\"),\n    onSuccess: res => console.log('성공'),\n    onFailure: () => console.log('naver login fail'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), __jsx(GoogleBtn, {\n    clientId: '39496035317-r14irfnovjild7jovff5n0grpthkb206.apps.googleusercontent.com',\n    buttonText: \"\\uAD6C\\uAE00\\uB85C\\uADF8\\uC778\",\n    onSuccess: responseGoogle,\n    onFailure: responseFail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default LoginFrom;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/components/LoginForm.js"],"names":["React","useState","useCallback","Button","Form","Result","KakaoLogin","NaverLogin","GoogleLogin","styled","useDispatch","useSelector","socailLoginRequest","KaKaoBtn","NaverBtn","GoogleBtn","LoginWrapper","LoginFrom","dispatch","responseKakao","response","console","log","access_token","data","accessToken","platform","responseNaver","window","location","origin","href","split","responseGoogle","responseFail","err","error","props","onClick","res"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Button, Form, Result } from 'antd';\r\nimport KakaoLogin from 'react-kakao-login';\r\nimport NaverLogin from 'react-login-by-naver';\r\nimport GoogleLogin from 'react-google-login';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { socailLoginRequest } from '../reducers/user';\r\n\r\n\r\nconst KaKaoBtn = styled(KakaoLogin)`\r\n    width: 300px;\r\n    height: 50px;\r\n    background-color: #f7f30c;\r\n    font-weight: 1000;\r\n`;\r\n\r\nconst NaverBtn = styled(Button)`\r\n    width: 300px;\r\n    height: 50px;\r\n    background-color: #10cc23;\r\n    font-weight: 1000;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst GoogleBtn = styled(GoogleLogin)`\r\n    width: 300px;\r\n    height: 50px;\r\n    \r\n`;\r\n\r\n\r\nconst LoginWrapper = styled(Form)`\r\n    padding: 10px;\r\n`;\r\n\r\nconst LoginFrom = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const responseKakao = (response) => {\r\n        console.log(response.response.access_token);\r\n        const data = { accessToken: response.response.access_token, platform: 'kakao' };\r\n        dispatch(socailLoginRequest(data));\r\n    };\r\n\r\n    const responseNaver = (response) => {\r\n        if (typeof window !== 'undefined') {\r\n            if ((window.location.origin + '/') != window.location.href) {\r\n                const location = window.location.href.split('=')[1];\r\n                const accessToken = location.split('&')[0];\r\n                const data = { accessToken: accessToken, platform: 'naver' };\r\n                dispatch(socailLoginRequest(data));\r\n            }\r\n        }\r\n    }\r\n\r\n    const responseGoogle = (response) => {\r\n        console.log(response.accessToken)\r\n        const data = { accessToken: response.accessToken, platform: 'google' };\r\n        dispatch(socailLoginRequest(data));\r\n    };\r\n\r\n    const responseFail = (err) => {\r\n        console.error(err);\r\n\r\n    };\r\n\r\n    return (\r\n        <LoginWrapper>\r\n            <KaKaoBtn\r\n                jsKey={'593246069c7b7a42344710a951c039ee'}\r\n                buttonText=\"카카오로그인\"\r\n                onSuccess={responseKakao}\r\n                onFailure={responseFail}\r\n                getProfile={true}\r\n            ></KaKaoBtn>\r\n            <br />\r\n            <NaverLogin\r\n                clientId=\"0xe5BaDwdA6UNdboCXn7\"\r\n                callbackUrl=\"http://127.0.0.1:3000/\"\r\n                render={(props) => <NaverBtn onClick={props.onClick}>네이버 로그인</NaverBtn>}\r\n                onSuccess={(res) => console.log('성공')}\r\n                onFailure={() => console.log('naver login fail')}\r\n            />\r\n            <br />\r\n            <GoogleBtn\r\n                clientId={'39496035317-r14irfnovjild7jovff5n0grpthkb206.apps.googleusercontent.com'}\r\n                buttonText=\"구글로그인\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseFail}\r\n            ></GoogleBtn>\r\n            <br />\r\n        </LoginWrapper>\r\n    );\r\n};\r\n\r\nexport default LoginFrom;"]},"metadata":{},"sourceType":"module"}