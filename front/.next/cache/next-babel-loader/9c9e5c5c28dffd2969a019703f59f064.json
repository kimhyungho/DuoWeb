{"ast":null,"code":"import produce from '../util/produce';\nexport const initialState = {\n  LolPosts: [],\n  myPosts: [],\n  loadLolAllPostsLoading: false,\n  loadLolAllPostsDone: false,\n  loadLolAllPostsError: null,\n  addLolPost\n};\nexport const LOAD_ALL_LOL_POSTS_REQUEST = 'LOAD_ALL_LOL_POSTS_REQUEST';\nexport const LOAD_ALL_LOL_POSTS_SUCCESS = 'LOAD_ALL_LOL_POSTS_SUCCESS';\nexport const LOAD_ALL_LOL_POSTS_FAILURE = 'LOAD_ALL_LOL_POSTS_FAILURE';\nexport const ADD_LOL_POST_REQUEST = 'ADD_LOL_POST_REQUEST';\nexport const ADD_LOL_POST_SUCCESS = 'ADD_LOL_POST_SUCCESS';\nexport const ADD_LOL_POST_FAILURE = 'ADD_LOL_POST_FAILURE';\nexport const loadAllLolPostsRequestAction = data => ({\n  type: LOAD_ALL_LOL_POSTS_REQUEST,\n  data\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_ALL_LOL_POSTS_REQUEST:\n      draft.loadLolAllPostsLoading = true;\n      draft.loadLolAllPostsDone = false;\n      draft.loadLolAllPostsError = null;\n      break;\n\n    case LOAD_ALL_LOL_POSTS_SUCCESS:\n      draft.loadLolAllPostsLoading = false;\n      draft.loadLolAllPostsDone = true;\n      draft.posts = action.data;\n      break;\n\n    case LOAD_ALL_LOL_POSTS_FAILURE:\n      draft.loadLolAllPostsLoading = false;\n      draft.loadLolAllPostsError = action.error;\n      break;\n\n    case ADD_LOL_POST_REQUEST:\n      break;\n\n    case ADD_LOL_POST_SUCCESS:\n      break;\n\n    case ADD_LOL_POST_FAILURE:\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/reducers/post.js"],"names":["produce","initialState","LolPosts","myPosts","loadLolAllPostsLoading","loadLolAllPostsDone","loadLolAllPostsError","addLolPost","LOAD_ALL_LOL_POSTS_REQUEST","LOAD_ALL_LOL_POSTS_SUCCESS","LOAD_ALL_LOL_POSTS_FAILURE","ADD_LOL_POST_REQUEST","ADD_LOL_POST_SUCCESS","ADD_LOL_POST_FAILURE","loadAllLolPostsRequestAction","data","type","reducer","state","action","draft","posts","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,QAAQ,EAAE,EADc;AAExBC,EAAAA,OAAO,EAAE,EAFe;AAGxBC,EAAAA,sBAAsB,EAAE,KAHA;AAIxBC,EAAAA,mBAAmB,EAAE,KAJG;AAKxBC,EAAAA,oBAAoB,EAAE,IALE;AAMxBC,EAAAA;AANwB,CAArB;AASP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AAEP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,4BAA4B,GAAIC,IAAD,KAAW;AACnDC,EAAAA,IAAI,EAAER,0BAD6C;AAEnDO,EAAAA;AAFmD,CAAX,CAArC;;AAMP,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGjB,YAAT,EAAuBkB,MAAvB,KAAkCnB,OAAO,CAACkB,KAAD,EAASE,KAAD,IAAW;AACxE,UAAQD,MAAM,CAACH,IAAf;AACI,SAAKR,0BAAL;AACIY,MAAAA,KAAK,CAAChB,sBAAN,GAA+B,IAA/B;AACAgB,MAAAA,KAAK,CAACf,mBAAN,GAA4B,KAA5B;AACAe,MAAAA,KAAK,CAACd,oBAAN,GAA6B,IAA7B;AACA;;AACJ,SAAKG,0BAAL;AACIW,MAAAA,KAAK,CAAChB,sBAAN,GAA+B,KAA/B;AACAgB,MAAAA,KAAK,CAACf,mBAAN,GAA4B,IAA5B;AACAe,MAAAA,KAAK,CAACC,KAAN,GAAcF,MAAM,CAACJ,IAArB;AACA;;AACJ,SAAKL,0BAAL;AACIU,MAAAA,KAAK,CAAChB,sBAAN,GAA+B,KAA/B;AACAgB,MAAAA,KAAK,CAACd,oBAAN,GAA6Ba,MAAM,CAACG,KAApC;AACA;;AACJ,SAAKX,oBAAL;AACI;;AACJ,SAAKC,oBAAL;AACI;;AACJ,SAAKC,oBAAL;AACI;;AACJ;AACI;AAtBR;AAwBH,CAzBwD,CAAzD;;AA2BA,eAAeI,OAAf","sourcesContent":["import produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n    LolPosts: [],\r\n    myPosts: [],\r\n    loadLolAllPostsLoading: false,\r\n    loadLolAllPostsDone: false,\r\n    loadLolAllPostsError: null,\r\n    addLolPost\r\n};\r\n\r\nexport const LOAD_ALL_LOL_POSTS_REQUEST = 'LOAD_ALL_LOL_POSTS_REQUEST';\r\nexport const LOAD_ALL_LOL_POSTS_SUCCESS = 'LOAD_ALL_LOL_POSTS_SUCCESS';\r\nexport const LOAD_ALL_LOL_POSTS_FAILURE = 'LOAD_ALL_LOL_POSTS_FAILURE';\r\n\r\nexport const ADD_LOL_POST_REQUEST = 'ADD_LOL_POST_REQUEST';\r\nexport const ADD_LOL_POST_SUCCESS = 'ADD_LOL_POST_SUCCESS';\r\nexport const ADD_LOL_POST_FAILURE = 'ADD_LOL_POST_FAILURE';\r\n\r\nexport const loadAllLolPostsRequestAction = (data) => ({\r\n    type: LOAD_ALL_LOL_POSTS_REQUEST,\r\n    data,\r\n});\r\n\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case LOAD_ALL_LOL_POSTS_REQUEST:\r\n            draft.loadLolAllPostsLoading = true;\r\n            draft.loadLolAllPostsDone = false;\r\n            draft.loadLolAllPostsError = null;\r\n            break;\r\n        case LOAD_ALL_LOL_POSTS_SUCCESS:\r\n            draft.loadLolAllPostsLoading = false;\r\n            draft.loadLolAllPostsDone = true;\r\n            draft.posts = action.data;\r\n            break;\r\n        case LOAD_ALL_LOL_POSTS_FAILURE:\r\n            draft.loadLolAllPostsLoading = false;\r\n            draft.loadLolAllPostsError = action.error;\r\n            break;\r\n        case ADD_LOL_POST_REQUEST:\r\n            break;\r\n        case ADD_LOL_POST_SUCCESS:\r\n            break;\r\n        case ADD_LOL_POST_FAILURE:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}