{"ast":null,"code":"import produce from '../util/produce';\nexport const initialState = {\n  posts: [],\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null\n};\nexport const LOAD_ALL_LOL_POSTS_REQUEST = 'LOAD_ALL_LOL_POSTS_REQUEST';\nexport const LOAD_ALL_LOL_POSTS_SUCCESS = 'LOAD_ALL_LOL_POSTS_SUCCESS';\nexport const LOAD_ALL_LOL_POSTS_FAILURE = 'LOAD_ALL_LOL_POSTS_FAILURE'; // export const loadAllLolPostsRequestAction = (data) => ({\n//     type: LOAD_ALL_LOL_POSTS_REQUEST,\n//     data,   // userToken\n// });\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_ALL_LOL_POSTS_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n\n    case LOAD_ALL_LOL_POSTS_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.posts = draft.posts.concat(action.data);\n      break;\n\n    case LOAD_ALL_LOL_POSTS_FAILURE:\n      draft.loadPostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/reducers/post.js"],"names":["produce","initialState","posts","loadPostLoading","loadPostDone","loadPostError","LOAD_ALL_LOL_POSTS_REQUEST","LOAD_ALL_LOL_POSTS_SUCCESS","LOAD_ALL_LOL_POSTS_FAILURE","reducer","state","action","draft","type","concat","data","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAC,EADkB;AAExBC,EAAAA,eAAe,EAAE,KAFO;AAGxBC,EAAAA,YAAY,EAAE,KAHU;AAIxBC,EAAAA,aAAa,EAAE;AAJS,CAArB;AAOP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC,C,CAGP;AACA;AACA;AACA;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkCX,OAAO,CAACU,KAAD,EAASE,KAAD,IAAW;AACxE,UAAQD,MAAM,CAACE,IAAf;AACI,SAAKP,0BAAL;AACIM,MAAAA,KAAK,CAACT,eAAN,GAAwB,IAAxB;AACAS,MAAAA,KAAK,CAACR,YAAN,GAAqB,KAArB;AACAQ,MAAAA,KAAK,CAACP,aAAN,GAAsB,IAAtB;AACA;;AACJ,SAAKE,0BAAL;AACIK,MAAAA,KAAK,CAACT,eAAN,GAAwB,KAAxB;AACAS,MAAAA,KAAK,CAACR,YAAN,GAAqB,IAArB;AACAQ,MAAAA,KAAK,CAACV,KAAN,GAAcU,KAAK,CAACV,KAAN,CAAYY,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAAd;AACA;;AACJ,SAAKP,0BAAL;AACII,MAAAA,KAAK,CAACT,eAAN,GAAwB,KAAxB;AACAS,MAAAA,KAAK,CAACP,aAAN,GAAsBM,MAAM,CAACK,KAA7B;AACA;;AACJ;AACI;AAhBR;AAkBH,CAnBwD,CAAzD;;AAqBA,eAAeP,OAAf","sourcesContent":["import produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n    posts:[],\r\n    loadPostLoading: false,\r\n    loadPostDone: false,\r\n    loadPostError: null,\r\n};\r\n\r\nexport const LOAD_ALL_LOL_POSTS_REQUEST = 'LOAD_ALL_LOL_POSTS_REQUEST';\r\nexport const LOAD_ALL_LOL_POSTS_SUCCESS = 'LOAD_ALL_LOL_POSTS_SUCCESS';\r\nexport const LOAD_ALL_LOL_POSTS_FAILURE = 'LOAD_ALL_LOL_POSTS_FAILURE';\r\n\r\n\r\n// export const loadAllLolPostsRequestAction = (data) => ({\r\n//     type: LOAD_ALL_LOL_POSTS_REQUEST,\r\n//     data,   // userToken\r\n// });\r\n\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case LOAD_ALL_LOL_POSTS_REQUEST:\r\n            draft.loadPostLoading = true;\r\n            draft.loadPostDone = false;\r\n            draft.loadPostError = null;\r\n            break;\r\n        case LOAD_ALL_LOL_POSTS_SUCCESS:\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostDone = true;\r\n            draft.posts = draft.posts.concat(action.data);\r\n            break;\r\n        case LOAD_ALL_LOL_POSTS_FAILURE:\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostError = action.error;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}