{"ast":null,"code":"import { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nfunction* logIn(action) {\n  try {\n    const {\n      accessToken\n    } = useSelector(state => state.user);\n    console.log(\"된다\", accessToken); // yield put({\n    //     type: 'LOG_IN_SUCCESS',\n    //     data: action.data,\n    // });\n  } catch (err) {\n    const {\n      accessToken\n    } = useSelector(state => state.user);\n    console.log(\"안된다.\", accessToken); // yield put({\n    //     type: 'LOG_IN_FAILURE',\n    //     error: action.response.data,\n    // });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('SOCIAL_LOG_IN_REQUEST', logIn);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn)]);\n}","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/sagas/user.js"],"names":["all","call","fork","put","takeLatest","axios","useSelector","logIn","action","accessToken","state","user","console","log","err","watchLogIn","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAIA,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAkBH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAnC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBJ,WAAlB,EAJA,CAMA;AACA;AACA;AACA;AAEH,GAXD,CAWE,OAAOK,GAAP,EAAY;AACV,UAAM;AAAEL,MAAAA;AAAF,QAAkBH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAnC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,WAApB,EAHU,CAIV;AACA;AACA;AACA;AACH;AACJ;;AAED,UAAUM,UAAV,GAAuB;AACnB,QAAMX,UAAU,CAAC,uBAAD,EAA0BG,KAA1B,CAAhB;AACH;;AAED,eAAe,UAAUS,QAAV,GAAqB;AAChC,QAAMhB,GAAG,CAAC,CACNE,IAAI,CAACa,UAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n\r\n        const { accessToken } = useSelector((state) => state.user)\r\n\r\n        console.log(\"된다\", accessToken);\r\n\r\n        // yield put({\r\n        //     type: 'LOG_IN_SUCCESS',\r\n        //     data: action.data,\r\n        // });\r\n\r\n    } catch (err) {\r\n        const { accessToken } = useSelector((state) => state.user)\r\n\r\n        console.log(\"안된다.\", accessToken);\r\n        // yield put({\r\n        //     type: 'LOG_IN_FAILURE',\r\n        //     error: action.response.data,\r\n        // });\r\n    }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest('SOCIAL_LOG_IN_REQUEST', logIn);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}