{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k\\\\Desktop\\\\DUO\\\\front\\\\components\\\\MyInfo.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Button, Input, Form } from 'antd';\nimport { useSelector } from 'react-redux';\n\nconst MyInfo = () => {\n  const userNickname = useSelector(state => state.user.userNickname);\n  const {\n    0: isChangeNickname,\n    1: setIsChangeNickname\n  } = useState(false);\n  const onIsChangeNickname = useCallback(() => {\n    setIsChangeNickname(true);\n  });\n  const onCompelteChangeNickname = useCallback(() => {\n    // 받아와서 Nickname state 변경\n    setIsChangeNickname(false);\n  });\n  return __jsx(React.Fragment, null, isChangeNickname ? __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    prefix: userNickname,\n    suffix: __jsx(Button, {\n      onClick: onCompelteChangeNickname,\n      htmlType: \"submit\",\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 74\n      }\n    }, \"\\uD655\\uC778\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  })) : __jsx(Input, {\n    prefix: userNickname,\n    suffix: __jsx(Button, {\n      onClick: onIsChangeNickname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 56\n      }\n    }, \"\\uBCC0\\uACBD\"),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }\n  }));\n}; // <Form><Input prefix={userNickname} suffix={<Button onClick={onCompelteChangeNickname} htmlType=\"submit\"></Button>}></Input> </Form>\n\n\nexport default MyInfo;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/components/MyInfo.js"],"names":["React","useCallback","useState","Button","Input","Form","useSelector","MyInfo","userNickname","state","user","isChangeNickname","setIsChangeNickname","onIsChangeNickname","onCompelteChangeNickname"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,MAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAMC,YAAY,GAAGF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,YAAvB,CAAhC;AACA,QAAM;AAAA,OAACG,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CV,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAMW,kBAAkB,GAAGZ,WAAW,CAAC,MAAM;AACzCW,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,GAFqC,CAAtC;AAIA,QAAME,wBAAwB,GAAGb,WAAW,CAAC,MAAM;AAC/C;AACAW,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,GAH2C,CAA5C;AAKA,SACI,4BACKD,gBAAgB,GACX,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,MAAM,EAAEH,YAA3B;AAAyC,IAAA,MAAM,EAAE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAEM,wBAAjB;AAA2C,MAAA,QAAQ,EAAC,QAApD;AAA6D,MAAA,IAAI,EAAC,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN,CADW,GAEX,MAAC,KAAD;AAAO,IAAA,MAAM,EAAEN,YAAf;AAA6B,IAAA,MAAM,EAAE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAEK,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAArC;AAAuF,IAAA,QAAQ,MAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHV,CADJ;AAQH,CArBD,C,CAsBA;;;AACA,eAAeN,MAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { Button, Input, Form } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst MyInfo = () => {\r\n\r\n    const userNickname = useSelector((state) => state.user.userNickname);\r\n    const [isChangeNickname, setIsChangeNickname] = useState(false);\r\n    const onIsChangeNickname = useCallback(() => {\r\n        setIsChangeNickname(true)\r\n    });\r\n\r\n    const onCompelteChangeNickname = useCallback(() => {\r\n        // 받아와서 Nickname state 변경\r\n        setIsChangeNickname(false)\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {isChangeNickname\r\n                ? <Form><Input type=\"text\" prefix={userNickname} suffix={<Button onClick={onCompelteChangeNickname} htmlType=\"submit\" type=\"primary\">확인</Button>} /></Form>\r\n                : <Input prefix={userNickname} suffix={<Button onClick={onIsChangeNickname}>변경</Button>} disabled />}\r\n\r\n        </>\r\n    );\r\n}\r\n// <Form><Input prefix={userNickname} suffix={<Button onClick={onCompelteChangeNickname} htmlType=\"submit\"></Button>}></Input> </Form>\r\nexport default MyInfo;"]},"metadata":{},"sourceType":"module"}