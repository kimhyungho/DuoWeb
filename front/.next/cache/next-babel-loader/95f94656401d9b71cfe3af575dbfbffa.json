{"ast":null,"code":"import { all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nfunction socailLogInAPI() {\n  const {\n    platform,\n    accessToken\n  } = useSelector(state => state.user);\n  const instance = axios.create({\n    baseURL: 'http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/',\n    timeout: 1000,\n    headers: {\n      'Authorization': accessToken\n    }\n  });\n  return instance.post(`login/${platform}`);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(socailLogInAPI);\n    Log.d('되는건가 try'); // yield put({\n    //     type: 'LOG_IN_SUCCESS',\n    //     data: action.data,\n    // });\n  } catch (err) {\n    Log.error('안되는 건가 catch');\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      error: action.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('SOCIAL_LOG_IN_REQUEST');\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn, logIn)]);\n}","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/sagas/user.js"],"names":["all","fork","put","takeLatest","axios","useSelector","socailLogInAPI","platform","accessToken","state","user","instance","create","baseURL","timeout","headers","post","logIn","action","result","call","Log","d","err","error","type","response","data","watchLogIn","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,SAASC,cAAT,GAA0B;AAEtB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA7C;AACA,QAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAE,iEADiB;AAE1BC,IAAAA,OAAO,EAAE,IAFiB;AAG1BC,IAAAA,OAAO,EAAE;AAAE,uBAAiBP;AAAnB;AAHiB,GAAb,CAAjB;AAMA,SAAOG,QAAQ,CAACK,IAAT,CAAe,SAAQT,QAAS,EAAhC,CAAP;AACH;;AAGD,UAAUU,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMC,IAAI,CAACd,cAAD,CAAzB;AAEAe,IAAAA,GAAG,CAACC,CAAJ,CAAM,UAAN,EAHA,CAKA;AACA;AACA;AACA;AAEH,GAVD,CAUE,OAAOC,GAAP,EAAY;AACVF,IAAAA,GAAG,CAACG,KAAJ,CAAU,cAAV;AACA,UAAMtB,GAAG,CAAC;AACNuB,MAAAA,IAAI,EAAE,gBADA;AAEND,MAAAA,KAAK,EAAEN,MAAM,CAACQ,QAAP,CAAgBC;AAFjB,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUC,UAAV,GAAuB;AACnB,QAAMzB,UAAU,CAAC,uBAAD,CAAhB;AACH;;AAED,eAAe,UAAU0B,QAAV,GAAqB;AAChC,QAAM7B,GAAG,CAAC,CACNC,IAAI,CAAC2B,UAAD,EAAaX,KAAb,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction socailLogInAPI() {\r\n    \r\n    const { platform, accessToken } = useSelector((state) => state.user);\r\n    const instance = axios.create({\r\n        baseURL: 'http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/',\r\n        timeout: 1000,\r\n        headers: { 'Authorization': accessToken }\r\n    });\r\n\r\n    return instance.post(`login/${platform}`);\r\n}\r\n\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        const result = yield call(socailLogInAPI);\r\n        \r\n        Log.d('되는건가 try');\r\n\r\n        // yield put({\r\n        //     type: 'LOG_IN_SUCCESS',\r\n        //     data: action.data,\r\n        // });\r\n\r\n    } catch (err) {\r\n        Log.error('안되는 건가 catch');\r\n        yield put({\r\n            type: 'LOG_IN_FAILURE',\r\n            error: action.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest('SOCIAL_LOG_IN_REQUEST',);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn, logIn),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}