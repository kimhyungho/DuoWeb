{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _s = $RefreshSig$();\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nfunction socailLogInAPI() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      platform = _useSelector.platform,\n      accessToken = _useSelector.accessToken;\n\n  console.log(platform, accessToken);\n  return axios.post(\"http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/auth/kakao\", {\n    params: {},\n    headers: {\n      'Authorization': accessToken\n    }\n  });\n}\n\n_s(socailLogInAPI, \"XZGrWziZ1VKYfj1rikqidTuPX0U=\", false, function () {\n  return [useSelector];\n});\n\nfunction logIn(action) {\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          try {\n            // const result = yield call(socailLogInAPI, action.data);\n            console.log(\"된다\"); // yield put({\n            //     type: 'LOG_IN_SUCCESS',\n            //     data: action.data,\n            // });\n          } catch (err) {\n            console.log(\"안된다.\"); // yield put({\n            //     type: 'LOG_IN_FAILURE',\n            //     error: action.response.data,\n            // });\n          }\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest('SOCIAL_LOG_IN_REQUEST', logIn);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchLogIn)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/sagas/user.js"],"names":["logIn","watchLogIn","userSaga","all","fork","put","takeLatest","axios","useSelector","socailLogInAPI","state","user","platform","accessToken","console","log","post","params","headers","action","err"],"mappings":";;;;oDAiBUA,K;qDAoBAC,U;qDAIeC,Q;;AAzCzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,SAASC,cAAT,GAA0B;AAAA;;AAAA,qBAEYD,WAAW,CAAC,UAACE,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAFvB;AAAA,MAEdC,QAFc,gBAEdA,QAFc;AAAA,MAEJC,WAFI,gBAEJA,WAFI;;AAItBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,WAAtB;AAEA,SAAON,KAAK,CAACS,IAAN,8EAEH;AAACC,IAAAA,MAAM,EAAE,EAAT;AAAaC,IAAAA,OAAO,EAAE;AAAC,uBAAiBL;AAAlB;AAAtB,GAFG,CAAP;AAGH;;GATQJ,c;UAE6BD,W;;;AAUtC,SAAUR,KAAV,CAAgBmB,MAAhB;AAAA;AAAA;AAAA;AAAA;AACI,cAAI;AACA;AAEAL,YAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAHA,CAKA;AACA;AACA;AACA;AAEH,WAVD,CAUE,OAAOK,GAAP,EAAY;AACVN,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADU,CAEV;AACA;AACA;AACA;AACH;;AAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,SAAUd,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMK,UAAU,CAAC,uBAAD,EAA0BN,KAA1B,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNC,IAAI,CAACH,UAAD,CADE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction socailLogInAPI() {\r\n    \r\n    const { platform, accessToken } = useSelector((state) => state.user);\r\n\r\n    console.log(platform, accessToken);\r\n\r\n    return axios.post(\r\n        `http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/auth/kakao`,\r\n        {params: {}, headers: {'Authorization': accessToken}});\r\n}\r\n\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        // const result = yield call(socailLogInAPI, action.data);\r\n        \r\n        console.log(\"된다\");\r\n\r\n        // yield put({\r\n        //     type: 'LOG_IN_SUCCESS',\r\n        //     data: action.data,\r\n        // });\r\n\r\n    } catch (err) {\r\n        console.log(\"안된다.\");\r\n        // yield put({\r\n        //     type: 'LOG_IN_FAILURE',\r\n        //     error: action.response.data,\r\n        // });\r\n    }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest('SOCIAL_LOG_IN_REQUEST', logIn);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}