{"ast":null,"code":"import produce from '../util/produce';\nexport var initialState = {\n  posts: [],\n  myPosts: [],\n  loadLolAllPostsLoading: false,\n  loadLolAllPostsDone: false,\n  loadLolAllPostsError: null,\n  addLolPost: addLolPost\n};\nexport var LOAD_ALL_LOL_POSTS_REQUEST = 'LOAD_ALL_LOL_POSTS_REQUEST';\nexport var LOAD_ALL_LOL_POSTS_SUCCESS = 'LOAD_ALL_LOL_POSTS_SUCCESS';\nexport var LOAD_ALL_LOL_POSTS_FAILURE = 'LOAD_ALL_LOL_POSTS_FAILURE';\nexport var ADD_LOL_POST_REQUEST = 'ADD_LOL_POST_REQUEST';\nexport var ADD_LOL_POST_SUCCESS = 'ADD_LOL_POST_SUCCESS';\nexport var ADD_LOL_POST_FAILURE = 'ADD_LOL_POST_FAILURE';\nexport var loadAllLolPostsRequestAction = function loadAllLolPostsRequestAction(data) {\n  return {\n    type: LOAD_ALL_LOL_POSTS_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_ALL_LOL_POSTS_REQUEST:\n        draft.loadLolAllPostsLoading = true;\n        draft.loadLolAllPostsDone = false;\n        draft.loadLolAllPostsError = null;\n        break;\n\n      case LOAD_ALL_LOL_POSTS_SUCCESS:\n        draft.loadLolAllPostsLoading = false;\n        draft.loadLolAllPostsDone = true;\n        draft.posts = action.data;\n        break;\n\n      case LOAD_ALL_LOL_POSTS_FAILURE:\n        draft.loadLolAllPostsLoading = false;\n        draft.loadLolAllPostsError = action.error;\n        break;\n\n      case ADD_LOL_POST_REQUEST:\n        break;\n\n      case ADD_LOL_POST_SUCCESS:\n        break;\n\n      case ADD_LOL_POST_FAILURE:\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/reducers/post.js"],"names":["produce","initialState","posts","myPosts","loadLolAllPostsLoading","loadLolAllPostsDone","loadLolAllPostsError","addLolPost","LOAD_ALL_LOL_POSTS_REQUEST","LOAD_ALL_LOL_POSTS_SUCCESS","LOAD_ALL_LOL_POSTS_FAILURE","ADD_LOL_POST_REQUEST","ADD_LOL_POST_SUCCESS","ADD_LOL_POST_FAILURE","loadAllLolPostsRequestAction","data","type","reducer","state","action","draft","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAEA,OAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,OAAO,EAAE,EAFe;AAGxBC,EAAAA,sBAAsB,EAAE,KAHA;AAIxBC,EAAAA,mBAAmB,EAAE,KAJG;AAKxBC,EAAAA,oBAAoB,EAAE,IALE;AAMxBC,EAAAA,UAAU,EAAVA;AANwB,CAArB;AASP,OAAO,IAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,IAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,IAAMC,0BAA0B,GAAG,4BAAnC;AAEP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,IAAD;AAAA,SAAW;AACnDC,IAAAA,IAAI,EAAER,0BAD6C;AAEnDO,IAAAA,IAAI,EAAJA;AAFmD,GAAX;AAAA,CAArC;;AAMP,IAAME,OAAO,GAAG,SAAVA,OAAU;AAAA,MAACC,KAAD,uEAASjB,YAAT;AAAA,MAAuBkB,MAAvB;AAAA,SAAkCnB,OAAO,CAACkB,KAAD,EAAQ,UAACE,KAAD,EAAW;AACxE,YAAQD,MAAM,CAACH,IAAf;AACI,WAAKR,0BAAL;AACIY,QAAAA,KAAK,CAAChB,sBAAN,GAA+B,IAA/B;AACAgB,QAAAA,KAAK,CAACf,mBAAN,GAA4B,KAA5B;AACAe,QAAAA,KAAK,CAACd,oBAAN,GAA6B,IAA7B;AACA;;AACJ,WAAKG,0BAAL;AACIW,QAAAA,KAAK,CAAChB,sBAAN,GAA+B,KAA/B;AACAgB,QAAAA,KAAK,CAACf,mBAAN,GAA4B,IAA5B;AACAe,QAAAA,KAAK,CAAClB,KAAN,GAAciB,MAAM,CAACJ,IAArB;AACA;;AACJ,WAAKL,0BAAL;AACIU,QAAAA,KAAK,CAAChB,sBAAN,GAA+B,KAA/B;AACAgB,QAAAA,KAAK,CAACd,oBAAN,GAA6Ba,MAAM,CAACE,KAApC;AACA;;AACJ,WAAKV,oBAAL;AACI;;AACJ,WAAKC,oBAAL;AACI;;AACJ,WAAKC,oBAAL;AACI;;AACJ;AACI;AAtBR;AAwBH,GAzBwD,CAAzC;AAAA,CAAhB;;AA2BA,eAAeI,OAAf","sourcesContent":["import produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n    posts: [],\r\n    myPosts: [],\r\n    loadLolAllPostsLoading: false,\r\n    loadLolAllPostsDone: false,\r\n    loadLolAllPostsError: null,\r\n    addLolPost\r\n};\r\n\r\nexport const LOAD_ALL_LOL_POSTS_REQUEST = 'LOAD_ALL_LOL_POSTS_REQUEST';\r\nexport const LOAD_ALL_LOL_POSTS_SUCCESS = 'LOAD_ALL_LOL_POSTS_SUCCESS';\r\nexport const LOAD_ALL_LOL_POSTS_FAILURE = 'LOAD_ALL_LOL_POSTS_FAILURE';\r\n\r\nexport const ADD_LOL_POST_REQUEST = 'ADD_LOL_POST_REQUEST';\r\nexport const ADD_LOL_POST_SUCCESS = 'ADD_LOL_POST_SUCCESS';\r\nexport const ADD_LOL_POST_FAILURE = 'ADD_LOL_POST_FAILURE';\r\n\r\nexport const loadAllLolPostsRequestAction = (data) => ({\r\n    type: LOAD_ALL_LOL_POSTS_REQUEST,\r\n    data,\r\n});\r\n\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case LOAD_ALL_LOL_POSTS_REQUEST:\r\n            draft.loadLolAllPostsLoading = true;\r\n            draft.loadLolAllPostsDone = false;\r\n            draft.loadLolAllPostsError = null;\r\n            break;\r\n        case LOAD_ALL_LOL_POSTS_SUCCESS:\r\n            draft.loadLolAllPostsLoading = false;\r\n            draft.loadLolAllPostsDone = true;\r\n            draft.posts = action.data;\r\n            break;\r\n        case LOAD_ALL_LOL_POSTS_FAILURE:\r\n            draft.loadLolAllPostsLoading = false;\r\n            draft.loadLolAllPostsError = action.error;\r\n            break;\r\n        case ADD_LOL_POST_REQUEST:\r\n            break;\r\n        case ADD_LOL_POST_SUCCESS:\r\n            break;\r\n        case ADD_LOL_POST_FAILURE:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}