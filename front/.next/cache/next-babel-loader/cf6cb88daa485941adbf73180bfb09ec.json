{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _s = $RefreshSig$();\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nfunction socailLogInAPI() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      platform = _useSelector.platform,\n      accessToken = _useSelector.accessToken;\n\n  var instance = axios.create({\n    baseURL: 'http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/',\n    timeout: 1000,\n    headers: {\n      'Authorization': accessToken\n    }\n  });\n  return instance.post(\"login/\".concat(platform));\n}\n\n_s(socailLogInAPI, \"XZGrWziZ1VKYfj1rikqidTuPX0U=\", false, function () {\n  return [useSelector];\n});\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(socailLogInAPI);\n\n        case 3:\n          result = _context.sent;\n          Log.d('되는건가 try'); // yield put({\n          //     type: 'LOG_IN_SUCCESS',\n          //     data: action.data,\n          // });\n\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          Log.error('안되는 건가 catch');\n          _context.next = 12;\n          return put({\n            type: 'LOG_IN_FAILURE',\n            error: action.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest('SOCIAL_LOG_IN_REQUEST');\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchLogIn)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/sagas/user.js"],"names":["logIn","watchLogIn","userSaga","all","fork","put","takeLatest","axios","useSelector","socailLogInAPI","state","user","platform","accessToken","instance","create","baseURL","timeout","headers","post","action","call","result","Log","d","error","type","response","data"],"mappings":";;;;oDAkBUA,K;qDAoBAC,U;qDAIeC,Q;;AA1CzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,SAASC,cAAT,GAA0B;AAAA;;AAAA,qBAEYD,WAAW,CAAC,UAACE,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAFvB;AAAA,MAEdC,QAFc,gBAEdA,QAFc;AAAA,MAEJC,WAFI,gBAEJA,WAFI;;AAGtB,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAE,iEADiB;AAE1BC,IAAAA,OAAO,EAAE,IAFiB;AAG1BC,IAAAA,OAAO,EAAE;AAAE,uBAAiBL;AAAnB;AAHiB,GAAb,CAAjB;AAMA,SAAOC,QAAQ,CAACK,IAAT,iBAAuBP,QAAvB,EAAP;AACH;;GAVQH,c;UAE6BD,W;;;AAWtC,SAAUR,KAAV,CAAgBoB,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMC,IAAI,CAACZ,cAAD,CAAV;;AAFvB;AAEca,UAAAA,MAFd;AAIQC,UAAAA,GAAG,CAACC,CAAJ,CAAM,UAAN,EAJR,CAMQ;AACA;AACA;AACA;;AATR;AAAA;;AAAA;AAAA;AAAA;AAYQD,UAAAA,GAAG,CAACE,KAAJ,CAAU,cAAV;AAZR;AAaQ,iBAAMpB,GAAG,CAAC;AACNqB,YAAAA,IAAI,EAAE,gBADA;AAEND,YAAAA,KAAK,EAAEL,MAAM,CAACO,QAAP,CAAgBC;AAFjB,WAAD,CAAT;;AAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,SAAU3B,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMK,UAAU,CAAC,uBAAD,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUJ,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNC,IAAI,CAACH,UAAD,CADE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction socailLogInAPI() {\r\n    \r\n    const { platform, accessToken } = useSelector((state) => state.user);\r\n    const instance = axios.create({\r\n        baseURL: 'http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/',\r\n        timeout: 1000,\r\n        headers: { 'Authorization': accessToken }\r\n    });\r\n\r\n    return instance.post(`login/${platform}`);\r\n}\r\n\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        const result = yield call(socailLogInAPI);\r\n        \r\n        Log.d('되는건가 try');\r\n\r\n        // yield put({\r\n        //     type: 'LOG_IN_SUCCESS',\r\n        //     data: action.data,\r\n        // });\r\n\r\n    } catch (err) {\r\n        Log.error('안되는 건가 catch');\r\n        yield put({\r\n            type: 'LOG_IN_FAILURE',\r\n            error: action.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest('SOCIAL_LOG_IN_REQUEST',);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}