{"ast":null,"code":"import axios from \"axios\";\nimport { all, put, takeLatest, fork, call } from \"redux-saga/effects\";\nimport { LOAD_COMMENTS_REQUEST, LOAD_COMMENTS_SUCCESS, LOAD_COMMENTS_FAILURE } from '../reducers/comment';\n\nfunction loadCommentsAPI(data) {\n  return axios.get(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`, {}, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\nfunction* loadAllLolPosts(action) {\n  try {\n    const result = yield call(loadAllLolPostsAPI, action.data);\n    console.log(action.data);\n    yield put({\n      type: LOAD_ALL_LOL_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: LOAD_ALL_LOL_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addLolPostAPI(data) {\n  return axios.post(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`, {\n    userNickname: data.userNickname,\n    userId: data.userId,\n    gameMode: data.gameMode,\n    title: data.title,\n    startTier: data.startTier,\n    endTier: data.endTier,\n    endTime: data.endTime,\n    headCount: data.headCount,\n    top: data.top,\n    bottom: data.bottom,\n    mid: data.mid,\n    jungle: data.jungle,\n    support: data.support,\n    content: data.content,\n    talkon: data.talkOn\n  }, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\n;\n\nfunction* addLolPost(action) {\n  try {\n    const result = yield call(addLolPostAPI, action.data);\n    console.log(result);\n    yield put({\n      type: ADD_LOL_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(err.response);\n    yield put({\n      type: ADD_LOL_POST_FAILURE,\n      error: err.response\n    });\n  }\n}\n\nfunction* watchLoadAllLolPosts() {\n  yield takeLatest(LOAD_ALL_LOL_POSTS_REQUEST, loadAllLolPosts);\n}\n\nfunction* watchAddLolPost() {\n  yield takeLatest(ADD_LOL_POST_REQUEST, addLolPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLoadAllLolPosts), fork(watchAddLolPost)]);\n}","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/sagas/post.js"],"names":["axios","all","put","takeLatest","fork","call","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","loadCommentsAPI","data","get","headers","Authorization","userToken","loadAllLolPosts","action","result","loadAllLolPostsAPI","console","log","type","LOAD_ALL_LOL_POSTS_SUCCESS","err","LOAD_ALL_LOL_POSTS_FAILURE","error","response","addLolPostAPI","post","userNickname","userId","gameMode","title","startTier","endTier","endTime","headCount","top","bottom","mid","jungle","support","content","talkon","talkOn","addLolPost","ADD_LOL_POST_SUCCESS","ADD_LOL_POST_FAILURE","watchLoadAllLolPosts","LOAD_ALL_LOL_POSTS_REQUEST","watchAddLolPost","ADD_LOL_POST_REQUEST","postSaga"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { all, put, takeLatest, fork, call } from \"redux-saga/effects\";\r\n\r\nimport {\r\n    LOAD_COMMENTS_REQUEST,\r\n    LOAD_COMMENTS_SUCCESS,\r\n    LOAD_COMMENTS_FAILURE,\r\n} from '../reducers/comment';\r\n\r\nfunction loadCommentsAPI(data) {\r\n    return axios.get(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`,\r\n        {}, { headers: { Authorization: data.userToken } });\r\n}\r\n\r\nfunction* loadAllLolPosts(action) {\r\n    try {\r\n        const result = yield call(loadAllLolPostsAPI, action.data);\r\n        console.log(action.data);\r\n        yield put({\r\n            type: LOAD_ALL_LOL_POSTS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n        yield put({\r\n            type: LOAD_ALL_LOL_POSTS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction addLolPostAPI(data) {\r\n    return axios.post(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`,\r\n        {   userNickname: data.userNickname, userId: data.userId,\r\n            gameMode: data.gameMode, title: data.title,\r\n            startTier: data.startTier, endTier: data.endTier,\r\n            endTime: data.endTime, headCount: data.headCount,\r\n            top: data.top, bottom: data.bottom,\r\n            mid: data.mid, jungle: data.jungle, \r\n            support: data.support, content: data.content, \r\n            talkon: data.talkOn,\r\n        }, { headers: { Authorization: data.userToken } });\r\n};\r\n\r\nfunction* addLolPost(action) {\r\n    try {\r\n        const result = yield call(addLolPostAPI, action.data);\r\n        console.log(result)\r\n        yield put({\r\n            type: ADD_LOL_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err.response);\r\n        yield put({\r\n            type: ADD_LOL_POST_FAILURE,\r\n            error: err.response,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* watchLoadAllLolPosts() {\r\n    yield takeLatest(LOAD_ALL_LOL_POSTS_REQUEST, loadAllLolPosts);\r\n}\r\n\r\nfunction* watchAddLolPost() {\r\n    yield takeLatest(ADD_LOL_POST_REQUEST, addLolPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchLoadAllLolPosts),\r\n        fork(watchAddLolPost),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}