{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k\\\\Desktop\\\\DUO\\\\front\\\\components\\\\MyInfo.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Input, Form } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logoutRequestAction, signOutRequestAction, changeNicknameRequestAction } from '../reducers/user';\n\nconst MyInfo = () => {\n  const {\n    me,\n    signOutLoading,\n    signOutDone\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    0: newNickname,\n    1: setNewNickname\n  } = useState(me.nickname);\n  const {\n    0: isChangeNickname,\n    1: setIsChangeNickname\n  } = useState(false);\n  const onIsChangeNickname = useCallback(() => {\n    setIsChangeNickname(true);\n  });\n  const onCompelteChangeNickname = useCallback(() => {\n    setIsChangeNickname(false);\n  });\n  const onSetNickname = useCallback(e => {\n    setNickname(e.target.value);\n  });\n  const onSignOut = useCallback(() => {\n    const data = {\n      userId: me.userId,\n      userToken: me.userToken\n    };\n    dispatch(signOutRequestAction(data));\n  }, []);\n  const onChangeNickname = useCallback(() => {\n    const data = {\n      userId: me.userId,\n      nickname: newNickname,\n      userToken: me.userToken\n    };\n    dispatch(changeNicknameRequestAction(data));\n  }, [newNickname]);\n  useEffect(() => {\n    if (signOutDone) {\n      dispatch(logoutRequestAction());\n    }\n  }, [signOutDone]);\n  return __jsx(React.Fragment, null, isChangeNickname ? __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, __jsx(Input, {\n    onChange: onSetNickname,\n    type: \"text\",\n    suffix: __jsx(Button, {\n      onClick: onCompelteChangeNickname,\n      htmlType: \"submit\",\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 73\n      }\n    }, \"\\uD655\\uC778\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })) : __jsx(Input, {\n    prefix: userNickname,\n    suffix: __jsx(Button, {\n      onClick: onIsChangeNickname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 56\n      }\n    }, \"\\uBCC0\\uACBD\"),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }), __jsx(Button, {\n    loading: signOutLoading,\n    onClick: onSignOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"\\uD68C\\uC6D0\\uD0C8\\uD1F4\"));\n}; // <Form><Input prefix={userNickname} suffix={<Button onClick={onCompelteChangeNickname} htmlType=\"submit\"></Button>}></Input> </Form>\n\n\nexport default MyInfo;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/components/MyInfo.js"],"names":["React","useCallback","useEffect","useState","Button","Input","Form","useSelector","useDispatch","logoutRequestAction","signOutRequestAction","changeNicknameRequestAction","MyInfo","me","signOutLoading","signOutDone","state","user","dispatch","newNickname","setNewNickname","nickname","isChangeNickname","setIsChangeNickname","onIsChangeNickname","onCompelteChangeNickname","onSetNickname","e","setNickname","target","value","onSignOut","data","userId","userToken","onChangeNickname","userNickname"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Button, Input, Form } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logoutRequestAction, signOutRequestAction, changeNicknameRequestAction } from '../reducers/user';\r\n\r\n\r\nconst MyInfo = () => {\r\n\r\n    const { me, signOutLoading, signOutDone } = useSelector((state) => state.user)\r\n    const dispatch = useDispatch();\r\n\r\n    const [newNickname, setNewNickname] = useState(me.nickname);\r\n    const [isChangeNickname, setIsChangeNickname] = useState(false);\r\n\r\n    const onIsChangeNickname = useCallback(() => {\r\n        setIsChangeNickname(true)\r\n    });\r\n\r\n    const onCompelteChangeNickname = useCallback(() => {\r\n        setIsChangeNickname(false)\r\n    });\r\n\r\n    const onSetNickname = useCallback((e) => {\r\n        setNickname(e.target.value)\r\n    });\r\n\r\n    const onSignOut = useCallback(() => {\r\n        const data = { userId: me.userId, userToken: me.userToken};\r\n        dispatch(signOutRequestAction(data));\r\n    }, []);\r\n\r\n    const onChangeNickname = useCallback(() => {\r\n        const data = {userId: me.userId, nickname: newNickname, userToken: me.userToken};\r\n        dispatch(changeNicknameRequestAction(data));\r\n    }, [newNickname])\r\n\r\n\r\n    useEffect(() => {\r\n        if (signOutDone) {\r\n            dispatch(logoutRequestAction());\r\n        }\r\n    }, [signOutDone]);\r\n\r\n    return (\r\n        <>\r\n            {isChangeNickname\r\n                ? <Form>\r\n                    <Input onChange={onSetNickname} type=\"text\" suffix={<Button onClick={onCompelteChangeNickname} htmlType=\"submit\" type=\"primary\">확인</Button>} />\r\n                </Form>\r\n                : <Input prefix={userNickname} suffix={<Button onClick={onIsChangeNickname}>변경</Button>} disabled />}\r\n\r\n            <Button loading={signOutLoading} onClick={onSignOut}>회원탈퇴</Button>\r\n        </>\r\n    );\r\n}\r\n// <Form><Input prefix={userNickname} suffix={<Button onClick={onCompelteChangeNickname} htmlType=\"submit\"></Button>}></Input> </Form>\r\nexport default MyInfo;"]},"metadata":{},"sourceType":"module"}