{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\k\\\\Desktop\\\\DUO\\\\front\\\\components\\\\PostListForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport react from 'react';\nimport 'antd';\nimport styled from 'styled-components';\nimport LolPostCard from '../components/LolPostCard';\nimport { useDispatch, useSelector, useEffect } from 'react-redux';\nimport { getAllLoLPostRequest } from '../reducers/post';\n\nvar PostListForm = function PostListForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      userId = _useSelector.userId;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      posts = _useSelector2.posts;\n\n  var dispatch = useDispatch();\n\n  var postRequest = function postRequest() {\n    dispatch(getAllLoLPostRequest());\n    console.log(\"일단\");\n  };\n\n  useEffect(function () {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        dispatch({\n          type: 'GET_ALL_LOL_POST'\n        });\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n  return __jsx(React.Fragment, null, userId ? posts.map(function (c) {\n    return __jsx(\"div\", {\n      onLoad: postRequest,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 46\n      }\n    }, __jsx(LolPostCard, {\n      key: c.id,\n      post: c,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 72\n      }\n    }));\n  }) : __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }\n  }, \"\\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\"));\n};\n\n_s(PostListForm, \"y9KsBspOUyndlxBJQsoipme1MJY=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = PostListForm;\nexport default PostListForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostListForm\");","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/components/PostListForm.js"],"names":["react","styled","LolPostCard","useDispatch","useSelector","useEffect","getAllLoLPostRequest","PostListForm","state","user","userId","post","posts","dispatch","postRequest","console","log","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","addEventListener","removeEventListener","hasMorePosts","loadPostsLoading","mainPosts","map","c","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAgB,MAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAoD,aAApD;AACA,SAASC,oBAAT,QAAqC,kBAArC;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAAA,qBACJH,WAAW,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADP;AAAA,MACfC,MADe,gBACfA,MADe;;AAAA,sBAELN,WAAW,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAFN;AAAA,MAEfC,KAFe,iBAEfA,KAFe;;AAGvB,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AACA,MAAMW,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBD,IAAAA,QAAQ,CAACP,oBAAoB,EAArB,CAAR;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,GAHD;;AAKAX,EAAAA,SAAS,CAAC,YAAM;AACZ,aAASY,QAAT,GAAoB;AAChB,UAAIC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GAA6DF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAAzG,EAA8G;AACtGV,QAAAA,QAAQ,CAAC;AACLW,UAAAA,IAAI,EAAE;AADD,SAAD,CAAR;AAGP;AACJ;;AACDN,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCR,QAAlC;AACA,WAAO,YAAM;AACTC,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCT,QAArC;AACH,KAFD;AAGH,GAZQ,EAYN,CAACU,YAAD,EAAeC,gBAAf,EAAiCC,SAAjC,CAZM,CAAT;AAeA,SACI,4BACKnB,MAAM,GACDE,KAAK,CAACkB,GAAN,CAAU,UAACC,CAAD,EAAO;AAAE,WAAQ;AAAK,MAAA,MAAM,EAAEjB,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,MAAC,WAAD;AAAa,MAAA,GAAG,EAAEiB,CAAC,CAACC,EAApB;AAAwB,MAAA,IAAI,EAAED,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,CAAR;AAA+E,GAAlG,CADC,GAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAHV,CADJ;AAQH,CAhCD;;GAAMxB,Y;UACiBH,W,EACDA,W,EACDD,W;;;KAHfI,Y;AAoCN,eAAeA,YAAf","sourcesContent":["import react from 'react'\r\nimport { } from 'antd';\r\nimport styled from 'styled-components';\r\nimport LolPostCard from '../components/LolPostCard';\r\nimport { useDispatch, useSelector, useEffect } from 'react-redux';\r\nimport { getAllLoLPostRequest } from '../reducers/post';\r\n\r\nconst PostListForm = () => {\r\n    const { userId } = useSelector((state) => state.user);\r\n    const { posts } = useSelector((state) => state.post);\r\n    const dispatch = useDispatch();\r\n    const postRequest = () => {\r\n        dispatch(getAllLoLPostRequest());\r\n        console.log(\"일단\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n                    dispatch({\r\n                        type: 'GET_ALL_LOL_POST',\r\n                    });\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [hasMorePosts, loadPostsLoading, mainPosts]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {userId\r\n                ? posts.map((c) => { return (<div onLoad={postRequest}><LolPostCard key={c.id} post={c} /></div>); })\r\n                : <div>로그인이 필요합니다.</div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default PostListForm"]},"metadata":{},"sourceType":"module"}