{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadAllLolPosts),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addLolPost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadAllLolPosts),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddLolPost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport axios from \"axios\";\nimport { all, put, takeLatest, fork, call } from \"redux-saga/effects\";\nimport { LOAD_ALL_LOL_POSTS_REQUEST, LOAD_ALL_LOL_POSTS_SUCCESS, LOAD_ALL_LOL_POSTS_FAILURE, ADD_LOL_POST_REQUEST, ADD_LOL_POST_SUCCESS, ADD_LOL_POST_FAILURE } from '../reducers/post';\n\nfunction loadAllLolPostsAPI(data) {\n  return axios.get(\"http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol\", {}, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\nfunction loadAllLolPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadAllLolPosts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loadAllLolPostsAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          console.log(action.data);\n          _context.next = 7;\n          return put({\n            type: LOAD_ALL_LOL_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 14;\n          return put({\n            type: LOAD_ALL_LOL_POSTS_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction addLolPostAPI(data) {\n  return axios.post(\"http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol\", {\n    userNickname: data.userNickname,\n    userId: data.userId,\n    gameMode: data.gameMode,\n    title: data.title,\n    startTier: data.startTier,\n    endTier: data.endTier,\n    endTime: data.endTime,\n    headCount: data.headCount,\n    top: data.top,\n    bottom: data.bottom,\n    mid: data.mid,\n    jungle: data.jungle,\n    support: data.support,\n    content: data.content,\n    talkon: data.talkOn\n  }, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\n;\n\nfunction addLolPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addLolPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addLolPostAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          console.log(result);\n          _context2.next = 7;\n          return put({\n            type: ADD_LOL_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context2.next = 14;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0.response);\n          _context2.next = 14;\n          return put({\n            type: ADD_LOL_POST_FAILURE,\n            error: _context2.t0.response\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nfunction watchLoadAllLolPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadAllLolPosts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeLatest(LOAD_ALL_LOL_POSTS_REQUEST, loadAllLolPosts);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchAddLolPost() {\n  return _regeneratorRuntime.wrap(function watchAddLolPost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(ADD_LOL_POST_REQUEST, addLolPost);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLoadAllLolPosts), fork(watchAddLolPost)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/sagas/post.js"],"names":["loadAllLolPosts","addLolPost","watchLoadAllLolPosts","watchAddLolPost","postSaga","axios","all","put","takeLatest","fork","call","LOAD_ALL_LOL_POSTS_REQUEST","LOAD_ALL_LOL_POSTS_SUCCESS","LOAD_ALL_LOL_POSTS_FAILURE","ADD_LOL_POST_REQUEST","ADD_LOL_POST_SUCCESS","ADD_LOL_POST_FAILURE","loadAllLolPostsAPI","data","get","headers","Authorization","userToken","action","result","console","log","type","error","response","addLolPostAPI","post","userNickname","userId","gameMode","title","startTier","endTier","endTime","headCount","top","bottom","mid","jungle","support","content","talkon","talkOn"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { all, put, takeLatest, fork, call } from \"redux-saga/effects\";\r\n\r\nimport {\r\n    LOAD_ALL_LOL_POSTS_REQUEST,\r\n    LOAD_ALL_LOL_POSTS_SUCCESS,\r\n    LOAD_ALL_LOL_POSTS_FAILURE,\r\n    ADD_LOL_POST_REQUEST,\r\n    ADD_LOL_POST_SUCCESS,\r\n    ADD_LOL_POST_FAILURE\r\n} from '../reducers/post';\r\n\r\nfunction loadAllLolPostsAPI(data) {\r\n    return axios.get(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`,\r\n        {}, { headers: { Authorization: data.userToken } });\r\n}\r\n\r\nfunction* loadAllLolPosts(action) {\r\n    try {\r\n        const result = yield call(loadAllLolPostsAPI, action.data);\r\n        console.log(action.data);\r\n        yield put({\r\n            type: LOAD_ALL_LOL_POSTS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n        yield put({\r\n            type: LOAD_ALL_LOL_POSTS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction addLolPostAPI(data) {\r\n    return axios.post(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`,\r\n        {   userNickname: data.userNickname, userId: data.userId,\r\n            gameMode: data.gameMode, title: data.title,\r\n            startTier: data.startTier, endTier: data.endTier,\r\n            endTime: data.endTime, headCount: data.headCount,\r\n            top: data.top, bottom: data.bottom,\r\n            mid: data.mid, jungle: data.jungle, \r\n            support: data.support, content: data.content, \r\n            talkon: data.talkOn,\r\n        }, { headers: { Authorization: data.userToken } });\r\n};\r\n\r\nfunction* addLolPost(action) {\r\n    try {\r\n        const result = yield call(addLolPostAPI, action.data);\r\n        console.log(result)\r\n\r\n        yield put({\r\n            type: ADD_LOL_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err.response);\r\n        yield put({\r\n            type: ADD_LOL_POST_FAILURE,\r\n            error: err.response,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* watchLoadAllLolPosts() {\r\n    yield takeLatest(LOAD_ALL_LOL_POSTS_REQUEST, loadAllLolPosts);\r\n}\r\n\r\nfunction* watchAddLolPost() {\r\n    yield takeLatest(ADD_LOL_POST_REQUEST, addLolPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchLoadAllLolPosts),\r\n        fork(watchAddLolPost),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}