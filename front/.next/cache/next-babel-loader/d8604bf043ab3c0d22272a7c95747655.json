{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k\\\\Desktop\\\\DUO\\\\front\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCommentRequestAction } from '../reducers/comment';\n\nconst CommentForm = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    detailLolPost\n  } = useSelector(state => state.post);\n  const {\n    addCommentLoading,\n    addCommentDone\n  } = useSelector(state => state.comment);\n  const dispatch = useDispatch();\n  const {\n    0: content,\n    1: setContent\n  } = useState('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setContent('');\n    }\n  }, [addCommentDone]);\n  const onChangeComment = useCallback(e => {\n    setContent(e.target.value);\n  });\n  const onAddComment = useCallback(() => {\n    const data = {\n      content: content,\n      userId: me.userId,\n      postId: detailLolPost.id,\n      nickname: me.nickname\n    };\n    dispatch(addCommentRequestAction(data));\n    dispatch(loadCommentsRequestAction(data));\n  }, [content]);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, __jsx(Input.TextArea, {\n    onChange: onChangeComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    loading: addCommentLoading,\n    onClick: onAddComment,\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"\\uC81C\\uCD9C\"))));\n};\n\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/components/CommentForm.js"],"names":["React","useCallback","useState","useEffect","Button","Form","Input","useDispatch","useSelector","addCommentRequestAction","CommentForm","me","state","user","detailLolPost","post","addCommentLoading","addCommentDone","comment","dispatch","content","setContent","onChangeComment","e","target","value","onAddComment","data","userId","postId","id","nickname","loadCommentsRequestAction","position","right","bottom"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,uBAAT,QAAwC,qBAAxC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAM;AAAEC,IAAAA;AAAF,MAASH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAoBN,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAArC;AACA,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAwCT,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACM,OAAlB,CAAzD;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AAAA,OAACa,OAAD;AAAA,OAAUC;AAAV,MAAwBnB,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,cAAJ,EAAoB;AAClBI,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GAJM,EAIJ,CAACJ,cAAD,CAJI,CAAT;AAMA,QAAMK,eAAe,GAAGrB,WAAW,CAAEsB,CAAD,IAAO;AACvCF,IAAAA,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAFkC,CAAnC;AAKA,QAAMC,YAAY,GAAGzB,WAAW,CAAC,MAAM;AACnC,UAAM0B,IAAI,GAAG;AAAEP,MAAAA,OAAO,EAAEA,OAAX;AAAoBQ,MAAAA,MAAM,EAAEjB,EAAE,CAACiB,MAA/B;AAAuCC,MAAAA,MAAM,EAAEf,aAAa,CAACgB,EAA7D;AAAiEC,MAAAA,QAAQ,EAAEpB,EAAE,CAACoB;AAA9E,KAAb;AACAZ,IAAAA,QAAQ,CAACV,uBAAuB,CAACkB,IAAD,CAAxB,CAAR;AACAR,IAAAA,QAAQ,CAACa,yBAAyB,CAACL,IAAD,CAA1B,CAAR;AACH,GAJ+B,EAI7B,CAACP,OAAD,CAJ6B,CAAhC;AAMA,SACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEa,MAAAA,QAAQ,EAAE;AAAZ,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,QAAQ,EAAEX,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,iBAAjB;AAAoC,IAAA,OAAO,EAAEU,YAA7C;AAA2D,IAAA,KAAK,EAAE;AAAEO,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,KAAK,EAAE,CAA/B;AAAkCC,MAAAA,MAAM,EAAE,CAAC;AAA3C,KAAlE;AAAmH,IAAA,QAAQ,EAAC,QAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CADJ,CADJ;AAWH,CApCD;;AAwCA,eAAezB,WAAf","sourcesContent":["import React, { useCallback, useState ,useEffect } from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addCommentRequestAction } from '../reducers/comment';\r\n\r\nconst CommentForm = () => {\r\n\r\n    const { me } = useSelector((state) => state.user);\r\n    const { detailLolPost } = useSelector((state) => state.post);\r\n    const { addCommentLoading, addCommentDone } = useSelector((state) => state.comment);\r\n    const dispatch = useDispatch();\r\n    const [content, setContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (addCommentDone) {\r\n          setContent('');\r\n        }\r\n      }, [addCommentDone]);\r\n\r\n    const onChangeComment = useCallback((e) => {\r\n        setContent(e.target.value);\r\n    });\r\n\r\n\r\n    const onAddComment = useCallback(() => {\r\n        const data = { content: content, userId: me.userId, postId: detailLolPost.id, nickname: me.nickname };\r\n        dispatch(addCommentRequestAction(data));\r\n        dispatch(loadCommentsRequestAction(data));\r\n    }, [content]);\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <Form.Item style={{ position: 'relative' }}>\r\n                    <Input.TextArea onChange={onChangeComment}></Input.TextArea>\r\n                    <Button loading={addCommentLoading} onClick={onAddComment} style={{ position: 'absolute', right: 0, bottom: -40 }} htmlType='submit'>제출</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}