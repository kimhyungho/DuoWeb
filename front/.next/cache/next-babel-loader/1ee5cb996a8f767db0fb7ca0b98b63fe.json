{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadAllLolPosts),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addLolPost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(deleteLolPost),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(updateLolPost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(filterLolPost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadAllLolPosts),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddLolPost),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchDeleteLolPost),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdateLolPost),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchFilterLolPost),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport axios from \"axios\";\nimport { all, put, takeLatest, fork, call } from \"redux-saga/effects\";\nimport { LOAD_ALL_LOL_POSTS_REQUEST, LOAD_ALL_LOL_POSTS_SUCCESS, LOAD_ALL_LOL_POSTS_FAILURE, ADD_LOL_POST_REQUEST, ADD_LOL_POST_SUCCESS, ADD_LOL_POST_FAILURE, DELETE_LOL_POST_REQUEST, DELETE_LOL_POST_SUCCESS, DELETE_LOL_POST_FAILURE, UPDATE_LOL_POST_REQUEST, UPDATE_LOL_POST_SUCCESS, UPDATE_LOL_POST_FAILURE, FILTER_LOL_POST_REQUEST, FILTER_LOL_POST_SUCCESS, FILTER_LOL_POST_FAILURE } from '../reducers/post';\n\nfunction loadAllLolPostsAPI(data) {\n  return axios.get(\"http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol?limit=\".concat(data.limit, \"&offset=\").concat(data.offset), {}, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\nfunction loadAllLolPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadAllLolPosts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loadAllLolPostsAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          console.log(action.data);\n          _context.next = 7;\n          return put({\n            type: LOAD_ALL_LOL_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 14;\n          return put({\n            type: LOAD_ALL_LOL_POSTS_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction addLolPostAPI(data) {\n  return axios.post(\"http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol\", {\n    userNickname: data.userNickname,\n    userId: data.userId,\n    gameMode: data.gameMode,\n    title: data.title,\n    startTier: data.startTier,\n    endTier: data.endTier,\n    endTime: data.endTime,\n    headCount: data.headCount,\n    top: data.top,\n    bottom: data.bottom,\n    mid: data.mid,\n    jungle: data.jungle,\n    support: data.support,\n    content: data.content,\n    talkon: data.talkOn\n  }, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\n;\n\nfunction addLolPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addLolPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addLolPostAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          console.log(result);\n          _context2.next = 7;\n          return put({\n            type: ADD_LOL_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context2.next = 14;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0.response);\n          _context2.next = 14;\n          return put({\n            type: ADD_LOL_POST_FAILURE,\n            error: _context2.t0.response\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nfunction deleteLolPostAPI(data2) {\n  return axios[\"delete\"](\"http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol\", {\n    headers: {\n      Authorization: data2.userToken\n    },\n    data: {\n      postId: data2.postId,\n      userId: data2.userId\n    }\n  });\n}\n\n;\n\nfunction deleteLolPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function deleteLolPost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(deleteLolPostAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          console.log(result);\n          _context3.next = 7;\n          return put({\n            type: DELETE_LOL_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context3.next = 14;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0.response);\n          _context3.next = 14;\n          return put({\n            type: DELETE_LOL_POST_FAILURE,\n            error: _context3.t0.response\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction updateLolPostAPI(data) {\n  return axios.put(\"http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol\", {\n    postId: data.postId,\n    userId: data.userId,\n    gameMode: data.gameMode,\n    title: data.title,\n    startTier: data.startTier,\n    endTier: data.endTier,\n    endTime: data.endTime,\n    headCount: data.headCount,\n    top: data.top,\n    bottom: data.bottom,\n    mid: data.mid,\n    jungle: data.jungle,\n    support: data.support,\n    content: data.content,\n    talkon: data.talkOn\n  }, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\n;\n\nfunction updateLolPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function updateLolPost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(updateLolPostAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          console.log(result);\n          _context4.next = 7;\n          return put({\n            type: UPDATE_LOL_POST_SUCCESS,\n            data: result.data,\n            data2: action.data\n          });\n\n        case 7:\n          _context4.next = 14;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0.response);\n          _context4.next = 14;\n          return put({\n            type: UPDATE_LOL_POST_FAILURE,\n            error: _context4.t0.response\n          });\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 9]]);\n}\n\nfunction filterLolPostAPI(data) {\n  return axios.get(\"http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol/filter?gameMode=\".concat(data.gameMode, \"&headCount=\").concat(data.headCount, \"&wantTier=\").concat(data.wantTier, \"&top=\").concat(data.top, \"&bottom=\").concat(data.bottom, \"&mid=\").concat(data.mid, \"&jungle=\").concat(data.jungle, \"&support=\").concat(data.support, \"&talkon=\").concat(data.talkon, \"&limit=\").concat(data.limit, \"&offset=\").concat(data.offset), {}, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\n;\n\nfunction filterLolPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function filterLolPost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(filterLolPostAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          console.log(result);\n          _context5.next = 7;\n          return put({\n            type: FILTER_LOL_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context5.next = 14;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0.response);\n          _context5.next = 14;\n          return put({\n            type: FILTER_LOL_POST_FAILURE,\n            error: _context5.t0.response\n          });\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfunction watchLoadAllLolPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadAllLolPosts$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(LOAD_ALL_LOL_POSTS_REQUEST, loadAllLolPosts);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchAddLolPost() {\n  return _regeneratorRuntime.wrap(function watchAddLolPost$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(ADD_LOL_POST_REQUEST, addLolPost);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchDeleteLolPost() {\n  return _regeneratorRuntime.wrap(function watchDeleteLolPost$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(DELETE_LOL_POST_REQUEST, deleteLolPost);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchUpdateLolPost() {\n  return _regeneratorRuntime.wrap(function watchUpdateLolPost$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(UPDATE_LOL_POST_REQUEST, updateLolPost);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchFilterLolPost() {\n  return _regeneratorRuntime.wrap(function watchFilterLolPost$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(FILTER_LOL_POST_REQUEST, filterLolPost);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchLoadAllLolPosts), fork(watchAddLolPost), fork(watchDeleteLolPost), fork(watchUpdateLolPost), fork(watchFilterLolPost)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/sagas/post.js"],"names":["loadAllLolPosts","addLolPost","deleteLolPost","updateLolPost","filterLolPost","watchLoadAllLolPosts","watchAddLolPost","watchDeleteLolPost","watchUpdateLolPost","watchFilterLolPost","postSaga","axios","all","put","takeLatest","fork","call","LOAD_ALL_LOL_POSTS_REQUEST","LOAD_ALL_LOL_POSTS_SUCCESS","LOAD_ALL_LOL_POSTS_FAILURE","ADD_LOL_POST_REQUEST","ADD_LOL_POST_SUCCESS","ADD_LOL_POST_FAILURE","DELETE_LOL_POST_REQUEST","DELETE_LOL_POST_SUCCESS","DELETE_LOL_POST_FAILURE","UPDATE_LOL_POST_REQUEST","UPDATE_LOL_POST_SUCCESS","UPDATE_LOL_POST_FAILURE","FILTER_LOL_POST_REQUEST","FILTER_LOL_POST_SUCCESS","FILTER_LOL_POST_FAILURE","loadAllLolPostsAPI","data","get","limit","offset","headers","Authorization","userToken","action","result","console","log","type","error","response","addLolPostAPI","post","userNickname","userId","gameMode","title","startTier","endTier","endTime","headCount","top","bottom","mid","jungle","support","content","talkon","talkOn","deleteLolPostAPI","data2","postId","updateLolPostAPI","filterLolPostAPI","wantTier"],"mappings":";;oDA0BUA,e;qDA+BAC,U;qDAyBAC,a;qDAiCAC,a;qDAyBAC,a;qDAmBAC,oB;qDAIAC,e;qDAIAC,kB;qDAIAC,kB;sDAIAC,kB;sDAIeC,Q;;AAnLzB,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,EAA+BC,IAA/B,EAAqCC,IAArC,QAAiD,oBAAjD;AAEA,SACIC,0BADJ,EAEIC,0BAFJ,EAGIC,0BAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,EAMIC,oBANJ,EAOIC,uBAPJ,EAQIC,uBARJ,EASIC,uBATJ,EAUIC,uBAVJ,EAWIC,uBAXJ,EAYIC,uBAZJ,EAaIC,uBAbJ,EAcIC,uBAdJ,EAeIC,uBAfJ,QAgBO,kBAhBP;;AAkBA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AAC9B,SAAOtB,KAAK,CAACuB,GAAN,yFAA2FD,IAAI,CAACE,KAAhG,qBAAgHF,IAAI,CAACG,MAArH,GACH,EADG,EACC;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEL,IAAI,CAACM;AAAtB;AAAX,GADD,CAAP;AAEH;;AAED,SAAUvC,eAAV,CAA0BwC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMxB,IAAI,CAACgB,kBAAD,EAAqBQ,MAAM,CAACP,IAA5B,CAAV;;AAFvB;AAEcQ,UAAAA,MAFd;AAGQC,UAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACP,IAAnB;AAHR;AAIQ,iBAAMpB,GAAG,CAAC;AACN+B,YAAAA,IAAI,EAAE1B,0BADA;AAENe,YAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFP,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AASQS,UAAAA,OAAO,CAACC,GAAR;AATR;AAUQ,iBAAM9B,GAAG,CAAC;AACN+B,YAAAA,IAAI,EAAEzB,0BADA;AAEN0B,YAAAA,KAAK,EAAE,YAAIC,QAAJ,CAAab;AAFd,WAAD,CAAT;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAASc,aAAT,CAAuBd,IAAvB,EAA6B;AACzB,SAAOtB,KAAK,CAACqC,IAAN,4EACH;AACIC,IAAAA,YAAY,EAAEhB,IAAI,CAACgB,YADvB;AACqCC,IAAAA,MAAM,EAAEjB,IAAI,CAACiB,MADlD;AAEIC,IAAAA,QAAQ,EAAElB,IAAI,CAACkB,QAFnB;AAE6BC,IAAAA,KAAK,EAAEnB,IAAI,CAACmB,KAFzC;AAGIC,IAAAA,SAAS,EAAEpB,IAAI,CAACoB,SAHpB;AAG+BC,IAAAA,OAAO,EAAErB,IAAI,CAACqB,OAH7C;AAIIC,IAAAA,OAAO,EAAEtB,IAAI,CAACsB,OAJlB;AAI2BC,IAAAA,SAAS,EAAEvB,IAAI,CAACuB,SAJ3C;AAKIC,IAAAA,GAAG,EAAExB,IAAI,CAACwB,GALd;AAKmBC,IAAAA,MAAM,EAAEzB,IAAI,CAACyB,MALhC;AAMIC,IAAAA,GAAG,EAAE1B,IAAI,CAAC0B,GANd;AAMmBC,IAAAA,MAAM,EAAE3B,IAAI,CAAC2B,MANhC;AAOIC,IAAAA,OAAO,EAAE5B,IAAI,CAAC4B,OAPlB;AAO2BC,IAAAA,OAAO,EAAE7B,IAAI,CAAC6B,OAPzC;AAQIC,IAAAA,MAAM,EAAE9B,IAAI,CAAC+B;AARjB,GADG,EAUA;AAAE3B,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEL,IAAI,CAACM;AAAtB;AAAX,GAVA,CAAP;AAWH;;AAAA;;AAED,SAAUtC,UAAV,CAAqBuC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMxB,IAAI,CAAC+B,aAAD,EAAgBP,MAAM,CAACP,IAAvB,CAAV;;AAFvB;AAEcQ,UAAAA,MAFd;AAGQC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAHR;AAKQ,iBAAM5B,GAAG,CAAC;AACN+B,YAAAA,IAAI,EAAEvB,oBADA;AAENY,YAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFP,WAAD,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUQS,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAIG,QAAhB;AAVR;AAWQ,iBAAMjC,GAAG,CAAC;AACN+B,YAAAA,IAAI,EAAEtB,oBADA;AAENuB,YAAAA,KAAK,EAAE,aAAIC;AAFL,WAAD,CAAT;;AAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,SAASmB,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,SAAOvD,KAAK,UAAL,4EACP;AAAC0B,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAE4B,KAAK,CAAC3B;AAAvB,KAAV;AAA6CN,IAAAA,IAAI,EAAG;AAACkC,MAAAA,MAAM,EAAED,KAAK,CAACC,MAAf;AAAuBjB,MAAAA,MAAM,EAAEgB,KAAK,CAAChB;AAArC;AAApD,GADO,CAAP;AAEF;;AAAA;;AAEF,SAAUhD,aAAV,CAAwBsC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMxB,IAAI,CAACiD,gBAAD,EAAmBzB,MAAM,CAACP,IAA1B,CAAV;;AAFvB;AAEcQ,UAAAA,MAFd;AAGQC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAHR;AAKQ,iBAAM5B,GAAG,CAAC;AACN+B,YAAAA,IAAI,EAAEpB,uBADA;AAENS,YAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFP,WAAD,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUQS,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAIG,QAAhB;AAVR;AAWQ,iBAAMjC,GAAG,CAAC;AACN+B,YAAAA,IAAI,EAAEnB,uBADA;AAENoB,YAAAA,KAAK,EAAE,aAAIC;AAFL,WAAD,CAAT;;AAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,SAASsB,gBAAT,CAA0BnC,IAA1B,EAAgC;AAC5B,SAAOtB,KAAK,CAACE,GAAN,4EACH;AACIsD,IAAAA,MAAM,EAAElC,IAAI,CAACkC,MADjB;AACyBjB,IAAAA,MAAM,EAAEjB,IAAI,CAACiB,MADtC;AAEIC,IAAAA,QAAQ,EAAElB,IAAI,CAACkB,QAFnB;AAE6BC,IAAAA,KAAK,EAAEnB,IAAI,CAACmB,KAFzC;AAGIC,IAAAA,SAAS,EAAEpB,IAAI,CAACoB,SAHpB;AAG+BC,IAAAA,OAAO,EAAErB,IAAI,CAACqB,OAH7C;AAIIC,IAAAA,OAAO,EAAEtB,IAAI,CAACsB,OAJlB;AAI2BC,IAAAA,SAAS,EAAEvB,IAAI,CAACuB,SAJ3C;AAKIC,IAAAA,GAAG,EAAExB,IAAI,CAACwB,GALd;AAKmBC,IAAAA,MAAM,EAAEzB,IAAI,CAACyB,MALhC;AAMIC,IAAAA,GAAG,EAAE1B,IAAI,CAAC0B,GANd;AAMmBC,IAAAA,MAAM,EAAE3B,IAAI,CAAC2B,MANhC;AAOIC,IAAAA,OAAO,EAAE5B,IAAI,CAAC4B,OAPlB;AAO2BC,IAAAA,OAAO,EAAE7B,IAAI,CAAC6B,OAPzC;AAQIC,IAAAA,MAAM,EAAE9B,IAAI,CAAC+B;AARjB,GADG,EAUA;AAAE3B,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEL,IAAI,CAACM;AAAtB;AAAX,GAVA,CAAP;AAWH;;AAAA;;AAED,SAAUpC,aAAV,CAAwBqC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMxB,IAAI,CAACoD,gBAAD,EAAmB5B,MAAM,CAACP,IAA1B,CAAV;;AAFvB;AAEcQ,UAAAA,MAFd;AAGQC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAHR;AAKQ,iBAAM5B,GAAG,CAAC;AACN+B,YAAAA,IAAI,EAAEjB,uBADA;AAENM,YAAAA,IAAI,EAAEQ,MAAM,CAACR,IAFP;AAGNiC,YAAAA,KAAK,EAAE1B,MAAM,CAACP;AAHR,WAAD,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWQS,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAIG,QAAhB;AAXR;AAYQ,iBAAMjC,GAAG,CAAC;AACN+B,YAAAA,IAAI,EAAEhB,uBADA;AAENiB,YAAAA,KAAK,EAAE,aAAIC;AAFL,WAAD,CAAT;;AAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,SAASuB,gBAAT,CAA0BpC,IAA1B,EAAgC;AAC5B,SAAOtB,KAAK,CAACuB,GAAN,mGAAqGD,IAAI,CAACkB,QAA1G,wBAAgIlB,IAAI,CAACuB,SAArI,uBAA2JvB,IAAI,CAACqC,QAAhK,kBAAgLrC,IAAI,CAACwB,GAArL,qBAAmMxB,IAAI,CAACyB,MAAxM,kBAAsNzB,IAAI,CAAC0B,GAA3N,qBAAyO1B,IAAI,CAAC2B,MAA9O,sBAAgQ3B,IAAI,CAAC4B,OAArQ,qBAAuR5B,IAAI,CAAC8B,MAA5R,oBAA4S9B,IAAI,CAACE,KAAjT,qBAAiUF,IAAI,CAACG,MAAtU,GACH,EADG,EACC;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEL,IAAI,CAACM;AAAtB;AAAX,GADD,CAAP;AAEH;;AAAA;;AAED,SAAUnC,aAAV,CAAwBoC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMxB,IAAI,CAACqD,gBAAD,EAAmB7B,MAAM,CAACP,IAA1B,CAAV;;AAFvB;AAEcQ,UAAAA,MAFd;AAGQC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAHR;AAKQ,iBAAM5B,GAAG,CAAC;AACN+B,YAAAA,IAAI,EAAEd,uBADA;AAENG,YAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFP,WAAD,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUQS,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAIG,QAAhB;AAVR;AAWQ,iBAAMjC,GAAG,CAAC;AACN+B,YAAAA,IAAI,EAAEb,uBADA;AAENc,YAAAA,KAAK,EAAE,aAAIC;AAFL,WAAD,CAAT;;AAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,SAAUzC,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMS,UAAU,CAACG,0BAAD,EAA6BjB,eAA7B,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUM,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMQ,UAAU,CAACM,oBAAD,EAAuBnB,UAAvB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUM,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMO,UAAU,CAACS,uBAAD,EAA0BrB,aAA1B,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUM,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMM,UAAU,CAACY,uBAAD,EAA0BvB,aAA1B,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUM,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMK,UAAU,CAACe,uBAAD,EAA0BzB,aAA1B,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUM,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAME,GAAG,CAAC,CACNG,IAAI,CAACV,oBAAD,CADE,EAENU,IAAI,CAACT,eAAD,CAFE,EAGNS,IAAI,CAACR,kBAAD,CAHE,EAINQ,IAAI,CAACP,kBAAD,CAJE,EAKNO,IAAI,CAACN,kBAAD,CALE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from \"axios\";\r\nimport { all, put, takeLatest, fork, call } from \"redux-saga/effects\";\r\n\r\nimport {\r\n    LOAD_ALL_LOL_POSTS_REQUEST,\r\n    LOAD_ALL_LOL_POSTS_SUCCESS,\r\n    LOAD_ALL_LOL_POSTS_FAILURE,\r\n    ADD_LOL_POST_REQUEST,\r\n    ADD_LOL_POST_SUCCESS,\r\n    ADD_LOL_POST_FAILURE,\r\n    DELETE_LOL_POST_REQUEST,\r\n    DELETE_LOL_POST_SUCCESS,\r\n    DELETE_LOL_POST_FAILURE,\r\n    UPDATE_LOL_POST_REQUEST,\r\n    UPDATE_LOL_POST_SUCCESS,\r\n    UPDATE_LOL_POST_FAILURE,\r\n    FILTER_LOL_POST_REQUEST,\r\n    FILTER_LOL_POST_SUCCESS,\r\n    FILTER_LOL_POST_FAILURE,\r\n} from '../reducers/post';\r\n\r\nfunction loadAllLolPostsAPI(data) {\r\n    return axios.get(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol?limit=${data.limit}&offset=${data.offset}`,\r\n        {}, { headers: { Authorization: data.userToken } });\r\n}\r\n\r\nfunction* loadAllLolPosts(action) {\r\n    try {\r\n        const result = yield call(loadAllLolPostsAPI, action.data);\r\n        console.log(action.data);\r\n        yield put({\r\n            type: LOAD_ALL_LOL_POSTS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n        yield put({\r\n            type: LOAD_ALL_LOL_POSTS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction addLolPostAPI(data) {\r\n    return axios.post(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`,\r\n        {\r\n            userNickname: data.userNickname, userId: data.userId,\r\n            gameMode: data.gameMode, title: data.title,\r\n            startTier: data.startTier, endTier: data.endTier,\r\n            endTime: data.endTime, headCount: data.headCount,\r\n            top: data.top, bottom: data.bottom,\r\n            mid: data.mid, jungle: data.jungle,\r\n            support: data.support, content: data.content,\r\n            talkon: data.talkOn,\r\n        }, { headers: { Authorization: data.userToken } });\r\n};\r\n\r\nfunction* addLolPost(action) {\r\n    try {\r\n        const result = yield call(addLolPostAPI, action.data);\r\n        console.log(result)\r\n\r\n        yield put({\r\n            type: ADD_LOL_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err.response);\r\n        yield put({\r\n            type: ADD_LOL_POST_FAILURE,\r\n            error: err.response,\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction deleteLolPostAPI(data2) {\r\n    return axios.delete(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`,\r\n    {headers: { Authorization: data2.userToken}, data : {postId: data2.postId, userId: data2.userId}}\r\n)};\r\n\r\nfunction* deleteLolPost(action) {\r\n    try {\r\n        const result = yield call(deleteLolPostAPI, action.data);\r\n        console.log(result)\r\n\r\n        yield put({\r\n            type: DELETE_LOL_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err.response);\r\n        yield put({\r\n            type: DELETE_LOL_POST_FAILURE,\r\n            error: err.response,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction updateLolPostAPI(data) {\r\n    return axios.put(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`,\r\n        {\r\n            postId: data.postId, userId: data.userId,\r\n            gameMode: data.gameMode, title: data.title,\r\n            startTier: data.startTier, endTier: data.endTier,\r\n            endTime: data.endTime, headCount: data.headCount,\r\n            top: data.top, bottom: data.bottom,\r\n            mid: data.mid, jungle: data.jungle,\r\n            support: data.support, content: data.content,\r\n            talkon: data.talkOn,\r\n        }, { headers: { Authorization: data.userToken } });\r\n};\r\n\r\nfunction* updateLolPost(action) {\r\n    try {\r\n        const result = yield call(updateLolPostAPI, action.data);\r\n        console.log(result)\r\n\r\n        yield put({\r\n            type: UPDATE_LOL_POST_SUCCESS,\r\n            data: result.data,\r\n            data2: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err.response);\r\n        yield put({\r\n            type: UPDATE_LOL_POST_FAILURE,\r\n            error: err.response,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction filterLolPostAPI(data) {\r\n    return axios.get(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol/filter?gameMode=${data.gameMode}&headCount=${data.headCount}&wantTier=${data.wantTier}&top=${data.top}&bottom=${data.bottom}&mid=${data.mid}&jungle=${data.jungle}&support=${data.support}&talkon=${data.talkon}&limit=${data.limit}&offset=${data.offset}`,\r\n        {}, { headers: { Authorization: data.userToken } });\r\n};\r\n\r\nfunction* filterLolPost(action) {\r\n    try {\r\n        const result = yield call(filterLolPostAPI, action.data);\r\n        console.log(result)\r\n\r\n        yield put({\r\n            type: FILTER_LOL_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err.response);\r\n        yield put({\r\n            type: FILTER_LOL_POST_FAILURE,\r\n            error: err.response,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* watchLoadAllLolPosts() {\r\n    yield takeLatest(LOAD_ALL_LOL_POSTS_REQUEST, loadAllLolPosts);\r\n}\r\n\r\nfunction* watchAddLolPost() {\r\n    yield takeLatest(ADD_LOL_POST_REQUEST, addLolPost);\r\n}\r\n\r\nfunction* watchDeleteLolPost() {\r\n    yield takeLatest(DELETE_LOL_POST_REQUEST, deleteLolPost);\r\n}\r\n\r\nfunction* watchUpdateLolPost() {\r\n    yield takeLatest(UPDATE_LOL_POST_REQUEST, updateLolPost);\r\n}\r\n\r\nfunction* watchFilterLolPost() {\r\n    yield takeLatest(FILTER_LOL_POST_REQUEST, filterLolPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchLoadAllLolPosts),\r\n        fork(watchAddLolPost),\r\n        fork(watchDeleteLolPost),\r\n        fork(watchUpdateLolPost),\r\n        fork(watchFilterLolPost)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}