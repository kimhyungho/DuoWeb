{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k\\\\Desktop\\\\DUO\\\\front\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport { Button, Pagination } from 'antd';\nimport React, { useEffect, useCallback, useState } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Link from 'next/link';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SignUpForm from '../components/SignUpForm';\nimport { loadAllLolPostsRequestAction } from '../reducers/post';\nimport PostCard from '../components/LolPostCard';\nimport DetailPost from '../components/DetailPost';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    logInError,\n    logInDone\n  } = useSelector(state => state.user);\n  const {\n    posts,\n    loadPostLoading,\n    loadPostError,\n    detailLolPost,\n    detailLolPostOn\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    const data = {\n      limit: 100,\n      offset: 0,\n      userToken: me.userToken\n    };\n\n    if (logInDone) {\n      dispatch(loadAllLolPostsRequestAction(data));\n    }\n  }, [logInDone]);\n  const onPagenate = useCallback(e => {\n    alert(e);\n  }, []);\n\n  if (logInError === -401) {\n    return __jsx(AppLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, __jsx(SignUpForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    return __jsx(AppLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, me.userToken ? __jsx(\"div\", {\n      style: {\n        textAlign: 'right',\n        margin: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, __jsx(Link, {\n      href: \"./lol_write\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 79\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 104\n      }\n    }, \"\\uAE00\\uC4F0\\uAE30\")))) : __jsx(React.Fragment, null), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), me.userToken && !detailLolPostOn && posts.map(post => __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 74\n      }\n    })), me.userToken && detailLolPostOn && __jsx(DetailPost, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 53\n      }\n    }), __jsx(Pagination, {\n      defaultCurrent: 1,\n      total: 50,\n      onChange: onPagenate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }));\n  }\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/pages/index.js"],"names":["Button","Pagination","React","useEffect","useCallback","useState","AppLayout","Link","useSelector","useDispatch","SignUpForm","loadAllLolPostsRequestAction","PostCard","DetailPost","Home","dispatch","page","setPage","me","state","user","logInError","logInDone","posts","loadPostLoading","loadPostError","detailLolPost","detailLolPostOn","post","data","limit","offset","userToken","onPagenate","e","alert","textAlign","margin","marginLeft","map","id"],"mappings":"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","sourcesContent":["import { Button, Pagination } from 'antd';\r\nimport React, { useEffect, useCallback, useState } from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\nimport Link from 'next/link';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SignUpForm from '../components/SignUpForm';\r\nimport { loadAllLolPostsRequestAction } from '../reducers/post';\r\nimport PostCard from '../components/LolPostCard'\r\nimport DetailPost from '../components/DetailPost';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const [page, setPage] = useState(1);\r\n    const { me } = useSelector((state) => state.user);\r\n    const { logInError, logInDone } = useSelector((state) => state.user);\r\n    const { posts, loadPostLoading, loadPostError, detailLolPost, detailLolPostOn } = useSelector((state) => state.post);\r\n\r\n    useEffect(() => {\r\n        const data = { limit: 100, offset: 0, userToken: me.userToken }\r\n        if (logInDone) {\r\n            dispatch(loadAllLolPostsRequestAction(data));\r\n        }\r\n    }, [logInDone]);\r\n\r\n    const onPagenate = useCallback((e) => {\r\n        alert(e)\r\n    }, []);\r\n\r\n\r\n    if (logInError === -401) {\r\n        return (\r\n            <AppLayout>\r\n                <SignUpForm />\r\n            </AppLayout>\r\n        )\r\n    } else {\r\n        return (\r\n            <AppLayout>\r\n                {me.userToken\r\n                    ? <div style={{ textAlign: 'right', margin: 20 }}>\r\n                        <Button type=\"primary\" style={{ marginLeft: '20px' }}><Link href=\"./lol_write\"><a>글쓰기</a></Link></Button>\r\n                    </div>\r\n                    : <></>}\r\n\r\n                <br />\r\n                {me.userToken && !detailLolPostOn && posts.map((post) => <PostCard key={post.id} post={post} />)}\r\n                {me.userToken && detailLolPostOn && <DetailPost />}\r\n                <Pagination defaultCurrent={1} total={50} onChange={onPagenate} />\r\n            </AppLayout>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}