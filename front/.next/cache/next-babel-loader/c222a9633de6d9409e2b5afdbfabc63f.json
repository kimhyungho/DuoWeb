{"ast":null,"code":"import produce from '../util/produce';\nexport const initialState = {\n  posts: [],\n  myLolPosts: [],\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  addLolPostLoading: false,\n  addLolPostDone: false,\n  addLolPostError: false\n};\nexport const LOAD_ALL_LOL_POSTS_REQUEST = 'LOAD_ALL_LOL_POSTS_REQUEST';\nexport const LOAD_ALL_LOL_POSTS_SUCCESS = 'LOAD_ALL_LOL_POSTS_SUCCESS';\nexport const LOAD_ALL_LOL_POSTS_FAILURE = 'LOAD_ALL_LOL_POSTS_FAILURE';\nexport const ADD_LOL_POST_REQUEST = 'ADD_LOL_POST_REQUEST';\nexport const ADD_LOL_POST_SUCCESS = 'ADD_LOL_POST_SUCCESS';\nexport const ADD_LOL_POST_FAILURE = 'ADD_LOL_POST_FAILURE';\nexport const loadAllLolPostsRequestAction = data => ({\n  type: LOAD_ALL_LOL_POSTS_REQUEST,\n  data\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_ALL_LOL_POSTS_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n\n    case LOAD_ALL_LOL_POSTS_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.posts = action.data;\n      break;\n\n    case LOAD_ALL_LOL_POSTS_FAILURE:\n      draft.loadPostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n\n    case ADD_LOL_POST_REQUEST:\n      draft.addLolPostLoading = true;\n      draft.addLolPostDone = false;\n      draft.loadPostError = null;\n      break;\n\n    case ADD_LOL_POST_SUCCESS:\n      draft.addLolPostLoading = false;\n      draft.addLolPostDone = true;\n      break;\n\n    case ADD_LOL_POST_FAILURE:\n      draft.addLolPostLoading = false;\n      draft.addLolPostError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/reducers/post.js"],"names":["produce","initialState","posts","myLolPosts","loadPostLoading","loadPostDone","loadPostError","addLolPostLoading","addLolPostDone","addLolPostError","LOAD_ALL_LOL_POSTS_REQUEST","LOAD_ALL_LOL_POSTS_SUCCESS","LOAD_ALL_LOL_POSTS_FAILURE","ADD_LOL_POST_REQUEST","ADD_LOL_POST_SUCCESS","ADD_LOL_POST_FAILURE","loadAllLolPostsRequestAction","data","type","reducer","state","action","draft","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,UAAU,EAAE,EAFY;AAGxBC,EAAAA,eAAe,EAAE,KAHO;AAIxBC,EAAAA,YAAY,EAAE,KAJU;AAKxBC,EAAAA,aAAa,EAAE,IALS;AAMxBC,EAAAA,iBAAiB,EAAE,KANK;AAOxBC,EAAAA,cAAc,EAAE,KAPQ;AAQxBC,EAAAA,eAAe,EAAE;AARO,CAArB;AAWP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AAEP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,4BAA4B,GAAIC,IAAD,KAAW;AACnDC,EAAAA,IAAI,EAAER,0BAD6C;AAEnDO,EAAAA;AAFmD,CAAX,CAArC;;AAMP,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGnB,YAAT,EAAuBoB,MAAvB,KAAkCrB,OAAO,CAACoB,KAAD,EAASE,KAAD,IAAW;AACxE,UAAQD,MAAM,CAACH,IAAf;AACI,SAAKR,0BAAL;AACIY,MAAAA,KAAK,CAAClB,eAAN,GAAwB,IAAxB;AACAkB,MAAAA,KAAK,CAACjB,YAAN,GAAqB,KAArB;AACAiB,MAAAA,KAAK,CAAChB,aAAN,GAAsB,IAAtB;AACA;;AACJ,SAAKK,0BAAL;AACIW,MAAAA,KAAK,CAAClB,eAAN,GAAwB,KAAxB;AACAkB,MAAAA,KAAK,CAACjB,YAAN,GAAqB,IAArB;AACAiB,MAAAA,KAAK,CAACpB,KAAN,GAAcmB,MAAM,CAACJ,IAArB;AACA;;AACJ,SAAKL,0BAAL;AACIU,MAAAA,KAAK,CAAClB,eAAN,GAAwB,KAAxB;AACAkB,MAAAA,KAAK,CAAChB,aAAN,GAAsBe,MAAM,CAACE,KAA7B;AACA;;AACJ,SAAKV,oBAAL;AACIS,MAAAA,KAAK,CAACf,iBAAN,GAA0B,IAA1B;AACAe,MAAAA,KAAK,CAACd,cAAN,GAAuB,KAAvB;AACAc,MAAAA,KAAK,CAAChB,aAAN,GAAsB,IAAtB;AACA;;AACJ,SAAKQ,oBAAL;AACIQ,MAAAA,KAAK,CAACf,iBAAN,GAA0B,KAA1B;AACAe,MAAAA,KAAK,CAACd,cAAN,GAAuB,IAAvB;AACA;;AACJ,SAAKO,oBAAL;AACIO,MAAAA,KAAK,CAACf,iBAAN,GAA0B,KAA1B;AACAe,MAAAA,KAAK,CAACb,eAAN,GAAwBY,MAAM,CAACE,KAA/B;AACA;;AACJ;AACI;AA7BR;AA+BH,CAhCwD,CAAzD;;AAkCA,eAAeJ,OAAf","sourcesContent":["import produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n    posts: [],\r\n    myLolPosts: [],\r\n    loadPostLoading: false,\r\n    loadPostDone: false,\r\n    loadPostError: null,\r\n    addLolPostLoading: false,\r\n    addLolPostDone: false,\r\n    addLolPostError: false,\r\n};\r\n\r\nexport const LOAD_ALL_LOL_POSTS_REQUEST = 'LOAD_ALL_LOL_POSTS_REQUEST';\r\nexport const LOAD_ALL_LOL_POSTS_SUCCESS = 'LOAD_ALL_LOL_POSTS_SUCCESS';\r\nexport const LOAD_ALL_LOL_POSTS_FAILURE = 'LOAD_ALL_LOL_POSTS_FAILURE';\r\n\r\nexport const ADD_LOL_POST_REQUEST = 'ADD_LOL_POST_REQUEST';\r\nexport const ADD_LOL_POST_SUCCESS = 'ADD_LOL_POST_SUCCESS';\r\nexport const ADD_LOL_POST_FAILURE = 'ADD_LOL_POST_FAILURE';\r\n\r\nexport const loadAllLolPostsRequestAction = (data) => ({\r\n    type: LOAD_ALL_LOL_POSTS_REQUEST,\r\n    data,\r\n});\r\n\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case LOAD_ALL_LOL_POSTS_REQUEST:\r\n            draft.loadPostLoading = true;\r\n            draft.loadPostDone = false;\r\n            draft.loadPostError = null;\r\n            break;\r\n        case LOAD_ALL_LOL_POSTS_SUCCESS:\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostDone = true;\r\n            draft.posts = action.data;\r\n            break;\r\n        case LOAD_ALL_LOL_POSTS_FAILURE:\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostError = action.error;\r\n            break;\r\n        case ADD_LOL_POST_REQUEST:\r\n            draft.addLolPostLoading = true;\r\n            draft.addLolPostDone = false;\r\n            draft.loadPostError = null;\r\n            break;\r\n        case ADD_LOL_POST_SUCCESS:\r\n            draft.addLolPostLoading = false;\r\n            draft.addLolPostDone = true;\r\n            break;\r\n        case ADD_LOL_POST_FAILURE:\r\n            draft.addLolPostLoading = false;\r\n            draft.addLolPostError = action.error;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}