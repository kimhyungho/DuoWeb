{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k\\\\Desktop\\\\DUO\\\\front\\\\components\\\\MyInfo.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Input, Form } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logoutRequestAction, signOutRequestAction, changeNicknameRequestAction, changeNickname } from '../reducers/user';\n\nconst MyInfo = () => {\n  const {\n    me,\n    signOutLoading,\n    signOutDone,\n    changeNicknameDone,\n    changeNicknameLoading\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    0: newNickname,\n    1: setNewNickname\n  } = useState(me.nickname);\n  const {\n    0: isChangeNickname,\n    1: setIsChangeNickname\n  } = useState(false);\n  const onSetNewNickname = useCallback(e => {\n    setNewNickname(e.target.value);\n  }, []);\n  const onIsChangeNickname = useCallback(() => {\n    setIsChangeNickname(!isChangeNickname);\n  }, []);\n  const onSignOut = useCallback(() => {\n    const data = {\n      userId: me.userId,\n      userToken: me.userToken\n    };\n    dispatch(signOutRequestAction(data));\n  }, []);\n  const onChangeNickname = useCallback(() => {\n    const data = {\n      userId: me.userId,\n      nickname: newNickname,\n      userToken: me.userToken\n    };\n    dispatch(changeNicknameRequestAction(data));\n  }, [newNickname]);\n  useEffect(() => {\n    if (signOutDone) {\n      dispatch(logoutRequestAction());\n    }\n  }, [signOutDone]);\n  useEffect(() => {\n    if (changeNicknameDone) {\n      const data = {\n        newNickname\n      };\n      dispatch(setNicknameAction(data));\n    }\n  }, [newNickname]);\n  return __jsx(React.Fragment, null, isChangeNickname ? __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, __jsx(Input, {\n    onChange: onSetNewNickname,\n    type: \"text\",\n    suffix: __jsx(Button, {\n      onClick: onChangeNickname,\n      htmlType: \"submit\",\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 76\n      }\n    }, \"\\uD655\\uC778\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })) : __jsx(Input, {\n    prefix: me.nickname,\n    suffix: __jsx(Button, {\n      onClick: onIsChangeNickname,\n      loading: changeNicknameLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 55\n      }\n    }, \"\\uBCC0\\uACBD\"),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }), __jsx(Button, {\n    loading: signOutLoading,\n    onClick: onSignOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"\\uD68C\\uC6D0\\uD0C8\\uD1F4\"));\n};\n\nexport default MyInfo;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/components/MyInfo.js"],"names":["React","useCallback","useEffect","useState","Button","Input","Form","useSelector","useDispatch","logoutRequestAction","signOutRequestAction","changeNicknameRequestAction","changeNickname","MyInfo","me","signOutLoading","signOutDone","changeNicknameDone","changeNicknameLoading","state","user","dispatch","newNickname","setNewNickname","nickname","isChangeNickname","setIsChangeNickname","onSetNewNickname","e","target","value","onIsChangeNickname","onSignOut","data","userId","userToken","onChangeNickname","setNicknameAction"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Button, Input, Form } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logoutRequestAction, signOutRequestAction, changeNicknameRequestAction, changeNickname } from '../reducers/user';\r\n\r\n\r\nconst MyInfo = () => {\r\n\r\n    const { me, signOutLoading, signOutDone, changeNicknameDone, changeNicknameLoading } = useSelector((state) => state.user)\r\n    const dispatch = useDispatch();\r\n\r\n    const [newNickname, setNewNickname] = useState(me.nickname);\r\n    const [isChangeNickname, setIsChangeNickname] = useState(false);\r\n\r\n    const onSetNewNickname = useCallback((e) => {\r\n        setNewNickname(e.target.value);\r\n    }, []);\r\n\r\n    const onIsChangeNickname = useCallback(() => {\r\n        setIsChangeNickname(!isChangeNickname);\r\n    }, []);\r\n\r\n\r\n    const onSignOut = useCallback(() => {\r\n        const data = { userId: me.userId, userToken: me.userToken };\r\n        dispatch(signOutRequestAction(data));\r\n    }, []);\r\n\r\n    const onChangeNickname = useCallback(() => {\r\n        const data = { userId: me.userId, nickname: newNickname, userToken: me.userToken };\r\n        dispatch(changeNicknameRequestAction(data));\r\n    }, [newNickname]);\r\n\r\n    useEffect(() => {\r\n        if (signOutDone) {\r\n            dispatch(logoutRequestAction());\r\n        }\r\n    }, [signOutDone]);\r\n\r\n    useEffect(() => {\r\n        if (changeNicknameDone) {\r\n            const data = {newNickname};\r\n            dispatch(setNicknameAction(data));\r\n        }\r\n    }, [newNickname])\r\n\r\n    return (\r\n        <>\r\n            {isChangeNickname\r\n                ? <Form>\r\n                    <Input onChange={onSetNewNickname} type=\"text\" suffix={<Button onClick={onChangeNickname}  htmlType=\"submit\" type=\"primary\">확인</Button>} />\r\n                </Form>\r\n                : <Input prefix={me.nickname} suffix={<Button onClick={onIsChangeNickname} loading={changeNicknameLoading}>변경</Button>} disabled />}\r\n\r\n            <Button loading={signOutLoading} onClick={onSignOut}>회원탈퇴</Button>\r\n        </>\r\n    );\r\n}\r\nexport default MyInfo;"]},"metadata":{},"sourceType":"module"}