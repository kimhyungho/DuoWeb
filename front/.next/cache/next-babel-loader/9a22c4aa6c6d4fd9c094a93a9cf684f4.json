{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  posts: []\n};\nexport const getPostRequest = data => {\n  return {\n    type: 'GET_ALL_POST_REQUEST',\n    data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_ALL_POST_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'LOG_OUT':\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/reducers/post.js"],"names":["initialState","posts","getPostRequest","data","type","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAC;AADkB,CAArB;AAIP,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAU;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAG,sBADJ;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;;AAQP,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,sBAAL;AACI,+BACOE,KADP;;AAIJ,SAAK,SAAL;AACI,+BACOA,KADP;;AAIJ;AACI,aAAOA,KAAP;AAZR;AAcH,CAfD;;AAiBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    posts:[],\r\n};\r\n\r\nexport const getPostRequest = (data) => {\r\n    return {    \r\n        type : 'GET_ALL_POST_REQUEST',\r\n        data,\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_ALL_POST_REQUEST':\r\n            return {\r\n                ...state,\r\n\r\n            };\r\n        case 'LOG_OUT':\r\n            return {\r\n                ...state,\r\n\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}