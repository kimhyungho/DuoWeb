{"ast":null,"code":"import { all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nfunction socailLogInAPI() {}\n\nfunction* logIn(action) {\n  try {\n    console.log(\"된다\"); // yield put({\n    //     type: 'LOG_IN_SUCCESS',\n    //     data: action.data,\n    // });\n  } catch (err) {\n    console.log(\"안된다.\"); // yield put({\n    //     type: 'LOG_IN_FAILURE',\n    //     error: action.response.data,\n    // });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('SOCIAL_LOG_IN_REQUEST', logIn);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn)]);\n}","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/sagas/user.js"],"names":["all","fork","put","takeLatest","axios","useSelector","socailLogInAPI","logIn","action","console","log","err","watchLogIn","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,SAASC,cAAT,GAA0B,CAGzB;;AAGD,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAFA,CAIA;AACA;AACA;AACA;AAEH,GATD,CASE,OAAOC,GAAP,EAAY;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADU,CAEV;AACA;AACA;AACA;AACH;AACJ;;AAED,UAAUE,UAAV,GAAuB;AACnB,QAAMT,UAAU,CAAC,uBAAD,EAA0BI,KAA1B,CAAhB;AACH;;AAED,eAAe,UAAUM,QAAV,GAAqB;AAChC,QAAMb,GAAG,CAAC,CACNC,IAAI,CAACW,UAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction socailLogInAPI() {\r\n    \r\n\r\n}\r\n\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        \r\n        console.log(\"된다\");\r\n\r\n        // yield put({\r\n        //     type: 'LOG_IN_SUCCESS',\r\n        //     data: action.data,\r\n        // });\r\n\r\n    } catch (err) {\r\n        console.log(\"안된다.\");\r\n        // yield put({\r\n        //     type: 'LOG_IN_FAILURE',\r\n        //     error: action.response.data,\r\n        // });\r\n    }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest('SOCIAL_LOG_IN_REQUEST', logIn);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}