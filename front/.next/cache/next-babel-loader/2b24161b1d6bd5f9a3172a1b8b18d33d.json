{"ast":null,"code":"import produce from '../util/produce';\nexport const initialState = {\n  comments: [],\n  loadCommentsLoading: false,\n  loadCommentsDone: false,\n  loadCommentsError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removeCommentLoading: false,\n  removeCommentDone: false,\n  removeCommentError: null\n};\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const REMOVE_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const REMOVE_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const REMOVE_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const EMPTY_COMMENTS_REQUEST = 'EMPTY_COMMENTS_REQUEST';\nexport const loadCommentsRequestAction = data => ({\n  type: LOAD_COMMENTS_REQUEST,\n  data\n});\nexport const addCommentRequestAction = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\nexport const removeCommentRequestAction = data => ({\n  type: REMOVE_COMMENT_REQUEST,\n  data\n});\nexport const emptyCommentsRequestAction = () => ({\n  type: EMPTY_COMMENTS_REQUEST\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_COMMENTS_REQUEST:\n      draft.loadCommentsLoading = true;\n      draft.loadCommentsDone = false;\n      draft.loadCommentsError = null;\n      break;\n\n    case LOAD_COMMENTS_SUCCESS:\n      draft.loadCommentsLoading = false;\n      draft.loadCommentsDone = true;\n      draft.comments = action.data;\n      break;\n\n    case LOAD_COMMENTS_FAILURE:\n      draft.loadCommentsLoading = false;\n      draft.loadCommentsError = action.error;\n      break;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.loadCommentsError = null;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      draft.addCommentLoading = false;\n      draft.addCommentDone = true;\n      break;\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n\n    case REMOVE_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.loadCommentsError = null;\n      break;\n\n    case REMOVE_COMMENT_SUCCESS:\n      draft.removeCommentLoading = false;\n      draft.removeCommentDone = true;\n      break;\n\n    case REMOVE_COMMENT_FAILURE:\n      draft.removeCommentLoading = false;\n      draft.removeCommentError = action.error;\n      break;\n\n    case EMPTY_COMMENTS_REQUEST:\n      draft.comments = [];\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/reducers/comment.js"],"names":["produce","initialState","comments","loadCommentsLoading","loadCommentsDone","loadCommentsError","addCommentLoading","addCommentDone","addCommentError","removeCommentLoading","removeCommentDone","removeCommentError","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_COMMENT_REQUEST","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_FAILURE","EMPTY_COMMENTS_REQUEST","loadCommentsRequestAction","data","type","addCommentRequestAction","removeCommentRequestAction","emptyCommentsRequestAction","reducer","state","action","draft","error"],"mappings":"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","sourcesContent":["import produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n    comments: [],\r\n    loadCommentsLoading: false,\r\n    loadCommentsDone: false,\r\n    loadCommentsError: null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n    removeCommentLoading: false,\r\n    removeCommentDone: false,\r\n    removeCommentError: null,\r\n};\r\n\r\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\r\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\r\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const REMOVE_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const REMOVE_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const REMOVE_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const EMPTY_COMMENTS_REQUEST = 'EMPTY_COMMENTS_REQUEST';\r\n\r\nexport const loadCommentsRequestAction = (data) => ({\r\n    type: LOAD_COMMENTS_REQUEST,\r\n    data,\r\n});\r\n\r\n\r\nexport const addCommentRequestAction = (data) => ({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const removeCommentRequestAction = (data) => ({\r\n    type: REMOVE_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const emptyCommentsRequestAction = () => ({\r\n    type: EMPTY_COMMENTS_REQUEST\r\n});\r\n\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case LOAD_COMMENTS_REQUEST:\r\n            draft.loadCommentsLoading = true;\r\n            draft.loadCommentsDone = false;\r\n            draft.loadCommentsError = null;\r\n            break;\r\n        case LOAD_COMMENTS_SUCCESS:\r\n            draft.loadCommentsLoading = false;\r\n            draft.loadCommentsDone = true;\r\n            draft.comments = action.data;\r\n            break;\r\n        case LOAD_COMMENTS_FAILURE:\r\n            draft.loadCommentsLoading = false;\r\n            draft.loadCommentsError = action.error;\r\n            break;\r\n        case ADD_COMMENT_REQUEST:\r\n            draft.addCommentLoading = true;\r\n            draft.addCommentDone = false;\r\n            draft.loadCommentsError = null;\r\n            break;\r\n        case ADD_COMMENT_SUCCESS:\r\n            draft.addCommentLoading = false;\r\n            draft.addCommentDone = true;\r\n            break;\r\n        case ADD_COMMENT_FAILURE:\r\n            draft.addCommentLoading = false;\r\n            draft.addCommentError = action.error;\r\n            break;\r\n        case REMOVE_COMMENT_REQUEST:\r\n            draft.addCommentLoading = true;\r\n            draft.addCommentDone = false;\r\n            draft.loadCommentsError = null;\r\n            break;\r\n        case REMOVE_COMMENT_SUCCESS:\r\n            draft.removeCommentLoading = false;\r\n            draft.removeCommentDone = true;\r\n            break;\r\n        case REMOVE_COMMENT_FAILURE:\r\n            draft.removeCommentLoading = false;\r\n            draft.removeCommentError = action.error;\r\n            break;\r\n        case EMPTY_COMMENTS_REQUEST:\r\n            draft.comments = [];\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}