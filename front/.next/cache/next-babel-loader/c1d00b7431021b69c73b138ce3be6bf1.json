{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\k\\\\Desktop\\\\DUO\\\\front\\\\components\\\\CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCommentRequestAction, loadCommentsRequestAction } from '../reducers/comment';\n\nvar CommentForm = function CommentForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      detailLolPost = _useSelector2.detailLolPost;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.comment;\n  }),\n      addCommentLoading = _useSelector3.addCommentLoading,\n      addCommentDone = _useSelector3.addCommentDone;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      content = _useState[0],\n      setContent = _useState[1];\n\n  useEffect(function () {\n    var data = {\n      content: content,\n      userId: me.userId,\n      postId: detailLolPost.id,\n      nickname: me.nickname\n    };\n\n    if (addCommentDone) {\n      dispatch(loadCommentsRequestAction(data));\n      setContent('');\n    }\n  }, [addCommentDone]);\n  var onChangeComment = useCallback(function (e) {\n    setContent(e.target.value);\n  });\n  var onAddComment = useCallback(function () {\n    var data = {\n      content: content,\n      userId: me.userId,\n      postId: detailLolPost.id,\n      nickname: me.nickname\n    };\n    dispatch(addCommentRequestAction(data));\n  }, [content]);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, __jsx(Input.TextArea, {\n    value: content,\n    onChange: onChangeComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    loading: addCommentLoading,\n    onClick: onAddComment,\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"\\uC81C\\uCD9C\"))));\n};\n\n_s(CommentForm, \"uIJejbiu6Bz3UeR7b0QfpfGkP4A=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = CommentForm;\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/components/CommentForm.js"],"names":["React","useCallback","useState","useEffect","Button","Form","Input","useDispatch","useSelector","addCommentRequestAction","loadCommentsRequestAction","CommentForm","state","user","me","post","detailLolPost","comment","addCommentLoading","addCommentDone","dispatch","content","setContent","data","userId","postId","id","nickname","onChangeComment","e","target","value","onAddComment","position","right","bottom"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addCommentRequestAction, loadCommentsRequestAction } from '../reducers/comment';\r\n\r\n\r\nconst CommentForm = () => {\r\n\r\n    const { me } = useSelector((state) => state.user);\r\n    const { detailLolPost } = useSelector((state) => state.post);\r\n    const { addCommentLoading, addCommentDone } = useSelector((state) => state.comment);\r\n    const dispatch = useDispatch();\r\n    const [content, setContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        const data = { content: content, userId: me.userId, postId: detailLolPost.id, nickname: me.nickname };\r\n        if (addCommentDone) {\r\n            dispatch(loadCommentsRequestAction(data));\r\n            setContent('');\r\n        }\r\n    }, [addCommentDone]);\r\n\r\n    const onChangeComment = useCallback((e) => {\r\n        setContent(e.target.value);\r\n    });\r\n\r\n\r\n    const onAddComment = useCallback(() => {\r\n        const data = { content: content, userId: me.userId, postId: detailLolPost.id, nickname: me.nickname };\r\n        dispatch(addCommentRequestAction(data));\r\n    }, [content]);\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <Form.Item style={{ position: 'relative' }}>\r\n                    <Input.TextArea value={content} onChange={onChangeComment}></Input.TextArea>\r\n                    <Button loading={addCommentLoading} onClick={onAddComment} style={{ position: 'absolute', right: 0, bottom: -40 }} htmlType='submit'>제출</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}