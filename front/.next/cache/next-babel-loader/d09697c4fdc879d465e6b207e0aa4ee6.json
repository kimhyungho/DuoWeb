{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\k\\\\Desktop\\\\DUO\\\\front\\\\components\\\\MyInfo.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Input, Form } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logoutRequestAction, signOutRequestAction, changeNicknameRequestAction } from '../reducers/user';\n\nvar MyInfo = function MyInfo() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      signOutLoading = _useSelector.signOutLoading,\n      signOutDone = _useSelector.signOutDone;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(me.nickname),\n      newNickname = _useState[0],\n      setNewNickname = _useState[1];\n\n  var _useState2 = useState(false),\n      isChangeNickname = _useState2[0],\n      setIsChangeNickname = _useState2[1];\n\n  var onSetNewNickname = useCallback(function (e) {\n    setNewNickname(e.target.value);\n  }, []);\n  var onIsChangeNickname = useCallback(function () {\n    setIsChangeNickname(!isChangeNickname);\n  }, []);\n  var onSignOut = useCallback(function () {\n    var data = {\n      userId: me.userId,\n      userToken: me.userToken\n    };\n    dispatch(signOutRequestAction(data));\n  }, []);\n  var onChangeNickname = useCallback(function () {\n    var data = {\n      userId: me.userId,\n      nickname: newNickname,\n      userToken: me.userToken\n    };\n    dispatch(changeNicknameRequestAction(data));\n  }, [newNickname]);\n  useEffect(function () {\n    if (signOutDone) {\n      dispatch(logoutRequestAction());\n    }\n  }, [signOutDone]);\n  return __jsx(React.Fragment, null, isChangeNickname ? __jsx(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }, __jsx(Input, {\n    onChange: onSetNewNickname,\n    type: \"text\",\n    suffix: __jsx(Button, {\n      onClick: onChangeNickname,\n      htmlType: \"submit\",\n      type: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 76\n      }\n    }, \"\\uD655\\uC778\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })) : __jsx(Input, {\n    prefix: me.nickname,\n    suffix: __jsx(Button, {\n      onClick: onIsChangeNickname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 55\n      }\n    }, \"\\uBCC0\\uACBD\"),\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  }), __jsx(Button, {\n    loading: signOutLoading,\n    onClick: onSignOut,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"\\uD68C\\uC6D0\\uD0C8\\uD1F4\"));\n}; // <Form><Input prefix={userNickname} suffix={<Button onClick={onCompelteChangeNickname} htmlType=\"submit\"></Button>}></Input> </Form>\n\n\n_s(MyInfo, \"Cb7NQTPoIFN3Ngbg24N4CCXFCSE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = MyInfo;\nexport default MyInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyInfo\");","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/components/MyInfo.js"],"names":["React","useCallback","useEffect","useState","Button","Input","Form","useSelector","useDispatch","logoutRequestAction","signOutRequestAction","changeNicknameRequestAction","MyInfo","state","user","me","signOutLoading","signOutDone","dispatch","nickname","newNickname","setNewNickname","isChangeNickname","setIsChangeNickname","onSetNewNickname","e","target","value","onIsChangeNickname","onSignOut","data","userId","userToken","onChangeNickname"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Button, Input, Form } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logoutRequestAction, signOutRequestAction, changeNicknameRequestAction } from '../reducers/user';\r\n\r\n\r\nconst MyInfo = () => {\r\n\r\n    const { me, signOutLoading, signOutDone } = useSelector((state) => state.user)\r\n    const dispatch = useDispatch();\r\n\r\n    const [newNickname, setNewNickname] = useState(me.nickname);\r\n    const [isChangeNickname, setIsChangeNickname] = useState(false);\r\n\r\n    const onSetNewNickname = useCallback((e) => {\r\n        setNewNickname(e.target.value);\r\n    }, []);\r\n\r\n    const onIsChangeNickname = useCallback(() => {\r\n        setIsChangeNickname(!isChangeNickname);\r\n    }, []);\r\n\r\n\r\n    const onSignOut = useCallback(() => {\r\n        const data = { userId: me.userId, userToken: me.userToken};\r\n        dispatch(signOutRequestAction(data));\r\n    }, []);\r\n\r\n    const onChangeNickname = useCallback(() => {\r\n        const data = {userId: me.userId, nickname: newNickname, userToken: me.userToken};\r\n        dispatch(changeNicknameRequestAction(data));\r\n    }, [newNickname]);\r\n\r\n    useEffect(() => {\r\n        if (signOutDone) {\r\n            dispatch(logoutRequestAction());\r\n        }\r\n    }, [signOutDone]);\r\n\r\n    return (\r\n        <>\r\n            {isChangeNickname\r\n                ? <Form>\r\n                    <Input onChange={onSetNewNickname} type=\"text\" suffix={<Button onClick={onChangeNickname} htmlType=\"submit\" type=\"primary\">확인</Button>} />\r\n                </Form>\r\n                : <Input prefix={me.nickname} suffix={<Button onClick={onIsChangeNickname}>변경</Button>} disabled />}\r\n\r\n            <Button loading={signOutLoading} onClick={onSignOut}>회원탈퇴</Button>\r\n        </>\r\n    );\r\n}\r\n// <Form><Input prefix={userNickname} suffix={<Button onClick={onCompelteChangeNickname} htmlType=\"submit\"></Button>}></Input> </Form>\r\nexport default MyInfo;"]},"metadata":{},"sourceType":"module"}