{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k\\\\Desktop\\\\DUO\\\\front\\\\components\\\\MyInfo.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Button, Input, Form } from 'antd';\nimport { useSelector } from 'react-redux';\n\nconst MyInfo = () => {\n  const userNickname = useSelector(state => state.user.userNickname);\n  const {\n    0: isChangeNickname,\n    1: setIsChangeNickname\n  } = useState(false);\n  const {\n    0: nickname,\n    1: setNickname\n  } = useState(userNickname);\n  const onIsChangeNickname = useCallback(() => {\n    setIsChangeNickname(true);\n  });\n  const onCompelteChangeNickname = useCallback(() => {\n    // 받아와서 Nickname state 변경\n    setIsChangeNickname(false);\n  });\n  const onSetNickname = useCallback(e => {\n    setNickname(e.target.value);\n  });\n  return __jsx(React.Fragment, null, isChangeNickname ? __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  }, __jsx(Input, {\n    onChange: onSetNickname,\n    type: \"text\",\n    prefix: userNickname,\n    suffix: __jsx(Button, {\n      onClick: onCompelteChangeNickname,\n      htmlType: \"submit\",\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 95\n      }\n    }, \"\\uD655\\uC778\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  })) : __jsx(Input, {\n    prefix: userNickname,\n    suffix: __jsx(Button, {\n      onClick: onIsChangeNickname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 56\n      }\n    }, \"\\uBCC0\\uACBD\"),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }\n  }));\n}; // <Form><Input prefix={userNickname} suffix={<Button onClick={onCompelteChangeNickname} htmlType=\"submit\"></Button>}></Input> </Form>\n\n\nexport default MyInfo;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/components/MyInfo.js"],"names":["React","useCallback","useState","Button","Input","Form","useSelector","MyInfo","userNickname","state","user","isChangeNickname","setIsChangeNickname","nickname","setNickname","onIsChangeNickname","onCompelteChangeNickname","onSetNickname","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,MAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAMC,YAAY,GAAGF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,YAAvB,CAAhC;AACA,QAAM;AAAA,OAACG,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CV,QAAQ,CAAC,KAAD,CAAxD;AAEA,QAAM;AAAA,OAACW,QAAD;AAAA,OAAWC;AAAX,MAA0BZ,QAAQ,CAACM,YAAD,CAAxC;AACA,QAAMO,kBAAkB,GAAGd,WAAW,CAAC,MAAM;AACzCW,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,GAFqC,CAAtC;AAIA,QAAMI,wBAAwB,GAAGf,WAAW,CAAC,MAAM;AAC/C;AACAW,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,GAH2C,CAA5C;AAKA,QAAMK,aAAa,GAAGhB,WAAW,CAAEiB,CAAD,IAAO;AACrCJ,IAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFgC,CAAjC;AAIA,SACI,4BACKT,gBAAgB,GACX,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,QAAQ,EAAEM,aAAjB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,MAAM,EAAET,YAApD;AAAkE,IAAA,MAAM,EAAE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAEQ,wBAAjB;AAA2C,MAAA,QAAQ,EAAC,QAApD;AAA6D,MAAA,IAAI,EAAC,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADW,GAIX,MAAC,KAAD;AAAO,IAAA,MAAM,EAAER,YAAf;AAA6B,IAAA,MAAM,EAAE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAEO,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAArC;AAAuF,IAAA,QAAQ,MAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALV,CADJ;AAUH,CA7BD,C,CA8BA;;;AACA,eAAeR,MAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { Button, Input, Form } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst MyInfo = () => {\r\n\r\n    const userNickname = useSelector((state) => state.user.userNickname);\r\n    const [isChangeNickname, setIsChangeNickname] = useState(false);\r\n    \r\n    const [nickname, setNickname] = useState(userNickname);\r\n    const onIsChangeNickname = useCallback(() => {\r\n        setIsChangeNickname(true)\r\n    });\r\n\r\n    const onCompelteChangeNickname = useCallback(() => {\r\n        // 받아와서 Nickname state 변경\r\n        setIsChangeNickname(false)\r\n    });\r\n\r\n    const onSetNickname = useCallback((e) => {\r\n        setNickname(e.target.value)\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {isChangeNickname\r\n                ? <Form>\r\n                    <Input onChange={onSetNickname} type=\"text\" prefix={userNickname} suffix={<Button onClick={onCompelteChangeNickname} htmlType=\"submit\" type=\"primary\">확인</Button>} />\r\n                </Form>\r\n                : <Input prefix={userNickname} suffix={<Button onClick={onIsChangeNickname}>변경</Button>} disabled />}\r\n\r\n        </>\r\n    );\r\n}\r\n// <Form><Input prefix={userNickname} suffix={<Button onClick={onCompelteChangeNickname} htmlType=\"submit\"></Button>}></Input> </Form>\r\nexport default MyInfo;"]},"metadata":{},"sourceType":"module"}