{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\k\\\\Desktop\\\\DUO\\\\front\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    padding: 10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    margin-top: 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// import React, { useState, useCallback } from 'react';\n// import { Button, Form } from 'antd';\n// import KakaoLogin from 'react-kakao-login';\n// import GoogleLogin from 'react-google-login';\n// import NaverLogin from 'react-login-by-naver';\n// import styled from 'styled-components';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { loginAction } from '../reducers/user'\n// const KaKaoBtn = styled(KakaoLogin)`\n//     width: 300px;\n//     height: 50px;\n//     background-color: #f7f30c;\n//     font-weight: 1000;\n// `;\n// const NaverBtn = styled(Button)`\n//     width: 300px;\n//     height: 50px;\n//     background-color: #10cc23;\n//     font-weight: 1000;\n//     color: #ffffff;\n// `;\n// const GoogleBtn = styled(GoogleLogin)`\n//     width: 300px;\n//     height: 50px;\n// `;\n// const TemporaryBtn = styled(Button)`\n//     width: 300px;\n//     height: 50px;\n// `;\n// const LoginWrapper = styled(Form)`\n//     padding: 10px;\n// `;\n// const LoginFrom = () => {\n//     const userId = 1;\n//     const userNickname = 'kim';\n//     const dispatch = useDispatch();\n//     const onClickLogin = useCallback(() => {\n//         dispatch(loginAction({}));\n//     }, [])\n//     // const [id, setId] = useState('');\n//     const responseKakao = (response) => {\n//         console.log(response.response.access_token);\n//     };\n//     const responseNaver = (response) => {\n//         console.log(response);\n//     };\n//     const responseGoogle = (response) => {\n//         console.log(response.tokenId);\n//     };\n//     const responseFail = (err) => {\n//         console.error(err);\n//     };\n//     return (\n//         <LoginWrapper>\n//             <KaKaoBtn\n//                 jsKey={'593246069c7b7a42344710a951c039ee'}\n//                 buttonText=\"카카오로그인\"\n//                 onSuccess={responseKakao}\n//                 onFailure={responseFail}\n//                 getProfile={true}\n//             ></KaKaoBtn>\n//             <br />\n//             <NaverLogin\n//                 clientId=\"0xe5BaDwdA6UNdboCXn7\"\n//                 callbackUrl=\"http://127.0.0.1:3000\"\n//                 render={(props) => <NaverBtn onClick={props.onClick}>네이버로그인</NaverBtn>}\n//                 onSuccess={(naverUser) => console.log(naverUser)}\n//                 onFailure={() => console.error(result)}\n//             />\n//             <br />\n//             <GoogleBtn\n//                 clientId={'628315189039-kira075j0fog81kb2kua27l8ubtlg0a4.apps.googleusercontent.com'}\n//                 buttonText=\"구글로그인\"\n//                 onSuccess={responseGoogle}\n//                 onFailure={responseFail}\n//             ></GoogleBtn>\n//             <br />\n//             <TemporaryBtn onClick={onClickLogin}>임시 로그인</TemporaryBtn>\n//         </LoginWrapper>\n//     );\n// };\n// export default LoginFrom;\nimport { Form, Button, Input } from 'antd';\nimport React, { useState, useCallback } from 'react';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { loginAction } from '../reducers/user'; // ButtonWrapper라는 component를 하나 만들어줌\n\nvar ButtonWrapper = styled.div(_templateObject());\n_c = ButtonWrapper;\nvar LoginWrapper = styled(Form)(_templateObject2());\n_c2 = LoginWrapper;\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var dispatch = useDispatch(); // action을 dispatch\n\n  var _useState = useState(''),\n      id = _useState[0],\n      onChangeId = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      onChangePassword = _useState2[1];\n\n  var onSubmitForm = useCallback(function () {\n    console.log(id, password);\n    dispatch(loginAction({\n      id: id,\n      password: password\n    }));\n  }, [id, password]);\n  return __jsx(LoginWrapper, {\n    onFinish: onSubmitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 38\n    }\n  }, __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 41\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\n_s(LoginForm, \"BfVR03z23thEbuvvViIZzuho3GY=\", false, function () {\n  return [useDispatch];\n});\n\n_c3 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"LoginWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/components/LoginForm.js"],"names":["Form","Button","Input","React","useState","useCallback","Link","styled","useDispatch","loginAction","ButtonWrapper","div","LoginWrapper","LoginForm","dispatch","id","onChangeId","password","onChangePassword","onSubmitForm","console","log"],"mappings":"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","sourcesContent":["// import React, { useState, useCallback } from 'react';\r\n// import { Button, Form } from 'antd';\r\n// import KakaoLogin from 'react-kakao-login';\r\n// import GoogleLogin from 'react-google-login';\r\n// import NaverLogin from 'react-login-by-naver';\r\n// import styled from 'styled-components';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { loginAction } from '../reducers/user'\r\n\r\n// const KaKaoBtn = styled(KakaoLogin)`\r\n//     width: 300px;\r\n//     height: 50px;\r\n//     background-color: #f7f30c;\r\n//     font-weight: 1000;\r\n// `;\r\n\r\n// const NaverBtn = styled(Button)`\r\n//     width: 300px;\r\n//     height: 50px;\r\n//     background-color: #10cc23;\r\n//     font-weight: 1000;\r\n//     color: #ffffff;\r\n// `;\r\n\r\n// const GoogleBtn = styled(GoogleLogin)`\r\n//     width: 300px;\r\n//     height: 50px;\r\n    \r\n// `;\r\n\r\n// const TemporaryBtn = styled(Button)`\r\n//     width: 300px;\r\n//     height: 50px;\r\n// `;\r\n\r\n\r\n// const LoginWrapper = styled(Form)`\r\n//     padding: 10px;\r\n// `;\r\n\r\n// const LoginFrom = () => {\r\n//     const userId = 1;\r\n//     const userNickname = 'kim';\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n//     const onClickLogin = useCallback(() => {\r\n//         dispatch(loginAction({}));\r\n//     }, [])\r\n\r\n\r\n\r\n//     // const [id, setId] = useState('');\r\n\r\n//     const responseKakao = (response) => {\r\n//         console.log(response.response.access_token);\r\n//     };\r\n\r\n//     const responseNaver = (response) => {\r\n//         console.log(response);\r\n//     };\r\n\r\n//     const responseGoogle = (response) => {\r\n//         console.log(response.tokenId);\r\n//     };\r\n\r\n//     const responseFail = (err) => {\r\n//         console.error(err);\r\n//     };\r\n\r\n//     return (\r\n//         <LoginWrapper>\r\n//             <KaKaoBtn\r\n//                 jsKey={'593246069c7b7a42344710a951c039ee'}\r\n//                 buttonText=\"카카오로그인\"\r\n//                 onSuccess={responseKakao}\r\n//                 onFailure={responseFail}\r\n//                 getProfile={true}\r\n//             ></KaKaoBtn>\r\n//             <br />\r\n//             <NaverLogin\r\n//                 clientId=\"0xe5BaDwdA6UNdboCXn7\"\r\n//                 callbackUrl=\"http://127.0.0.1:3000\"\r\n//                 render={(props) => <NaverBtn onClick={props.onClick}>네이버로그인</NaverBtn>}\r\n//                 onSuccess={(naverUser) => console.log(naverUser)}\r\n//                 onFailure={() => console.error(result)}\r\n//             />\r\n//             <br />\r\n//             <GoogleBtn\r\n//                 clientId={'628315189039-kira075j0fog81kb2kua27l8ubtlg0a4.apps.googleusercontent.com'}\r\n//                 buttonText=\"구글로그인\"\r\n//                 onSuccess={responseGoogle}\r\n//                 onFailure={responseFail}\r\n//             ></GoogleBtn>\r\n//             <br />\r\n//             <TemporaryBtn onClick={onClickLogin}>임시 로그인</TemporaryBtn>\r\n//         </LoginWrapper>\r\n//     );\r\n// };\r\n\r\n// export default LoginFrom;\r\n\r\nimport { Form, Button, Input } from 'antd';\r\nimport React, { useState, useCallback } from 'react';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginAction } from '../reducers/user';\r\n// ButtonWrapper라는 component를 하나 만들어줌\r\nconst ButtonWrapper = styled.div`\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst LoginWrapper = styled(Form)`\r\n    padding: 10px;\r\n`;\r\n\r\nconst LoginForm = () => {\r\n    const dispatch = useDispatch();             // action을 dispatch\r\n    const [id, onChangeId] = useState('');\r\n    const [password, onChangePassword] = useState('');\r\n\r\n    const onSubmitForm = useCallback(() => {\r\n        console.log(id, password);\r\n        dispatch(loginAction({ id, password }));\r\n    }, [id, password]);\r\n\r\n    return (\r\n        <LoginWrapper onFinish={onSubmitForm}>\r\n            <div>\r\n                <label htmlFor=\"user-id\">아이디</label>\r\n                <br />\r\n                <Input\r\n                    name=\"user-id\"\r\n                    value={id}\r\n                    onChange={onChangeId}\r\n                    required\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br />\r\n                <Input\r\n                    name=\"user-password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={onChangePassword}\r\n                    required\r\n                />\r\n            </div>\r\n            <ButtonWrapper>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={false}>로그인</Button>\r\n                <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\r\n            </ButtonWrapper>\r\n        </LoginWrapper>\r\n    );\r\n};\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}