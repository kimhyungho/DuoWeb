{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, put, takeLatest, select, call } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport * as selectors from './selectors';\n\nfunction socialLoginAPI(platform, accessToken) {\n  return axios.post(\"http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/\".concat(platform), {}, {\n    headers: {\n      Authorization: accessToken\n    }\n  });\n}\n\nfunction logIn(action) {\n  var accessToken, platform, result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return select(selectors.accessToken);\n\n        case 3:\n          accessToken = _context.sent;\n          _context.next = 6;\n          return select(selectors.platform);\n\n        case 6:\n          platform = _context.sent;\n          console.log(action.data);\n          _context.next = 10;\n          return call(socialLoginAPI, platform, accessToken);\n\n        case 10:\n          result = _context.sent;\n          // yield put({\n          //     type: 'LOG_IN_SUCCESS',\n          //     userToken: userToken,\n          //     userId: userId,\n          //     nickname: nickname,\n          // });\n          console.log(\"lkkk\", result);\n          _context.next = 17;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0); // yield put({\n          //     type: 'LOG_IN_FAILURE',\n          //     error: action.response.data,\n          // });\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 14]]);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest('SOCIAL_LOG_IN_REQUEST', logIn);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchLogIn)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/sagas/user.js"],"names":["logIn","watchLogIn","userSaga","all","fork","put","takeLatest","select","call","axios","selectors","socialLoginAPI","platform","accessToken","post","headers","Authorization","action","console","log","data","result","error"],"mappings":";;oDAYUA,K;qDA8BAC,U;qDAIeC,Q;;AA9CzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,MAArC,EAA6CC,IAA7C,QAAyD,oBAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;;AAEA,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,WAAlC,EAA+C;AAE3C,SAAOJ,KAAK,CAACK,IAAN,0EAA6EF,QAA7E,GACP,EADO,EACH;AAACG,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAEH;AAAhB;AAAV,GADG,CAAP;AAGH;;AAGD,SAAUb,KAAV,CAAgBiB,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG4B,iBAAMV,MAAM,CAACG,SAAS,CAACG,WAAX,CAAZ;;AAH5B;AAGcA,UAAAA,WAHd;AAAA;AAIyB,iBAAMN,MAAM,CAACG,SAAS,CAACE,QAAX,CAAZ;;AAJzB;AAIcA,UAAAA,QAJd;AAMQM,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AANR;AAQuB,iBAAMZ,IAAI,CAACG,cAAD,EAAiBC,QAAjB,EAA2BC,WAA3B,CAAV;;AARvB;AAQcQ,UAAAA,MARd;AASQ;AACA;AACA;AACA;AACA;AACA;AAEAH,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,MAApB;AAhBR;AAAA;;AAAA;AAAA;AAAA;AAoBQH,UAAAA,OAAO,CAACI,KAAR,cApBR,CAqBQ;AACA;AACA;AACA;;AAxBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA8BA,SAAUrB,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMK,UAAU,CAAC,uBAAD,EAA0BN,KAA1B,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNC,IAAI,CAACH,UAAD,CADE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, put, takeLatest, select, call } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport * as selectors from './selectors'\r\n\r\nfunction socialLoginAPI(platform, accessToken) {\r\n\r\n    return axios.post(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/${platform}`,\r\n    {}, {headers: {Authorization: accessToken}});\r\n\r\n}\r\n\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n\r\n        const accessToken = yield select(selectors.accessToken);\r\n        const platform = yield select(selectors.platform);\r\n\r\n        console.log(action.data);\r\n\r\n        const result = yield call(socialLoginAPI, platform, accessToken);\r\n        // yield put({\r\n        //     type: 'LOG_IN_SUCCESS',\r\n        //     userToken: userToken,\r\n        //     userId: userId,\r\n        //     nickname: nickname,\r\n        // });\r\n\r\n        console.log(\"lkkk\", result);\r\n\r\n    } catch (err) {\r\n\r\n        console.error(err);\r\n        // yield put({\r\n        //     type: 'LOG_IN_FAILURE',\r\n        //     error: action.response.data,\r\n        // });\r\n\r\n        \r\n    }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest('SOCIAL_LOG_IN_REQUEST', logIn);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}