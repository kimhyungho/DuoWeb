{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  posts: [{\n    userNickname: \"kkk\",\n    userId: 1,\n    gameMode: \"일반\",\n    title: \"같이해요\",\n    startTier: 1,\n    endTier: 100,\n    startTime: Date(),\n    headCount: 1,\n    top: 1,\n    bottom: 1,\n    mid: 1,\n    jungle: 1,\n    support: 1,\n    content: \"hi\",\n    talkon: 1\n  }]\n};\nexport const getPostRequest = data => {\n  return {\n    type: 'GET_ALL_POST_REQUEST',\n    data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_ALL_POST_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'LOG_OUT':\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/reducers/post.js"],"names":["initialState","posts","userNickname","userId","gameMode","title","startTier","endTier","startTime","Date","headCount","top","bottom","mid","jungle","support","content","talkon","getPostRequest","data","type","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAC,CAAC;AACHC,IAAAA,YAAY,EAAE,KADX;AAEHC,IAAAA,MAAM,EAAE,CAFL;AAGHC,IAAAA,QAAQ,EAAE,IAHP;AAIHC,IAAAA,KAAK,EAAE,MAJJ;AAKHC,IAAAA,SAAS,EAAE,CALR;AAMHC,IAAAA,OAAO,EAAE,GANN;AAOHC,IAAAA,SAAS,EAAEC,IAAI,EAPZ;AAQHC,IAAAA,SAAS,EAAE,CARR;AASHC,IAAAA,GAAG,EAAE,CATF;AAUHC,IAAAA,MAAM,EAAE,CAVL;AAWHC,IAAAA,GAAG,EAAE,CAXF;AAYHC,IAAAA,MAAM,EAAE,CAZL;AAaHC,IAAAA,OAAO,EAAE,CAbN;AAcHC,IAAAA,OAAO,EAAE,IAdN;AAeHC,IAAAA,MAAM,EAAE;AAfL,GAAD;AADkB,CAArB;AAoBP,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAU;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAG,sBADJ;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;;AAQP,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGtB,YAAT,EAAuBuB,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,sBAAL;AACI,+BACOE,KADP;;AAIJ,SAAK,SAAL;AACI,+BACOA,KADP;;AAIJ;AACI,aAAOA,KAAP;AAZR;AAcH,CAfD;;AAiBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    posts:[{\r\n        userNickname: \"kkk\",\r\n        userId: 1,\r\n        gameMode: \"일반\",\r\n        title: \"같이해요\",\r\n        startTier: 1,\r\n        endTier: 100,\r\n        startTime: Date(),\r\n        headCount: 1,\r\n        top: 1,\r\n        bottom: 1,\r\n        mid: 1,\r\n        jungle: 1,\r\n        support: 1,\r\n        content: \"hi\",\r\n        talkon: 1,\r\n    }],\r\n};\r\n\r\nexport const getPostRequest = (data) => {\r\n    return {    \r\n        type : 'GET_ALL_POST_REQUEST',\r\n        data,\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_ALL_POST_REQUEST':\r\n            return {\r\n                ...state,\r\n\r\n            };\r\n        case 'LOG_OUT':\r\n            return {\r\n                ...state,\r\n\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}