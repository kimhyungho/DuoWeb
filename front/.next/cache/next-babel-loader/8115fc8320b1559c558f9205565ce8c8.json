{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadAllLolPosts),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addLolPost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(deleteLolPost),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(updateLolPost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadAllLolPosts),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddLolPost),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchDeleteLolPost),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdateLolPost),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport axios from \"axios\";\nimport { all, put, takeLatest, fork, call } from \"redux-saga/effects\";\nimport { LOAD_ALL_LOL_POSTS_REQUEST, LOAD_ALL_LOL_POSTS_SUCCESS, LOAD_ALL_LOL_POSTS_FAILURE, ADD_LOL_POST_REQUEST, ADD_LOL_POST_SUCCESS, ADD_LOL_POST_FAILURE, DELETE_LOL_POST_REQUEST, DELETE_LOL_POST_SUCCESS, DELETE_LOL_POST_FAILURE, UPDATE_LOL_POST_REQUEST, UPDATE_LOL_POST_SUCCESS, UPDATE_LOL_POST_FAILURE } from '../reducers/post';\n\nfunction loadAllLolPostsAPI(data) {\n  return axios.get(\"http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol\", {}, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\nfunction loadAllLolPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadAllLolPosts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loadAllLolPostsAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          console.log(action.data);\n          _context.next = 7;\n          return put({\n            type: LOAD_ALL_LOL_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 14;\n          return put({\n            type: LOAD_ALL_LOL_POSTS_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction addLolPostAPI(data) {\n  return axios.post(\"http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol\", {\n    userNickname: data.userNickname,\n    userId: data.userId,\n    gameMode: data.gameMode,\n    title: data.title,\n    startTier: data.startTier,\n    endTier: data.endTier,\n    endTime: data.endTime,\n    headCount: data.headCount,\n    top: data.top,\n    bottom: data.bottom,\n    mid: data.mid,\n    jungle: data.jungle,\n    support: data.support,\n    content: data.content,\n    talkon: data.talkOn\n  }, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\n;\n\nfunction addLolPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addLolPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addLolPostAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          console.log(result);\n          _context2.next = 7;\n          return put({\n            type: ADD_LOL_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context2.next = 14;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0.response);\n          _context2.next = 14;\n          return put({\n            type: ADD_LOL_POST_FAILURE,\n            error: _context2.t0.response\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nfunction deleteLolPostAPI(data) {\n  return axios[\"delete\"](\"http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol\", {\n    postId: data.postId,\n    userId: data.userId\n  }, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\n;\n\nfunction deleteLolPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function deleteLolPost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(deleteLolPostAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          console.log(result);\n          _context3.next = 7;\n          return put({\n            type: DELETE_LOL_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context3.next = 14;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0.response);\n          _context3.next = 14;\n          return put({\n            type: DELETE_LOL_POST_FAILURE,\n            error: _context3.t0.response\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction updateLolPostAPI(data) {\n  return axios.put(\"http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol\", {\n    postId: data.postId,\n    userId: data.userId,\n    gameMode: data.gameMode,\n    title: data.title,\n    startTier: data.startTier,\n    endTier: data.endTier,\n    endTime: data.endTime,\n    headCount: data.headCount,\n    top: data.top,\n    bottom: data.bottom,\n    mid: data.mid,\n    jungle: data.jungle,\n    support: data.support,\n    content: data.content,\n    talkon: data.talkOn\n  }, {\n    headers: {\n      Authorization: data.userToken\n    }\n  });\n}\n\n;\n\nfunction updateLolPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function updateLolPost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(updateLolPostAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          console.log(result);\n          _context4.next = 7;\n          return put({\n            type: UPDATE_LOL_POST_SUCCESS,\n            data: result.data,\n            data2: action.data\n          });\n\n        case 7:\n          _context4.next = 14;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0.response);\n          _context4.next = 14;\n          return put({\n            type: UPDATE_LOL_POST_FAILURE,\n            error: _context4.t0.response\n          });\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 9]]);\n}\n\nfunction watchLoadAllLolPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadAllLolPosts$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(LOAD_ALL_LOL_POSTS_REQUEST, loadAllLolPosts);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchAddLolPost() {\n  return _regeneratorRuntime.wrap(function watchAddLolPost$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(ADD_LOL_POST_REQUEST, addLolPost);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchDeleteLolPost() {\n  return _regeneratorRuntime.wrap(function watchDeleteLolPost$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(DELETE_LOL_POST_REQUEST, deleteLolPost);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchUpdateLolPost() {\n  return _regeneratorRuntime.wrap(function watchUpdateLolPost$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(UPDATE_LOL_POST_REQUEST, updateLolPost);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([fork(watchLoadAllLolPosts), fork(watchAddLolPost), fork(watchDeleteLolPost), fork(watchUpdateLolPost)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/sagas/post.js"],"names":["loadAllLolPosts","addLolPost","deleteLolPost","updateLolPost","watchLoadAllLolPosts","watchAddLolPost","watchDeleteLolPost","watchUpdateLolPost","postSaga","axios","all","put","takeLatest","fork","call","LOAD_ALL_LOL_POSTS_REQUEST","LOAD_ALL_LOL_POSTS_SUCCESS","LOAD_ALL_LOL_POSTS_FAILURE","ADD_LOL_POST_REQUEST","ADD_LOL_POST_SUCCESS","ADD_LOL_POST_FAILURE","DELETE_LOL_POST_REQUEST","DELETE_LOL_POST_SUCCESS","DELETE_LOL_POST_FAILURE","UPDATE_LOL_POST_REQUEST","UPDATE_LOL_POST_SUCCESS","UPDATE_LOL_POST_FAILURE","loadAllLolPostsAPI","data","get","headers","Authorization","userToken","action","result","console","log","type","error","response","addLolPostAPI","post","userNickname","userId","gameMode","title","startTier","endTier","endTime","headCount","top","bottom","mid","jungle","support","content","talkon","talkOn","deleteLolPostAPI","postId","updateLolPostAPI","data2"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { all, put, takeLatest, fork, call } from \"redux-saga/effects\";\r\n\r\nimport {\r\n    LOAD_ALL_LOL_POSTS_REQUEST,\r\n    LOAD_ALL_LOL_POSTS_SUCCESS,\r\n    LOAD_ALL_LOL_POSTS_FAILURE,\r\n    ADD_LOL_POST_REQUEST,\r\n    ADD_LOL_POST_SUCCESS,\r\n    ADD_LOL_POST_FAILURE,\r\n    DELETE_LOL_POST_REQUEST,\r\n    DELETE_LOL_POST_SUCCESS,\r\n    DELETE_LOL_POST_FAILURE,\r\n    UPDATE_LOL_POST_REQUEST,\r\n    UPDATE_LOL_POST_SUCCESS,\r\n    UPDATE_LOL_POST_FAILURE,\r\n} from '../reducers/post';\r\n\r\nfunction loadAllLolPostsAPI(data) {\r\n    return axios.get(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`,\r\n        {}, { headers: { Authorization: data.userToken } });\r\n}\r\n\r\nfunction* loadAllLolPosts(action) {\r\n    try {\r\n        const result = yield call(loadAllLolPostsAPI, action.data);\r\n        console.log(action.data);\r\n        yield put({\r\n            type: LOAD_ALL_LOL_POSTS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n        yield put({\r\n            type: LOAD_ALL_LOL_POSTS_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction addLolPostAPI(data) {\r\n    return axios.post(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`,\r\n        {\r\n            userNickname: data.userNickname, userId: data.userId,\r\n            gameMode: data.gameMode, title: data.title,\r\n            startTier: data.startTier, endTier: data.endTier,\r\n            endTime: data.endTime, headCount: data.headCount,\r\n            top: data.top, bottom: data.bottom,\r\n            mid: data.mid, jungle: data.jungle,\r\n            support: data.support, content: data.content,\r\n            talkon: data.talkOn,\r\n        }, { headers: { Authorization: data.userToken } });\r\n};\r\n\r\nfunction* addLolPost(action) {\r\n    try {\r\n        const result = yield call(addLolPostAPI, action.data);\r\n        console.log(result)\r\n\r\n        yield put({\r\n            type: ADD_LOL_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err.response);\r\n        yield put({\r\n            type: ADD_LOL_POST_FAILURE,\r\n            error: err.response,\r\n        });\r\n    }\r\n}\r\n\r\nfunction deleteLolPostAPI(data) {\r\n    return axios.delete(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`,\r\n        { postId: data.postId, userId: data.userId }, { headers: { Authorization: data.userToken } });\r\n};\r\n\r\nfunction* deleteLolPost(action) {\r\n    try {\r\n        const result = yield call(deleteLolPostAPI, action.data);\r\n        console.log(result)\r\n\r\n        yield put({\r\n            type: DELETE_LOL_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err.response);\r\n        yield put({\r\n            type: DELETE_LOL_POST_FAILURE,\r\n            error: err.response,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction updateLolPostAPI(data) {\r\n    return axios.put(`http://ec2-18-222-143-156.us-east-2.compute.amazonaws.com:3000/post/lol`,\r\n        {\r\n            postId: data.postId, userId: data.userId,\r\n            gameMode: data.gameMode, title: data.title,\r\n            startTier: data.startTier, endTier: data.endTier,\r\n            endTime: data.endTime, headCount: data.headCount,\r\n            top: data.top, bottom: data.bottom,\r\n            mid: data.mid, jungle: data.jungle,\r\n            support: data.support, content: data.content,\r\n            talkon: data.talkOn,\r\n        }, { headers: { Authorization: data.userToken } });\r\n};\r\n\r\nfunction* updateLolPost(action) {\r\n    try {\r\n        const result = yield call(updateLolPostAPI, action.data);\r\n        console.log(result)\r\n\r\n        yield put({\r\n            type: UPDATE_LOL_POST_SUCCESS,\r\n            data: result.data,\r\n            data2: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err.response);\r\n        yield put({\r\n            type: UPDATE_LOL_POST_FAILURE,\r\n            error: err.response,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* watchLoadAllLolPosts() {\r\n    yield takeLatest(LOAD_ALL_LOL_POSTS_REQUEST, loadAllLolPosts);\r\n}\r\n\r\nfunction* watchAddLolPost() {\r\n    yield takeLatest(ADD_LOL_POST_REQUEST, addLolPost);\r\n}\r\n\r\nfunction* watchDeleteLolPost() {\r\n    yield takeLatest(DELETE_LOL_POST_REQUEST, deleteLolPost);\r\n}\r\n\r\nfunction* watchUpdateLolPost() {\r\n    yield takeLatest(UPDATE_LOL_POST_REQUEST, updateLolPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchLoadAllLolPosts),\r\n        fork(watchAddLolPost),\r\n        fork(watchDeleteLolPost),\r\n        fork(watchUpdateLolPost),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}