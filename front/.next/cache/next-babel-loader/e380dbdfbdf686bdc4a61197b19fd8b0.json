{"ast":null,"code":"import produce from '../util/produce';\nexport const initialState = {\n  posts: [],\n  myLolPosts: [],\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  addLolPostLoading: false,\n  addLolPostDone: false,\n  addLolPostError: null,\n  deleteLolPostLoading: false,\n  deleteLolPostDone: false,\n  deleteLolPostError: null,\n  updateLolPostLoading: false,\n  updateLolPostDone: false,\n  updateLolPostError: null,\n  filterLolPostLoading: false,\n  filterLolPostDone: false,\n  filterLolPostError: null,\n  detailLolPostOn: false,\n  detailLolPost: null\n};\nexport const LOAD_ALL_LOL_POSTS_REQUEST = 'LOAD_ALL_LOL_POSTS_REQUEST';\nexport const LOAD_ALL_LOL_POSTS_SUCCESS = 'LOAD_ALL_LOL_POSTS_SUCCESS';\nexport const LOAD_ALL_LOL_POSTS_FAILURE = 'LOAD_ALL_LOL_POSTS_FAILURE';\nexport const LOAD_ALL_MY_LOL_POSTS_REQUEST = 'LOAD_ALL_MY_LOL_POSTS_REQUEST';\nexport const LOAD_ALL_MY_LOL_POSTS_SUCCESS = 'LOAD_ALL_MY_LOL_POSTS_SUCCESS';\nexport const LOAD_ALL_MY_LOL_POSTS_FAILURE = 'LOAD_ALL_MY_LOL_POSTS_FAILURE';\nexport const ADD_LOL_POST_REQUEST = 'ADD_LOL_POST_REQUEST';\nexport const ADD_LOL_POST_SUCCESS = 'ADD_LOL_POST_SUCCESS';\nexport const ADD_LOL_POST_FAILURE = 'ADD_LOL_POST_FAILURE';\nexport const DELETE_LOL_POST_REQUEST = 'DELETE_LOL_POST_REQUEST';\nexport const DELETE_LOL_POST_SUCCESS = 'DELETE_LOL_POST_SUCCESS';\nexport const DELETE_LOL_POST_FAILURE = 'DELETE_LOL_POST_FAILURE';\nexport const UPDATE_LOL_POST_REQUEST = 'UPDATE_LOL_POST_REQUEST';\nexport const UPDATE_LOL_POST_SUCCESS = 'UPDATE_LOL_POST_SUCCESS';\nexport const UPDATE_LOL_POST_FAILURE = 'UPDATE_LOL_POST_FAILURE';\nexport const FILTER_LOL_POST_REQUEST = 'FILTER_LOL_POST_REQUEST';\nexport const FILTER_LOL_POST_SUCCESS = 'FILTER_LOL_POST_SUCCESS';\nexport const FILTER_LOL_POST_FAILURE = 'FILTER_LOL_POST_FAILURE';\nexport const DETAIL_LOL_POST_ON = 'DETAIL_LOL_POST_ON';\nexport const DETAIL_LOL_POST_OFF = 'DETAIL_LOL_POST_OFF';\nexport const loadAllLolPostsRequestAction = data => ({\n  type: LOAD_ALL_LOL_POSTS_REQUEST,\n  data\n});\nexport const loadAllMyLolPostsRequestAction = data => ({\n  type: LOAD_ALL_MY_LOL_POSTS_REQUEST,\n  data\n});\nexport const addLolPostRequestAction = data => ({\n  type: ADD_LOL_POST_REQUEST,\n  data\n});\nexport const deleteLolPostRequestAction = data => ({\n  type: DELETE_LOL_POST_REQUEST,\n  data\n});\nexport const updateLolPostRequestAction = data => ({\n  type: UPDATE_LOL_POST_REQUEST,\n  data\n});\nexport const filterLolPostRequestAction = data => ({\n  type: FILTER_LOL_POST_REQUEST,\n  data\n});\nexport const detailLolPostOnAction = data => ({\n  type: DETAIL_LOL_POST_ON,\n  data\n});\nexport const detailLolPostOffAction = () => ({\n  type: DETAIL_LOL_POST_OFF\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_ALL_LOL_POSTS_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n\n    case LOAD_ALL_LOL_POSTS_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.posts = action.data;\n      break;\n\n    case LOAD_ALL_LOL_POSTS_FAILURE:\n      draft.loadPostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n\n    case LOAD_ALL_MY_LOL_POSTS_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n\n    case LOAD_ALL_MY_LOL_POSTS_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.myLolPosts = action.data;\n      break;\n\n    case LOAD_ALL_MY_LOL_POSTS_FAILURE:\n      draft.loadPostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n\n    case ADD_LOL_POST_REQUEST:\n      draft.addLolPostLoading = true;\n      draft.addLolPostDone = false;\n      draft.addLolPostError = null;\n      break;\n\n    case ADD_LOL_POST_SUCCESS:\n      draft.addLolPostLoading = false;\n      draft.addLolPostDone = true;\n      break;\n\n    case ADD_LOL_POST_FAILURE:\n      draft.addLolPostLoading = false;\n      draft.addLolPostError = action.error;\n      break;\n\n    case DELETE_LOL_POST_REQUEST:\n      draft.deleteLolPostLoading = true;\n      draft.deleteLolPostDone = false;\n      draft.deleteLolPostError = null;\n      break;\n\n    case DELETE_LOL_POST_SUCCESS:\n      draft.detailLolPostOn = false;\n      draft.deleteLolPostLoading = false;\n      draft.deleteLolPostDone = true;\n      break;\n\n    case DELETE_LOL_POST_FAILURE:\n      draft.deleteLolPostLoading = false;\n      draft.deleteLolPostError = action.error;\n      break;\n\n    case UPDATE_LOL_POST_REQUEST:\n      draft.updateLolPostLoading = true;\n      draft.updateLolPostDone = false;\n      draft.updateLolPostError = null;\n      break;\n\n    case UPDATE_LOL_POST_SUCCESS:\n      draft.updateLolPostLoading = false;\n      draft.updateLolPostDone = true;\n      draft.detailLolPost.top = action.data2.top;\n      draft.detailLolPost.jungle = action.data2.jungle;\n      draft.detailLolPost.mid = action.data2.mid;\n      draft.detailLolPost.bottom = action.data2.bottom;\n      draft.detailLolPost.support = action.data2.support;\n      draft.detailLolPost.endTime = action.data2.endTime;\n      draft.detailLolPost.headCount = action.data2.headCount;\n      draft.detailLolPost.gameMode = action.data2.gameMode;\n      draft.detailLolPost.title = action.data2.title;\n      draft.detailLolPost.content = action.data2.content;\n      draft.detailLolPost.talkOn = action.data2.talkOn;\n      break;\n\n    case UPDATE_LOL_POST_FAILURE:\n      draft.updateLolPostLoading = false;\n      draft.updateLolPostError = action.error;\n      break;\n\n    case FILTER_LOL_POST_REQUEST:\n      draft.filterLolPostLoading = true;\n      draft.filterLolPostDone = false;\n      draft.filterLolPostError = null;\n      break;\n\n    case FILTER_LOL_POST_SUCCESS:\n      draft.filterLolPostLoading = false;\n      draft.filterLolPostDone = true;\n      draft.posts = action.data;\n      break;\n\n    case FILTER_LOL_POST_FAILURE:\n      draft.filterLolPostLoading = false;\n      draft.filterLolPostError = action.error;\n      break;\n\n    case DETAIL_LOL_POST_ON:\n      draft.detailLolPostOn = true;\n      draft.detailLolPost = action.data;\n      break;\n\n    case DETAIL_LOL_POST_OFF:\n      draft.detailLolPostOn = false;\n      draft.detailLolPost = null;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/reducers/post.js"],"names":["produce","initialState","posts","myLolPosts","loadPostLoading","loadPostDone","loadPostError","addLolPostLoading","addLolPostDone","addLolPostError","deleteLolPostLoading","deleteLolPostDone","deleteLolPostError","updateLolPostLoading","updateLolPostDone","updateLolPostError","filterLolPostLoading","filterLolPostDone","filterLolPostError","detailLolPostOn","detailLolPost","LOAD_ALL_LOL_POSTS_REQUEST","LOAD_ALL_LOL_POSTS_SUCCESS","LOAD_ALL_LOL_POSTS_FAILURE","LOAD_ALL_MY_LOL_POSTS_REQUEST","LOAD_ALL_MY_LOL_POSTS_SUCCESS","LOAD_ALL_MY_LOL_POSTS_FAILURE","ADD_LOL_POST_REQUEST","ADD_LOL_POST_SUCCESS","ADD_LOL_POST_FAILURE","DELETE_LOL_POST_REQUEST","DELETE_LOL_POST_SUCCESS","DELETE_LOL_POST_FAILURE","UPDATE_LOL_POST_REQUEST","UPDATE_LOL_POST_SUCCESS","UPDATE_LOL_POST_FAILURE","FILTER_LOL_POST_REQUEST","FILTER_LOL_POST_SUCCESS","FILTER_LOL_POST_FAILURE","DETAIL_LOL_POST_ON","DETAIL_LOL_POST_OFF","loadAllLolPostsRequestAction","data","type","loadAllMyLolPostsRequestAction","addLolPostRequestAction","deleteLolPostRequestAction","updateLolPostRequestAction","filterLolPostRequestAction","detailLolPostOnAction","detailLolPostOffAction","reducer","state","action","draft","error","top","data2","jungle","mid","bottom","support","endTime","headCount","gameMode","title","content","talkOn"],"mappings":"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","sourcesContent":["import produce from '../util/produce';\r\n\r\nexport const initialState = {\r\n    posts: [],\r\n    myLolPosts: [],\r\n    loadPostLoading: false,\r\n    loadPostDone: false,\r\n    loadPostError: null,\r\n    addLolPostLoading: false,\r\n    addLolPostDone: false,\r\n    addLolPostError: null,\r\n    deleteLolPostLoading: false,\r\n    deleteLolPostDone: false,\r\n    deleteLolPostError: null,\r\n    updateLolPostLoading: false,\r\n    updateLolPostDone: false,\r\n    updateLolPostError: null,\r\n    filterLolPostLoading: false,\r\n    filterLolPostDone: false,\r\n    filterLolPostError: null,\r\n    detailLolPostOn: false,\r\n    detailLolPost: null,\r\n};\r\n\r\nexport const LOAD_ALL_LOL_POSTS_REQUEST = 'LOAD_ALL_LOL_POSTS_REQUEST';\r\nexport const LOAD_ALL_LOL_POSTS_SUCCESS = 'LOAD_ALL_LOL_POSTS_SUCCESS';\r\nexport const LOAD_ALL_LOL_POSTS_FAILURE = 'LOAD_ALL_LOL_POSTS_FAILURE';\r\n\r\nexport const LOAD_ALL_MY_LOL_POSTS_REQUEST = 'LOAD_ALL_MY_LOL_POSTS_REQUEST';\r\nexport const LOAD_ALL_MY_LOL_POSTS_SUCCESS = 'LOAD_ALL_MY_LOL_POSTS_SUCCESS';\r\nexport const LOAD_ALL_MY_LOL_POSTS_FAILURE = 'LOAD_ALL_MY_LOL_POSTS_FAILURE';\r\n\r\nexport const ADD_LOL_POST_REQUEST = 'ADD_LOL_POST_REQUEST';\r\nexport const ADD_LOL_POST_SUCCESS = 'ADD_LOL_POST_SUCCESS';\r\nexport const ADD_LOL_POST_FAILURE = 'ADD_LOL_POST_FAILURE';\r\n\r\nexport const DELETE_LOL_POST_REQUEST = 'DELETE_LOL_POST_REQUEST';\r\nexport const DELETE_LOL_POST_SUCCESS = 'DELETE_LOL_POST_SUCCESS';\r\nexport const DELETE_LOL_POST_FAILURE = 'DELETE_LOL_POST_FAILURE';\r\n\r\nexport const UPDATE_LOL_POST_REQUEST = 'UPDATE_LOL_POST_REQUEST';\r\nexport const UPDATE_LOL_POST_SUCCESS = 'UPDATE_LOL_POST_SUCCESS';\r\nexport const UPDATE_LOL_POST_FAILURE = 'UPDATE_LOL_POST_FAILURE';\r\n\r\nexport const FILTER_LOL_POST_REQUEST = 'FILTER_LOL_POST_REQUEST';\r\nexport const FILTER_LOL_POST_SUCCESS = 'FILTER_LOL_POST_SUCCESS';\r\nexport const FILTER_LOL_POST_FAILURE = 'FILTER_LOL_POST_FAILURE';\r\n\r\nexport const DETAIL_LOL_POST_ON = 'DETAIL_LOL_POST_ON';\r\nexport const DETAIL_LOL_POST_OFF = 'DETAIL_LOL_POST_OFF';\r\n\r\nexport const loadAllLolPostsRequestAction = (data) => ({\r\n    type: LOAD_ALL_LOL_POSTS_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const loadAllMyLolPostsRequestAction = (data) => ({\r\n    type: LOAD_ALL_MY_LOL_POSTS_REQUEST,\r\n    data,\r\n});\r\n\r\n\r\nexport const addLolPostRequestAction = (data) => ({\r\n    type: ADD_LOL_POST_REQUEST,\r\n    data,\r\n});\r\n\r\n\r\nexport const deleteLolPostRequestAction = (data) => ({\r\n    type: DELETE_LOL_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const updateLolPostRequestAction = (data) => ({\r\n    type: UPDATE_LOL_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const filterLolPostRequestAction = (data) => ({\r\n    type: FILTER_LOL_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const detailLolPostOnAction = (data) => ({\r\n    type: DETAIL_LOL_POST_ON,\r\n    data,\r\n});\r\n\r\nexport const detailLolPostOffAction = () => ({\r\n    type: DETAIL_LOL_POST_OFF,\r\n});\r\n\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case LOAD_ALL_LOL_POSTS_REQUEST:\r\n            draft.loadPostLoading = true;\r\n            draft.loadPostDone = false;\r\n            draft.loadPostError = null;\r\n            break;\r\n        case LOAD_ALL_LOL_POSTS_SUCCESS:\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostDone = true;\r\n            draft.posts = action.data;\r\n            break;\r\n        case LOAD_ALL_LOL_POSTS_FAILURE:\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostError = action.error;\r\n            break;\r\n        case LOAD_ALL_MY_LOL_POSTS_REQUEST:\r\n            draft.loadPostLoading = true;\r\n            draft.loadPostDone = false;\r\n            draft.loadPostError = null;\r\n            break;\r\n        case LOAD_ALL_MY_LOL_POSTS_SUCCESS:\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostDone = true;\r\n            draft.myLolPosts = action.data;\r\n            break;\r\n        case LOAD_ALL_MY_LOL_POSTS_FAILURE:\r\n            draft.loadPostLoading = false;\r\n            draft.loadPostError = action.error;\r\n            break;\r\n        case ADD_LOL_POST_REQUEST:\r\n            draft.addLolPostLoading = true;\r\n            draft.addLolPostDone = false;\r\n            draft.addLolPostError = null;\r\n            break;\r\n        case ADD_LOL_POST_SUCCESS:\r\n            draft.addLolPostLoading = false;\r\n            draft.addLolPostDone = true;\r\n            break;\r\n        case ADD_LOL_POST_FAILURE:\r\n            draft.addLolPostLoading = false;\r\n            draft.addLolPostError = action.error;\r\n            break;\r\n        case DELETE_LOL_POST_REQUEST:\r\n            draft.deleteLolPostLoading = true;\r\n            draft.deleteLolPostDone = false;\r\n            draft.deleteLolPostError = null;\r\n            break;\r\n        case DELETE_LOL_POST_SUCCESS:\r\n            draft.detailLolPostOn = false;\r\n            draft.deleteLolPostLoading = false;\r\n            draft.deleteLolPostDone = true;\r\n            break;\r\n        case DELETE_LOL_POST_FAILURE:\r\n            draft.deleteLolPostLoading = false;\r\n            draft.deleteLolPostError = action.error;\r\n            break;\r\n        case UPDATE_LOL_POST_REQUEST:\r\n            draft.updateLolPostLoading = true;\r\n            draft.updateLolPostDone = false;\r\n            draft.updateLolPostError = null;\r\n            break;\r\n        case UPDATE_LOL_POST_SUCCESS:\r\n            draft.updateLolPostLoading = false;\r\n            draft.updateLolPostDone = true;\r\n            draft.detailLolPost.top = action.data2.top;\r\n            draft.detailLolPost.jungle = action.data2.jungle;\r\n            draft.detailLolPost.mid = action.data2.mid;\r\n            draft.detailLolPost.bottom = action.data2.bottom;\r\n            draft.detailLolPost.support = action.data2.support;\r\n            draft.detailLolPost.endTime = action.data2.endTime;\r\n            draft.detailLolPost.headCount = action.data2.headCount;\r\n            draft.detailLolPost.gameMode = action.data2.gameMode;\r\n            draft.detailLolPost.title = action.data2.title;\r\n            draft.detailLolPost.content = action.data2.content;\r\n            draft.detailLolPost.talkOn = action.data2.talkOn;\r\n            break;\r\n        case UPDATE_LOL_POST_FAILURE:\r\n            draft.updateLolPostLoading = false;\r\n            draft.updateLolPostError = action.error;\r\n            break;\r\n        case FILTER_LOL_POST_REQUEST:\r\n            draft.filterLolPostLoading = true;\r\n            draft.filterLolPostDone = false;\r\n            draft.filterLolPostError = null;\r\n            break;\r\n        case FILTER_LOL_POST_SUCCESS:\r\n            draft.filterLolPostLoading = false;\r\n            draft.filterLolPostDone = true;\r\n            draft.posts = action.data;\r\n            break;\r\n        case FILTER_LOL_POST_FAILURE:\r\n            draft.filterLolPostLoading = false;\r\n            draft.filterLolPostError = action.error;\r\n            break;\r\n\r\n        case DETAIL_LOL_POST_ON:\r\n            draft.detailLolPostOn = true;\r\n            draft.detailLolPost = action.data;\r\n            break;\r\n        case DETAIL_LOL_POST_OFF:\r\n            draft.detailLolPostOn = false;\r\n            draft.detailLolPost = null;\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}