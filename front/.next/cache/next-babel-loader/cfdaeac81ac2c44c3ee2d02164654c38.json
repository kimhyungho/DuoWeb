{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\k\\\\Desktop\\\\DUO\\\\front\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Button } from 'antd';\nimport React, { useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Link from 'next/link';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SignUpForm from '../components/SignUpForm';\nimport { loadAllLolPostsRequestAction } from '../reducers/post';\nimport PostCard from '../components/LolPostCard';\nimport LoginFrom from '../components/LoginForm';\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      logInError = _useSelector2.logInError;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.post;\n  }),\n      posts = _useSelector3.posts,\n      loadPostLoading = _useSelector3.loadPostLoading,\n      loadPostError = _useSelector3.loadPostError; // {isLoggedIn && <PostForm />}\n  // {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\n\n\n  useEffect(function () {\n    if (!me.userToken) {\n      console.log(\"kkk\");\n      var data = {\n        userToken: me.userToken\n      };\n      dispatch(loadAllLolPostsRequestAction(data));\n    }\n  }, []);\n\n  if (logInError === -401) {\n    return __jsx(AppLayout, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, __jsx(SignUpForm, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    return __jsx(AppLayout, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: '20px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: \"./lol_write\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 71\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 96\n      }\n    }, \"\\uAE00\\uC4F0\\uAE30\"))), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), me.userToken && posts.map(function (post) {\n      return __jsx(PostCard, {\n        key: post.id,\n        post: post,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 54\n        }\n      });\n    }));\n  }\n};\n\n_s(Home, \"Lza8QrDDTmnKxYTriufJBdmeV2c=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/pages/index.js"],"names":["Button","React","useEffect","AppLayout","Link","useSelector","useDispatch","SignUpForm","loadAllLolPostsRequestAction","PostCard","LoginFrom","Home","dispatch","state","user","me","logInError","post","posts","loadPostLoading","loadPostError","userToken","console","log","data","marginLeft","map","id"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,4BAAT,QAA6C,kBAA7C;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AADe,qBAEAD,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAFX;AAAA,MAEPC,EAFO,gBAEPA,EAFO;;AAAA,sBAGQV,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAHnB;AAAA,MAGPE,UAHO,iBAGPA,UAHO;;AAAA,sBAImCX,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACI,IAAjB;AAAA,GAAD,CAJ9C;AAAA,MAIPC,KAJO,iBAIPA,KAJO;AAAA,MAIAC,eAJA,iBAIAA,eAJA;AAAA,MAIiBC,aAJjB,iBAIiBA,aAJjB,EAMf;AACA;;;AACAlB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAG,CAACa,EAAE,CAACM,SAAP,EAAiB;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,UAAMC,IAAI,GAAG;AAACH,QAAAA,SAAS,EAAEN,EAAE,CAACM;AAAf,OAAb;AACAT,MAAAA,QAAQ,CAACJ,4BAA4B,CAACgB,IAAD,CAA7B,CAAR;AACH;AACF,GANM,EAMJ,EANI,CAAT;;AASA,MAAIR,UAAU,KAAK,CAAC,GAApB,EAAyB;AACrB,WACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH,GAND,MAMO;AACH,WACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,KAAK,EAAE;AAAES,QAAAA,UAAU,EAAE;AAAd,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsD,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAzB,CAAtD,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKV,EAAE,CAACM,SAAH,IAAgBH,KAAK,CAACQ,GAAN,CAAU,UAACT,IAAD;AAAA,aAAU,MAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACU,EAApB;AAAwB,QAAA,IAAI,EAAEV,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AAAA,KAAV,CAHrB,CADJ;AAOH;AACJ,CAhCD;;GAAMN,I;UACeL,W,EACFD,W,EACQA,W,EAC2BA,W;;;KAJhDM,I;AAkCN,eAAeA,IAAf","sourcesContent":["import { Button } from 'antd';\r\nimport React, { useEffect } from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\nimport Link from 'next/link';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SignUpForm from '../components/SignUpForm';\r\nimport { loadAllLolPostsRequestAction } from '../reducers/post';\r\nimport PostCard from '../components/LolPostCard'\r\nimport LoginFrom from '../components/LoginForm';\r\n\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const { me } = useSelector((state) => state.user);\r\n    const { logInError } = useSelector((state) => state.user);\r\n    const { posts, loadPostLoading, loadPostError } = useSelector((state) => state.post);\r\n\r\n    // {isLoggedIn && <PostForm />}\r\n    // {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n    useEffect(() => {\r\n        if(!me.userToken){\r\n            console.log(\"kkk\");\r\n            const data = {userToken: me.userToken}\r\n            dispatch(loadAllLolPostsRequestAction(data));\r\n        }\r\n      }, []);\r\n\r\n\r\n    if (logInError === -401) {\r\n        return (\r\n            <AppLayout>\r\n                <SignUpForm />\r\n            </AppLayout>\r\n        )\r\n    } else {\r\n        return (\r\n            <AppLayout>\r\n                <Button type=\"primary\" style={{ marginLeft: '20px' }}><Link href=\"./lol_write\"><a>글쓰기</a></Link></Button>\r\n                <br/>\r\n                {me.userToken && posts.map((post) => <PostCard key={post.id} post={post}/>)}\r\n            </AppLayout>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}