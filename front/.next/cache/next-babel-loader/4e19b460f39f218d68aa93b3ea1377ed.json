{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  isLoggedIn: false\n};\nexport var LOG_IN = 'LOG_IN'; // 액션의 이름\n\nexport var LOG_OUT = 'LOG_OUT';\nexport var loginAction = function loginAction(data) {\n  return {\n    type: LOG_IN,\n    data: data\n  };\n};\nexport var logoutAction = {\n  type: LOG_OUT\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: true\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false\n        });\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/k/Desktop/DUO/front/reducers/user.js"],"names":["initialState","isLoggedIn","LOG_IN","LOG_OUT","loginAction","data","type","logoutAction","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE;AADY,CAArB;AAIP,OAAO,IAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AAChC,OAAO,IAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,MADH;AAEHG,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,YAAY,GAAG;AACxBD,EAAAA,IAAI,EAAEH;AADkB,CAArB;;AAIP,IAAMK,OAAO,GAAI,SAAXA,OAAW,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBT,YAAyB;AAAA,MAAXU,MAAW;;AAC/C,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKJ,MAAL;AAAa;AACT,+CACOO,KADP;AAEIR,UAAAA,UAAU,EAAE;AAFhB;AAIH;;AACD,SAAKE,OAAL;AAAc;AACV,+CACOM,KADP;AAEIR,UAAAA,UAAU,EAAE;AAFhB;AAIH;AAZL;AAcH,CAfD;;AAiBA,eAAeO,OAAf","sourcesContent":["export const initialState = {\r\n    isLoggedIn: false,\r\n};\r\n\r\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름\r\nexport const LOG_OUT = 'LOG_OUT';\r\n\r\nexport const loginAction = (data) => {\r\n    return {\r\n        type: LOG_IN,\r\n        data,\r\n    }\r\n};\r\n\r\nexport const logoutAction = {\r\n    type: LOG_OUT,\r\n};\r\n\r\nconst reducer =  (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOG_IN: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n            };\r\n        }\r\n        case LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}